{"version":3,"file":"static/js/539.627a5cd8.chunk.js","mappings":"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","sources":["utils/navigation-util.tsx","components/Sidebar/DrawerContent.tsx","components/Sidebar/index.tsx","hook/useResponsive.tsx","hook/useRouter.tsx","utils/theme-util.ts"],"sourcesContent":["import {\n  Notification,\n  MoneySend,\n  Profile2User,\n  Box,\n  Chart,\n  NoteFavorite,\n  // LogoutCurve,\n  // SecurityUser,\n} from 'iconsax-react';\nimport React from 'react';\nimport { ROUTE_PATH } from './route-util';\n\ntype Navigation = {\n  title: string;\n  toUrl: string;\n  icon: React.ReactNode;\n  onClick?: () => void;\n}[];\n\nconst navigationUtil: Navigation = [\n  {\n    title: 'Dashboard',\n    toUrl: ROUTE_PATH.dashboard,\n    icon: <Chart size='24' variant='Bold' />,\n  },\n  {\n    title: 'Orders',\n    toUrl: ROUTE_PATH.orders,\n    icon: <NoteFavorite size='24' variant='Bold' />,\n  },\n  {\n    title: 'Customers',\n    toUrl: ROUTE_PATH.customers,\n    icon: <Profile2User size='24' variant='Bold' />,\n  },\n  {\n    title: 'Expense',\n    toUrl: ROUTE_PATH.expense,\n    icon: <MoneySend size='24' variant='Bold' />,\n  },\n  {\n    title: 'Reminder',\n    toUrl: ROUTE_PATH.reminder,\n    icon: <Notification size='24' variant='Bold' />,\n  },\n  // {\n  //   title: 'Stocks',\n  //   toUrl: ROUTE_PATH.stocks,\n  //   icon: <Box size='24' variant='Bold' />,\n  // },\n  // {\n  //   title: 'Manage Users',\n  // toUrl: ROUTE_PATH.manageusers,\n  //   icon: <SecurityUser size='24' />,\n  // },\n];\n\nexport default navigationUtil;\n","import {\n  Avatar,\n  Box,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { ArrowLeft2, LogoutCurve } from 'iconsax-react';\nimport { useDrawerContext } from 'context/DrawerContext';\nimport { useReminderContext } from 'context/ReminderContext';\nimport { motion } from 'framer-motion';\nimport { useAuthContext } from 'context/AuthContext';\nimport theme from 'theme/theme';\nimport useRouter, { ROUTE_PATH } from 'hook/useRouter';\nimport navigationUtil from 'utils/navigation-util';\nimport THEME_UTIL from 'utils/theme-util';\n\nconst DrawerContent = () => {\n  const { location, navigate } = useRouter();\n  const { openDrawer, setOpenDrawer, collapse, setCollapse } =\n    useDrawerContext();\n  const { reminderList } = useReminderContext();\n  const { logout } = useAuthContext();\n\n  return (\n    <>\n      <Avatar\n        variant='square'\n        src={'/images/mongkol_serey_logo_1000.png'}\n        alt='logo'\n        imgProps={{\n          sx: {\n            objectFit: 'contain',\n          },\n        }}\n        sx={{\n          mx: 'auto',\n          width: collapse ? 0 : 200,\n          height: collapse ? 0 : 200,\n        }}\n      />\n      <List\n        sx={{\n          height: `calc(100vh - ${collapse ? '0px' : '200px'})`,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        {navigationUtil.map((nav) => {\n          return (\n            <ListItem key={nav.title} sx={{ py: 0.5 }}>\n              <ListItemButton\n                sx={{\n                  position: 'relative',\n                  borderRadius: 2,\n                }}\n                onClick={() => {\n                  navigate(`${nav.toUrl}`);\n                  openDrawer && setOpenDrawer(false);\n                }}\n              >\n                {location.pathname.includes(nav.toUrl) && (\n                  <Box\n                    sx={{\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      bottom: 0,\n                      background: THEME_UTIL.goldGradientMain,\n                      zIndex: 0,\n                      borderRadius: 2,\n                    }}\n                    component={motion.div}\n                    layoutId='selectedNav'\n                  />\n                )}\n                <ListItemIcon\n                  sx={{\n                    minWidth: collapse ? 0 : undefined,\n                    zIndex: 2,\n                    color: location.pathname.includes(nav.toUrl)\n                      ? theme.palette.secondary.main\n                      : theme.palette.primary.main,\n                  }}\n                >\n                  {nav.icon}\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    !collapse && (\n                      <Stack direction={'row'} justifyContent='space-between'>\n                        <Typography\n                          color={theme.palette.secondary.light}\n                          fontWeight={'medium'}\n                        >\n                          {nav.title}\n                        </Typography>\n                        {nav.toUrl === ROUTE_PATH.reminder && reminderList && (\n                          <Box\n                            sx={{\n                              bgcolor: theme.palette.error.main,\n                              color: theme.palette.common.white,\n                              px: 1,\n                              borderRadius: 1,\n                            }}\n                          >\n                            {reminderList?.length}\n                          </Box>\n                        )}\n                      </Stack>\n                    )\n                  }\n                  primaryTypographyProps={{\n                    fontWeight: 500,\n                    color: location.pathname.includes(nav.toUrl)\n                      ? 'common.white'\n                      : 'secondary.main',\n                  }}\n                  sx={{\n                    zIndex: 1,\n                  }}\n                />\n              </ListItemButton>\n            </ListItem>\n          );\n        })}\n\n        <ListItem sx={{ py: 0.5 }}>\n          <ListItemButton\n            sx={{\n              position: 'relative',\n              borderRadius: 2,\n            }}\n            onClick={() => {\n              logout();\n              openDrawer && setOpenDrawer(false);\n            }}\n          >\n            <ListItemIcon\n              sx={{\n                minWidth: collapse ? 0 : undefined,\n                zIndex: 2,\n                color: theme.palette.primary.main,\n              }}\n            >\n              <LogoutCurve\n                size='24'\n                variant='Bold'\n                style={{ position: 'relative', left: -2 }}\n              />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                !collapse && (\n                  <Typography\n                    fontWeight={'medium'}\n                    color={theme.palette.secondary.light}\n                  >\n                    Exit\n                  </Typography>\n                )\n              }\n              primaryTypographyProps={{\n                fontWeight: 500,\n                color: 'secondary.main',\n              }}\n              sx={{\n                zIndex: 1,\n              }}\n            />\n          </ListItemButton>\n        </ListItem>\n\n        <Box flexGrow={1} />\n\n        <ListItem sx={{ py: 0.5 }}>\n          <ListItemButton\n            sx={{\n              position: 'relative',\n              borderRadius: 2,\n            }}\n            onClick={() => setCollapse(!collapse)}\n          >\n            <ListItemIcon\n              sx={{\n                minWidth: collapse ? 0 : undefined,\n                zIndex: 2,\n                color: theme.palette.primary.main,\n              }}\n            >\n              <ArrowLeft2\n                size='24'\n                variant='Bulk'\n                style={{ rotate: collapse ? '180deg' : '0deg' }}\n              />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                !collapse && (\n                  <Typography\n                    fontWeight={'medium'}\n                    color={theme.palette.secondary.light}\n                  >\n                    Collapse\n                  </Typography>\n                )\n              }\n              primaryTypographyProps={{\n                fontWeight: 500,\n                color: 'secondary.main',\n              }}\n              sx={{\n                zIndex: 1,\n              }}\n            />\n          </ListItemButton>\n        </ListItem>\n      </List>\n    </>\n  );\n};\n\nexport default DrawerContent;\n","import { Drawer } from '@mui/material';\nimport { useDrawerContext } from 'context/DrawerContext';\nimport useResponsive from 'hook/useResponsive';\nimport theme from 'theme/theme';\nimport DrawerContent from './DrawerContent';\n\nconst Sidebar = ({ drawerWidth }: { drawerWidth: string }) => {\n  const { isMdDown } = useResponsive();\n  const { openDrawer, collapse } = useDrawerContext();\n\n  return (\n    <>\n      <Drawer\n        variant={isMdDown ? 'temporary' : 'permanent'}\n        open={openDrawer}\n        anchor='left'\n        sx={{\n          '& .MuiDrawer-paper': {\n            width: collapse\n              ? 'auto'\n              : { xs: '100vw', sm: '40vw', md: drawerWidth },\n            border: 'none',\n            background: theme.palette.common.white,\n            borderRadius: 0,\n            boxShadow: '5px 0px 10px  #15223214',\n          },\n        }}\n      >\n        <DrawerContent />\n      </Drawer>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst useResponsive = () => {\n  const theme = useTheme();\n  const isSmDown = useMediaQuery(theme.breakpoints.down('sm'));\n  const isMdDown = useMediaQuery(theme.breakpoints.down('md'));\n  const isLgDown = useMediaQuery(theme.breakpoints.down('lg'));\n\n  return { theme, isSmDown, isLgDown, isMdDown };\n};\n\nexport default useResponsive;\n","import {\n  useNavigate,\n  useParams,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport { ROUTE_PATH } from 'utils/route-util';\n\nexport { ROUTE_PATH };\n\nconst useRouter = () => {\n  const navigate = useNavigate();\n  const urlParams = useParams();\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  return {\n    navigate,\n    urlParams,\n    location,\n    searchParams,\n    setSearchParams,\n  };\n};\n\nexport default useRouter;\n","const THEME_UTIL = {\n  goldGradientMain:\n    'linear-gradient(90deg, #A17B11 0%, #EDC650 38%, #B28E22 100%)',\n  goldGradientLight:\n    'linear-gradient(90deg, #AE8625 0%, #F7EF8A 30%, #D2AC47 73%, #EDC967 100%)',\n};\n\nexport default THEME_UTIL;\n"],"names":["title","toUrl","ROUTE_PATH","icon","Chart","size","variant","NoteFavorite","Profile2User","MoneySend","Notification","location","navigate","useRouter","openDrawer","setOpenDrawer","collapse","setCollapse","useDrawerContext","reminderList","useReminderContext","logout","useAuthContext","Avatar","src","alt","imgProps","sx","objectFit","mx","width","height","List","display","flexDirection","navigationUtil","nav","ListItem","py","ListItemButton","position","borderRadius","onClick","pathname","includes","Box","top","left","right","bottom","background","THEME_UTIL","zIndex","component","motion","layoutId","ListItemIcon","minWidth","undefined","color","theme","ListItemText","primary","Stack","direction","justifyContent","Typography","fontWeight","bgcolor","px","length","primaryTypographyProps","LogoutCurve","style","flexGrow","ArrowLeft2","rotate","drawerWidth","isMdDown","useResponsive","Drawer","open","anchor","xs","sm","md","border","boxShadow","useTheme","isSmDown","useMediaQuery","breakpoints","down","isLgDown","useNavigate","urlParams","useParams","useLocation","searchParams","setSearchParams","useSearchParams","goldGradientMain","goldGradientLight"],"sourceRoot":""}