{"version":3,"file":"static/js/904.0468e947.chunk.js","mappings":"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","sources":["components/CusIconButton/index.tsx","components/CusLoading/index.tsx","components/CusTextField/index.tsx","components/CusToggleButton/index.tsx","components/LabelTextField/index.tsx","components/PageHeader/index.tsx","hook/useResponsive.tsx","api/dashboard.ts","components/DashboardCard/index.tsx","pages/Dashboard/AnniversaryItem.tsx","pages/Dashboard/DashboardHeader.tsx","pages/Dashboard/PieChartComp.tsx","pages/Dashboard/index.tsx","utils/data-util.tsx","utils/theme-util.ts","utils/validate-util.tsx"],"sourcesContent":["import { IconButton } from '@mui/material';\nimport { styled } from '@mui/material';\n\nconst CusIconButton = styled(IconButton)(({ theme }) => ({\n  borderRadius: theme.spacing(1),\n  background: theme.palette.common.white,\n  boxShadow: theme.shadows[1],\n}));\n\nexport { CusIconButton };\n","import { Backdrop } from '@mui/material';\nimport React from 'react';\n\ninterface IBackdropLoading {\n  open: boolean;\n}\nconst CusBackDrop = React.memo(({ open = false }: IBackdropLoading) => {\n  return (\n    <Backdrop\n      sx={{\n        zIndex: (theme) => theme.zIndex.drawer + 1,\n      }}\n      open={open}\n    >\n      <div className='lds-facebook'>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </Backdrop>\n  );\n});\n\nconst CusLoading = React.memo(() => {\n  return (\n    <div className='lds-facebook'>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n});\n\nexport { CusBackDrop, CusLoading };\n","import { TextField } from '@mui/material';\nimport { styled } from '@mui/material';\n\nconst CusTextField = styled(TextField)(({ theme }) => ({\n  background: theme.palette.common.white,\n  borderRadius: theme.spacing(1),\n  boxShadow: theme.shadows[1],\n  '& fieldset': {\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.spacing(1),\n  },\n}));\n\nexport default CusTextField;\n","import { ToggleButton } from '@mui/material';\nimport { styled } from '@mui/material';\n// import THEME_UTIL from 'utils/theme-util';\n\nconst CusToggleButton = styled(ToggleButton)(({ theme }) => ({\n  border: 'none',\n  borderRadius: 8,\n  background: theme.palette.common.white,\n  color: theme.palette.primary.main,\n  boxShadow: theme.shadows[1],\n  '&.Mui-selected': {\n    // background: THEME_UTIL.goldGradientMain,\n    background: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    '&:hover': {\n      background: theme.palette.primary.main,\n\n      // background: THEME_UTIL.goldGradientLight,\n    },\n  },\n}));\n\nexport default CusToggleButton;\n","import { Stack, Typography } from '@mui/material';\nimport React from 'react';\n\nconst LabelTextField = ({\n  label,\n  children,\n}: {\n  label: string;\n  children: React.ReactNode;\n}) => {\n  return (\n    <Stack spacing={1} width='100%'>\n      <Typography fontSize={14}>{label}</Typography>\n      {children}\n    </Stack>\n  );\n};\n\nexport default LabelTextField;\n","import { AppBar, Toolbar, Grid, Typography } from '@mui/material';\nimport { CusIconButton } from 'components/CusIconButton';\nimport React from 'react';\nimport { HambergerMenu } from 'iconsax-react';\nimport useResponsive from 'hook/useResponsive';\nimport { useDrawerContext } from 'context/DrawerContext';\n\nconst PageHeader = ({\n  children,\n  pageTitle,\n  endComponent,\n}: {\n  children?: React.ReactNode;\n  endComponent?: React.ReactNode;\n  pageTitle: string;\n}) => {\n  const { isMdDown } = useResponsive();\n  const { openDrawer, setOpenDrawer } = useDrawerContext();\n\n  return (\n    <AppBar\n      position='sticky'\n      sx={{\n        bgcolor: isMdDown\n          ? (theme) => theme.palette.common.white\n          : 'background.paper',\n        boxShadow: 'none',\n        borderRadius: 0,\n        mb: 1,\n      }}\n    >\n      <Toolbar sx={{ py: 2, px: { sm: 0 } }}>\n        <Grid container px={2}>\n          <Grid item xs={12} md='auto'>\n            <Grid container>\n              <Grid item xs>\n                <CusIconButton\n                  onClick={() => setOpenDrawer(!openDrawer)}\n                  color='primary'\n                  sx={{\n                    height: 40,\n                    display: {\n                      xs: 'block',\n                      md: 'none',\n                    },\n                  }}\n                >\n                  <HambergerMenu size='24' variant='Outline' />\n                </CusIconButton>\n              </Grid>\n              <Grid item xs>\n                <Typography variant='h4' fontWeight='bolder'>\n                  {pageTitle}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                xs\n                sx={{ display: 'flex', justifyContent: 'flex-end' }}\n              >\n                {isMdDown && endComponent}\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} md>\n            {children}\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default PageHeader;\n","import { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst useResponsive = () => {\n  const theme = useTheme();\n  const isSmDown = useMediaQuery(theme.breakpoints.down('sm'));\n  const isMdDown = useMediaQuery(theme.breakpoints.down('md'));\n  const isLgDown = useMediaQuery(theme.breakpoints.down('lg'));\n\n  return { theme, isSmDown, isLgDown, isMdDown };\n};\n\nexport default useResponsive;\n","import HttpUtil from 'utils/http-util';\nimport { ROUTE_API } from 'utils/route-util';\n\nconst DASHBOARD_API = {\n  getCharts: async () => {\n    const res: IDashboard.IChart = await HttpUtil.get(ROUTE_API.charts);\n    return res;\n  },\n  getTotals: async ({\n    startDate,\n    endDate,\n  }: {\n    startDate: string;\n    endDate: string;\n  }) => {\n    const res: IDashboard.IDashboardData = await HttpUtil.get(\n      ROUTE_API.totals,\n      {\n        params: {\n          startDate: startDate,\n          endDate: endDate,\n        },\n      }\n    );\n    return res;\n  },\n};\n\nexport default DASHBOARD_API;\n","import {\n  Avatar,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Paper,\n  Stack,\n  Tooltip,\n  Typography,\n  alpha,\n  useTheme,\n} from '@mui/material';\nimport { ArrowDown, ArrowUp } from 'iconsax-react';\n\nconst DashboardCard = ({\n  title,\n  icon,\n  value,\n  endTitle,\n  primaryIcon,\n  primaryText,\n  secondaryIcon,\n  secondaryText,\n  primaryReverse,\n  secondaryReverse,\n  primaryTooltip = '',\n  secondaryTooltip = '',\n}: {\n  title: string;\n  icon: React.ReactNode;\n  value: string;\n  primaryReverse?: boolean;\n  secondaryReverse?: boolean;\n  primaryText?: string;\n  primaryIcon?: React.ReactNode;\n  secondaryText?: string;\n  secondaryIcon?: React.ReactNode;\n  endTitle?: string;\n  primaryTooltip?: string;\n  secondaryTooltip?: string;\n}) => {\n  const theme = useTheme();\n  return (\n    <Paper\n      elevation={1}\n      sx={{\n        p: 2,\n        width: '100%',\n        height: '100%',\n        borderRadius: 3,\n        background: theme.palette.common.white,\n      }}\n    >\n      <Typography color='text.secondary'>{title}</Typography>\n      <Stack\n        direction={'row'}\n        alignItems='center'\n        justifyContent={'space-between'}\n      >\n        <List disablePadding dense>\n          <Tooltip title={primaryTooltip} placement='top'>\n            <ListItem\n              disableGutters\n              disablePadding\n              sx={{\n                flexDirection: primaryReverse ? 'row-reverse' : 'row',\n                cursor: 'pointer',\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  minWidth: 0,\n                  mr: 1,\n                  ml: primaryReverse ? 1 : 0,\n                }}\n              >\n                <div>{primaryIcon}</div>\n              </ListItemIcon>\n              <ListItemText\n                primary={primaryText}\n                primaryTypographyProps={{\n                  sx: {\n                    fontWeight: theme.typography.fontWeightBold,\n                    fontSize: theme.typography.h6,\n                  },\n                }}\n              />\n            </ListItem>\n          </Tooltip>\n          {secondaryText && (\n            <Tooltip title={secondaryTooltip} placement='top'>\n              <ListItem\n                disableGutters\n                disablePadding\n                sx={{\n                  flexDirection: secondaryReverse ? 'row-reverse' : 'row',\n                  cursor: 'pointer',\n                }}\n              >\n                <ListItemIcon\n                  sx={{ minWidth: 0, mr: 1, ml: secondaryReverse ? 1 : 0 }}\n                >\n                  <div>{secondaryIcon}</div>\n                </ListItemIcon>\n                <ListItemText\n                  primary={secondaryText}\n                  primaryTypographyProps={{\n                    sx: {\n                      fontWeight: theme.typography.fontWeightBold,\n                      fontSize: theme.typography.h6,\n                      lineHeight: 0.5,\n                    },\n                  }}\n                />\n              </ListItem>\n            </Tooltip>\n          )}\n        </List>\n        <Avatar\n          sx={{\n            background: alpha(theme.palette.primary.light, 0.3),\n            border: `dashed 1px ${theme.palette.primary.main}`,\n            height: 64,\n            width: 64,\n            color: theme.palette.primary.main,\n          }}\n        >\n          {icon}\n        </Avatar>\n      </Stack>\n      {!isNaN(+value) && (\n        <Stack\n          direction={'row'}\n          spacing={0.5}\n          alignItems='center'\n          justifyContent={'flex-end'}\n        >\n          <Typography\n            variant='caption'\n            fontWeight={'bold'}\n            sx={{\n              color:\n                +value > 0\n                  ? theme.palette.success.main\n                  : theme.palette.error.main,\n            }}\n          >\n            {value.startsWith('-')\n              ? Intl.NumberFormat('en', {\n                  maximumFractionDigits: 2,\n                }).format(+value.slice(1))\n              : Intl.NumberFormat('en', {\n                  maximumFractionDigits: 2,\n                }).format(+value)}\n            %\n          </Typography>\n          <div>\n            {+value > 0 ? (\n              <ArrowUp size='12' color={theme.palette.success.main} />\n            ) : (\n              <ArrowDown size='12' color={theme.palette.error.main} />\n            )}\n          </div>\n          <Typography\n            variant='caption'\n            sx={{ color: theme.palette.text.secondary }}\n          >\n            than last {endTitle}\n          </Typography>\n        </Stack>\n      )}\n    </Paper>\n  );\n};\n\nexport default DashboardCard;\n","import {\n  ListItem,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n} from '@mui/material';\nimport { User } from 'iconsax-react';\nimport theme from 'theme/theme';\nimport THEME_UTIL from 'utils/theme-util';\nimport { changeBackground } from 'utils/validate-util';\n\nconst AnniversaryItem = ({\n  daysLeft,\n  name,\n  invoiceId,\n  eventType,\n  onClick,\n}: {\n  name: string;\n  daysLeft: number;\n  invoiceId: number;\n  eventType?: string;\n  onClick?: () => void;\n}) => {\n  return (\n    <>\n      <ListItemButton onClick={onClick}>\n        <ListItem\n          sx={{\n            px: 1,\n            py: 0,\n          }}\n          secondaryAction={\n            daysLeft === 0 ? (\n              <Typography\n                fontSize={14}\n                color={theme.palette.success.main}\n                fontWeight='bold'\n              >\n                Today\n              </Typography>\n            ) : (\n              <Typography fontSize={14} color='error.main' fontWeight='bold'>\n                {daysLeft}Days\n              </Typography>\n            )\n          }\n        >\n          <ListItemAvatar>\n            <Avatar\n              sx={{\n                background: !!name\n                  ? changeBackground(name)\n                  : THEME_UTIL.goldGradientMain,\n                fontWeight: 'bold',\n              }}\n            >\n              {!!name ? (\n                name.charAt(0)\n              ) : (\n                <User color={theme.palette.common.white} variant='Bold' />\n              )}\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={`Order ID: ${invoiceId} ~ ${eventType}`}\n            secondary={name}\n          />\n        </ListItem>\n      </ListItemButton>\n    </>\n  );\n};\n\nexport default AnniversaryItem;\n","import {\n  Avatar,\n  Badge,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  ListSubheader,\n  Menu,\n  Popover,\n  Stack,\n  ToggleButtonGroup,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { useEffect } from 'react';\nimport { CusIconButton } from 'components/CusIconButton';\nimport { BoxRemove, Calendar2, User } from 'iconsax-react';\nimport { Notification } from 'iconsax-react';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useReminderContext } from 'context/ReminderContext';\nimport { CusLoading } from 'components/CusLoading';\nimport React from 'react';\nimport CusToggleButton from 'components/CusToggleButton';\nimport PageHeader from 'components/PageHeader';\nimport moment from 'moment';\nimport CusTextField from 'components/CusTextField';\nimport LabelTextField from 'components/LabelTextField';\nimport useResponsive from 'hook/useResponsive';\nimport THEME_UTIL from 'utils/theme-util';\nimport { useNavigate } from 'react-router-dom';\nimport { ROUTE_PATH } from 'utils/route-util';\n\ninterface IDateRange {\n  startDate: string;\n  endDate: string;\n}\n\nconst DashboardHeader = ({\n  setDateRange,\n  toggleValue,\n  setToggleValue,\n}: {\n  toggleValue: string | null;\n  setToggleValue: React.Dispatch<React.SetStateAction<string | null>>;\n  setDateRange: React.Dispatch<\n    React.SetStateAction<{\n      startDate: string;\n      endDate: string;\n    }>\n  >;\n}) => {\n  // ancher notification\n  const [anchorElNotification, setAnchorElNotification] =\n    React.useState<null | HTMLElement>(null);\n  // anchor datepicker\n  const [anchorElDatePicker, setAnchorElDatePicker] =\n    React.useState<null | HTMLElement>(null);\n\n  useEffect(() => {\n    let monday = moment().weekday(0);\n    let friday = moment().weekday(6);\n    switch (toggleValue) {\n      case 'month':\n        return setDateRange({\n          startDate: moment().startOf('month').format('YYYY-MM-DD'),\n          endDate: moment().endOf('month').format('YYYY-MM-DD'),\n        });\n      case 'year':\n        return setDateRange({\n          startDate: moment().startOf('year').format('YYYY-MM-DD'),\n          endDate: moment().endOf('year').format('YYYY-MM-DD'),\n        });\n      case 'week':\n        return setDateRange({\n          startDate: moment(monday).format('YYYY-MM-DD'),\n          endDate: moment(friday).format('YYYY-MM-DD'),\n        });\n      default:\n        return;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggleValue]);\n\n  // Validate date range\n  const { handleSubmit, control } = useForm<IDateRange>();\n  const handleSubmitDate = (data: IDateRange) => {\n    setDateRange({\n      startDate: moment(data.startDate).format('YYYY-MM-DD'),\n      endDate: moment(data.endDate).format('YYYY-MM-DD'),\n    });\n    setToggleValue(null);\n  };\n  // notification\n  const handleClickNoti = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorElNotification(event.currentTarget);\n  };\n  // datepicker\n  const handleClickDatepicker = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setAnchorElDatePicker(event.currentTarget);\n  };\n  // handle close\n  const handleClose = (type: string) => {\n    if (type === 'notification') {\n      setAnchorElNotification(null);\n    } else if (type === 'datepicker') {\n      setAnchorElDatePicker(null);\n    }\n  };\n  // fetch notifications\n  const { reminderList, reminderLoading } = useReminderContext();\n\n  const temp = reminderList?.filter(\n    (el) => moment().diff(el.date, 'years') === 1\n  );\n\n  const { isSmDown } = useResponsive();\n  const theme = useTheme();\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <PageHeader\n        pageTitle='Dashboard'\n        endComponent={\n          <>\n            <CusIconButton\n              color='primary'\n              onClick={handleClickNoti}\n              sx={{ height: 40 }}\n            >\n              <Notification size='24' variant='Bold' />\n            </CusIconButton>\n          </>\n        }\n      >\n        <Stack\n          direction={'row'}\n          justifyContent='flex-end'\n          sx={{ width: '100%', mt: { xs: 2, md: 0 } }}\n          alignItems='center'\n        >\n          <ToggleButtonGroup\n            value={toggleValue}\n            exclusive\n            fullWidth\n            size='small'\n            onChange={(\n              event: React.MouseEvent<HTMLElement, MouseEvent>,\n              value: any\n            ) => {\n              if (value !== null) {\n                setToggleValue(value);\n              }\n            }}\n            sx={{\n              width: { xs: '100%', md: '30%' },\n              height: 40,\n              mr: 2,\n            }}\n          >\n            <CusToggleButton value='week'>Week</CusToggleButton>\n            <CusToggleButton value='month'>Month</CusToggleButton>\n            <CusToggleButton value='year'>Year</CusToggleButton>\n          </ToggleButtonGroup>\n          <CusIconButton\n            color='primary'\n            onClick={handleClickDatepicker}\n            sx={{\n              mr: { xs: 0, md: 2 },\n            }}\n          >\n            <Calendar2 size='24' variant='Outline' />\n          </CusIconButton>\n          <Badge color='error' badgeContent={temp?.length}>\n            <CusIconButton\n              color='primary'\n              onClick={handleClickNoti}\n              sx={{\n                display: {\n                  xs: 'none',\n                  md: 'block',\n                },\n                height: 40,\n              }}\n            >\n              <Notification size='24' variant='Bold' />\n            </CusIconButton>\n          </Badge>\n        </Stack>\n      </PageHeader>\n      <Menu\n        MenuListProps={{ sx: { p: 0 } }}\n        sx={{\n          mt: 1,\n          height: 350,\n        }}\n        anchorEl={anchorElNotification}\n        open={Boolean(anchorElNotification)}\n        onClose={() => handleClose('notification')}\n      >\n        <List\n          disablePadding\n          sx={{\n            width: 350,\n            px: 2,\n            pb: 2,\n          }}\n        >\n          <ListSubheader\n            sx={{\n              p: 2,\n              pl: 0,\n              background: (theme) => theme.palette.common.white,\n            }}\n          >\n            <Typography\n              variant='subtitle1'\n              fontWeight={theme.typography.fontWeightBold}\n            >\n              Anniverysary\n            </Typography>\n          </ListSubheader>\n          {reminderLoading ? (\n            <Stack\n              alignItems={'center'}\n              justifyContent='center'\n              height={'100%'}\n            >\n              <CusLoading />\n            </Stack>\n          ) : temp && temp.length > 0 ? (\n            reminderList?.map(\n              (data) =>\n                moment().diff(data.date, 'years') === 1 && (\n                  <ListItemButton\n                    onClick={() =>\n                      navigate(`${ROUTE_PATH.orders}?id=${data.id}`)\n                    }\n                  >\n                    <ListItem\n                      key={data.id}\n                      sx={{\n                        px: 1,\n                        py: 0,\n                      }}\n                      secondaryAction={\n                        <Typography\n                          fontSize={14}\n                          color={theme.palette.success.main}\n                          fontWeight='bold'\n                        >\n                          Today\n                        </Typography>\n                      }\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            background: THEME_UTIL.goldGradientMain,\n                            fontWeight: 'bold',\n                          }}\n                        >\n                          {data.customer !== null ? (\n                            data.customer.customer_name.charAt(0).toUpperCase()\n                          ) : (\n                            <User\n                              color={theme.palette.common.white}\n                              variant='Bold'\n                            />\n                          )}\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={`Order ID: ${data.id} ~ ${data.type}`}\n                        secondary={\n                          data.customer === null\n                            ? 'No Customer'\n                            : data.customer.customer_name\n                        }\n                      />\n                    </ListItem>\n                  </ListItemButton>\n                )\n            )\n          ) : (\n            <Stack\n              alignItems={'center'}\n              justifyContent='center'\n              height={'100%'}\n              spacing={1}\n            >\n              <BoxRemove size='48' color={theme.palette.error.main} />\n              <Typography variant='h6' color='error'>\n                No Notification\n              </Typography>\n            </Stack>\n          )}\n        </List>\n      </Menu>\n      {/* pop over */}\n      <Popover\n        id={Boolean(anchorElDatePicker) ? 'simple-popover' : undefined}\n        open={Boolean(anchorElDatePicker)}\n        anchorEl={anchorElDatePicker}\n        onClose={() => handleClose('datepicker')}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        sx={{ mt: 1 }}\n      >\n        <form\n          style={{ height: '100%' }}\n          onSubmit={handleSubmit(handleSubmitDate)}\n        >\n          <Stack sx={{ p: 2, height: '100%' }} spacing={2}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Stack direction={isSmDown ? 'column' : 'row'} spacing={2}>\n                <Controller\n                  control={control}\n                  name='startDate'\n                  render={({ field }) => (\n                    <LabelTextField label='Start date'>\n                      <DatePicker\n                        openTo='day'\n                        views={['year', 'month', 'day']}\n                        value={field.value}\n                        onChange={(date) => {\n                          field.onChange(date);\n                        }}\n                        renderInput={(params) => <CusTextField {...params} />}\n                      />\n                    </LabelTextField>\n                  )}\n                />\n                <Controller\n                  control={control}\n                  name='endDate'\n                  render={({ field }) => (\n                    <LabelTextField label='End date'>\n                      <DatePicker\n                        openTo='day'\n                        views={['year', 'month', 'day']}\n                        value={field.value}\n                        onChange={(date) => {\n                          field.onChange(date);\n                        }}\n                        renderInput={(params) => <CusTextField {...params} />}\n                      />\n                    </LabelTextField>\n                  )}\n                />\n              </Stack>\n            </LocalizationProvider>\n            <Button\n              variant='contained'\n              type='submit'\n              onClick={() => handleClose('datepicker')}\n              sx={{\n                width: '100%',\n                color: (theme) => theme.palette.common.white,\n                borderRadius: 2,\n                boxShadow: 0,\n              }}\n            >\n              Confirm\n            </Button>\n          </Stack>\n        </form>\n      </Popover>\n    </>\n  );\n};\n\nexport default DashboardHeader;\n","import React from 'react';\nimport {\n  Pie,\n  Cell,\n  PieChart,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport theme from 'theme/theme';\n\nconst COLORS = [\n  theme.palette.primary.main,\n  theme.palette.success.main,\n  theme.palette.warning.main,\n  theme.palette.error.main,\n];\n\nconst PieChartComp = ({\n  dashTotal,\n}: {\n  dashTotal: IDashboard.IDashboardData | undefined;\n}) => {\n  const data = [\n    { name: 'Wedding', value: dashTotal?.eventType.Wedding },\n    { name: 'Birthday', value: dashTotal?.eventType.Birthday },\n    { name: 'Party', value: dashTotal?.eventType.Party },\n    { name: 'Other', value: dashTotal?.eventType.Other },\n  ];\n\n  return (\n    <ResponsiveContainer width='100%' height='65%'>\n      <PieChart margin={{ bottom: 24, left: 56, right: 56 }}>\n        <Legend />\n        <Tooltip />\n        <Pie\n          data={data}\n          innerRadius={60}\n          outerRadius={80}\n          paddingAngle={5}\n          dataKey='value'\n        >\n          {data.map((_, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default PieChartComp;\n","import {\n  Box,\n  Divider,\n  Grid,\n  List,\n  Paper,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport DASHBOARD_API from 'api/dashboard';\nimport { CusLoading } from 'components/CusLoading';\nimport DashboardCard from 'components/DashboardCard';\nimport useResponsive from 'hook/useResponsive';\nimport {\n  BoxRemove,\n  MoneyRecive,\n  MoneySend,\n  Profile2User,\n  StatusUp,\n} from 'iconsax-react';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport theme from 'theme/theme';\nimport { MonthRanks, PercentFilter } from 'utils/data-util';\nimport { DataFormater, formatCash } from 'utils/validate-util';\nimport AnniversaryItem from './AnniversaryItem';\nimport DashboardHeader from './DashboardHeader';\nimport PieChartComp from './PieChartComp';\nimport { useRequest } from 'ahooks';\nimport { useNavigate } from 'react-router-dom';\nimport { ROUTE_PATH } from 'utils/route-util';\n\nconst Dashboard = () => {\n  // use moment\n  let monday = moment().weekday(0);\n  let friday = moment().weekday(6);\n  const [currentTime, setCurrentTime] = useState(moment());\n  const [toggleValue, setToggleValue] = useState<string | null>('week');\n  const [dateRange, setDateRange] = useState({\n    startDate: moment(monday).format('YYYY-MM-DD'),\n    endDate: moment(friday).format('YYYY-MM-DD'),\n  });\n  const [loadingDateRange, setLoadingDateRange] = useState(false);\n  const { isMdDown } = useResponsive();\n  const navigate = useNavigate();\n\n  // fetch total\n  const {\n    data: dashTotal,\n    run: fetchDashTotal,\n    loading: isDashLoading,\n  } = useRequest(DASHBOARD_API.getTotals, {\n    manual: true,\n    onSuccess: () => setLoadingDateRange(false),\n  });\n  // fetch chart\n  const { data: chartData, loading: isLoadingChart } = useRequest(\n    DASHBOARD_API.getCharts,\n    { manual: false }\n  );\n  // useEffect total\n  useEffect(() => {\n    fetchDashTotal({\n      startDate: dateRange.startDate,\n      endDate: dateRange.endDate,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dateRange]);\n\n  useEffect(() => {\n    setLoadingDateRange(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggleValue]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(moment());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n  const CHART1_DATA = chartData?.charts.map((data) => {\n    return {\n      name: MonthRanks[data.month],\n      Events: data.amount,\n    };\n  });\n\n  const CHART2_DATA = chartData?.charts.map((data) => {\n    return {\n      name: MonthRanks[data.month],\n      Sales: data.profits,\n      Expenses: data.expenses,\n    };\n  });\n  // get table by events\n\n  const getTables = (value: number) => {\n    if (chartData?.charts) {\n      let temp = [...chartData.charts];\n      temp = temp?.filter((data) => data.amount === value);\n      return temp[0].tables;\n    }\n  };\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <Box\n          sx={{\n            background: (theme) => theme.palette.background.default,\n            p: 1,\n            boxShadow: (theme) => theme.shadows[1],\n          }}\n        >\n          <Typography>{label}</Typography>\n          <Typography color={'primary.main'}>\n            Events: {payload[0].value}\n          </Typography>\n          <Typography color='info.main'>\n            Tables: {getTables(parseInt(payload[0].value))}\n          </Typography>\n        </Box>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <>\n      <DashboardHeader\n        {...{ setDateRange, fetchDashTotal, setToggleValue, toggleValue }}\n      />\n      {isDashLoading && isLoadingChart ? (\n        <Stack\n          sx={{ height: 'calc( 100vh - 74px )' }}\n          justifyContent='center'\n          alignItems={'center'}\n        >\n          <CusLoading />\n        </Stack>\n      ) : (\n        <>\n          <Stack direction={'row'}>\n            <Grid container spacing={2} px={2}>\n              {isDashLoading ? (\n                <Grid\n                  item\n                  xs={12}\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '146px',\n                  }}\n                >\n                  <CusLoading />\n                </Grid>\n              ) : (\n                <>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Profits'\n                      primaryTooltip={`${Intl.NumberFormat('en', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(\n                        dashTotal?.totalProfits\n                          ? dashTotal?.totalProfits - dashTotal?.totalExpenses\n                          : 0\n                      )}`}\n                      value={`${\n                        chartData?.Percentage.totalProfits[\n                          +PercentFilter[`${toggleValue}`]\n                        ]\n                      }`}\n                      icon={<MoneyRecive />}\n                      endTitle={`${toggleValue}`}\n                      primaryIcon={\n                        <Typography\n                          variant='h6'\n                          sx={{\n                            color: (theme) => theme.palette.info.main,\n                          }}\n                        >\n                          $\n                        </Typography>\n                      }\n                      primaryText={DataFormater(\n                        dashTotal?.totalProfits\n                          ? dashTotal?.totalProfits - dashTotal?.totalExpenses\n                          : 0\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Expenses'\n                      icon={<MoneySend />}\n                      endTitle={`${toggleValue}`}\n                      primaryTooltip={`${Intl.NumberFormat('en', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(dashTotal?.totalExpenses || 0)}`}\n                      value={`${\n                        chartData?.Percentage.totalExpenses[\n                          +PercentFilter[`${toggleValue}`]\n                        ]\n                      }`}\n                      primaryIcon={\n                        <Typography\n                          variant='h6'\n                          sx={{ color: (theme) => theme.palette.info.main }}\n                        >\n                          $\n                        </Typography>\n                      }\n                      primaryText={DataFormater(dashTotal?.totalExpenses || 0)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Orders'\n                      endTitle={`${toggleValue}`}\n                      primaryTooltip={`${Intl.NumberFormat().format(\n                        dashTotal?.totalOrders || 0\n                      )}`}\n                      secondaryTooltip={`${dashTotal?.totalTables || 0}`}\n                      icon={<StatusUp />}\n                      primaryReverse={true}\n                      secondaryReverse={true}\n                      primaryIcon={\n                        <Typography\n                          variant='caption'\n                          sx={{ color: (theme) => theme.palette.info.main }}\n                        >\n                          Events\n                        </Typography>\n                      }\n                      secondaryIcon={\n                        <Typography\n                          variant='caption'\n                          sx={{ color: (theme) => theme.palette.info.main }}\n                        >\n                          Tables\n                        </Typography>\n                      }\n                      value={`${\n                        chartData?.Percentage.totalOrders[\n                          +PercentFilter[`${toggleValue}`]\n                        ]\n                      }`}\n                      primaryText={`${DataFormater(\n                        dashTotal?.totalOrders || 0\n                      )}`}\n                      secondaryText={`${DataFormater(\n                        dashTotal?.totalTables || 0\n                      )}`}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Customers'\n                      endTitle={`${toggleValue}`}\n                      primaryReverse={true}\n                      primaryTooltip={`${Intl.NumberFormat().format(\n                        dashTotal?.totalCustomer || 0\n                      )}`}\n                      primaryIcon={\n                        <Typography\n                          variant='caption'\n                          sx={{ color: (theme) => theme.palette.info.main }}\n                        >\n                          Customers\n                        </Typography>\n                      }\n                      icon={<Profile2User />}\n                      value={`${\n                        chartData?.Percentage.totalCustomer[\n                          +PercentFilter[`${toggleValue}`]\n                        ]\n                      }`}\n                      primaryText={`${dashTotal?.totalCustomer || 0}`}\n                    />\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </Stack>\n          <Stack\n            mt={2}\n            px={2}\n            direction={{ xs: 'column-reverse', md: 'row' }}\n            spacing={2}\n            height={{ xs: 1020, md: 400 }}\n          >\n            <Paper\n              elevation={1}\n              sx={{\n                width: { xs: '100%', md: '60%' },\n                py: 3,\n                pr: 5,\n              }}\n            >\n              <Typography fontWeight={500} variant='h5' ml={5} mb={3}>\n                Events\n              </Typography>\n\n              <ResponsiveContainer width='100%' height='90%'>\n                <BarChart\n                  data={CHART1_DATA}\n                  barSize={25}\n                  layout={isMdDown ? 'vertical' : 'horizontal'}\n                >\n                  <CartesianGrid vertical={false} />\n\n                  {isMdDown ? (\n                    <>\n                      <XAxis type='number' domain={[0, 20]} />\n                      <YAxis dataKey='name' type='category' />\n                    </>\n                  ) : (\n                    <>\n                      <XAxis dataKey='name' />\n                      <YAxis domain={[0, 20]} />\n                    </>\n                  )}\n                  <Tooltip content={<CustomTooltip />} />\n                  <Bar\n                    dataKey='Events'\n                    fill={theme.palette.primary.main}\n                    orientation='top'\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n\n            <Paper\n              sx={{\n                flexGrow: 1,\n                height: '100%',\n                overflow: 'auto',\n              }}\n            >\n              <Typography\n                fontWeight={600}\n                fontSize={18}\n                px={3}\n                pt={3}\n                pb={2}\n                position='sticky'\n                top={0}\n                zIndex={theme.zIndex.appBar - 1}\n                bgcolor='common.white'\n              >\n                Upcoming Event\n              </Typography>\n              {chartData && chartData?.reminder.length > 0 ? (\n                <List\n                  sx={{\n                    bgcolor: 'common.white',\n                    p: 0,\n                  }}\n                >\n                  {chartData?.reminder.map((data, i) => {\n                    const getCount = moment.duration(\n                      moment(data.date).diff(currentTime)\n                    );\n                    return (\n                      <AnniversaryItem\n                        key={data.id}\n                        onClick={() =>\n                          navigate(`${ROUTE_PATH.orders}?id=${data.id}`)\n                        }\n                        daysLeft={getCount.days()}\n                        name={\n                          data.customer !== null\n                            ? data.customer.customer_name\n                            : 'No Customer'\n                        }\n                        invoiceId={data.id}\n                        eventType={data.type}\n                      />\n                    );\n                  })}\n                </List>\n              ) : (\n                <Stack\n                  direction={'column'}\n                  alignItems={'center'}\n                  justifyContent='center'\n                  spacing={1}\n                  sx={{ height: 'calc(100% - 100px)' }}\n                >\n                  <BoxRemove size='64' color={theme.palette.error.main} />\n                  <Typography variant='body1' color='error'>\n                    No upcoming event\n                  </Typography>\n                </Stack>\n              )}\n            </Paper>\n          </Stack>\n          <Stack\n            mt={2}\n            px={2}\n            direction={{ xs: 'column', md: 'row' }}\n            spacing={2}\n            height={{ xs: 1300, md: 400 }}\n            mb={4}\n          >\n            <Paper\n              elevation={1}\n              sx={{\n                width: { xs: '100%', md: '60%' },\n                height: { xs: 800, md: 'auto' },\n                py: 3,\n                pr: 5,\n              }}\n            >\n              <Stack direction={'row'} justifyContent='space-between'>\n                <Typography fontWeight={500} variant='h5' ml={5} mb={3}>\n                  Sales Report\n                </Typography>\n\n                <Typography fontWeight={500} variant='subtitle1' mb={3}>\n                  {isDashLoading || loadingDateRange\n                    ? 'Calculating Income...'\n                    : `${\n                        'Total Income: $' +\n                        formatCash(\n                          dashTotal?.totalProfits ? dashTotal?.totalProfits : 0\n                        )\n                      }${\n                        toggleValue ? `/this ${toggleValue}` : `/specific date`\n                      }`}\n                </Typography>\n              </Stack>\n              <ResponsiveContainer width='100%' height='90%'>\n                <BarChart\n                  data={CHART2_DATA}\n                  barSize={15}\n                  layout={isMdDown ? 'vertical' : 'horizontal'}\n                >\n                  <CartesianGrid vertical={false} />\n                  {isMdDown ? (\n                    <>\n                      <XAxis type='number' domain={[0, 100000]} />\n                      <YAxis\n                        dataKey='name'\n                        type='category'\n                        tickFormatter={DataFormater}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <XAxis dataKey='name' />\n                      <YAxis\n                        type='number'\n                        domain={[0, 100000]}\n                        tickFormatter={DataFormater}\n                      />\n                      <Tooltip />\n                    </>\n                  )}\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey='Sales' fill={theme.palette.success.main} />\n                  <Bar dataKey='Expenses' fill={theme.palette.error.main} />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n\n            <Paper\n              className='hide-scrollbar'\n              sx={{\n                px: 3,\n                flexGrow: 1,\n                overflow: 'auto',\n                height: { xs: 'auto', md: '100%' },\n                position: 'relative',\n              }}\n            >\n              <Typography\n                fontWeight={600}\n                fontSize={18}\n                pt={3}\n                pb={2}\n                position='sticky'\n                top={0}\n                zIndex={theme.zIndex.appBar}\n                bgcolor='common.white'\n              >\n                Type of Event\n              </Typography>\n              <PieChartComp {...{ dashTotal }} />\n              <Box\n                position='absolute'\n                bottom={0}\n                left={0}\n                width={'100%'}\n                px={3}\n              >\n                <Divider\n                  sx={{\n                    borderBottomWidth: 0.1,\n                    borderColor: theme.palette.divider,\n                  }}\n                />\n              </Box>\n            </Paper>\n          </Stack>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n","import { IExpenseRow } from 'pages/Expense/ExpenseDialogs';\n\nconst listTitle: IExpenseRow[] = [\n  {\n    id: undefined,\n    title: 'កម្លាំងចុងភៅ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ថ្លៃជួលសម្ភារៈ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ឡានដឹក',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ហ្គាស',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់ជ្រូក',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់ទា',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់គោ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់មាន់',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'គ្រឿងសមុទ្រ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់ពពែ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីឆ្ដោរ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីឆ្ដុង',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីតុកែ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីសុងហឺ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ជ្រូកខ្វៃ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ទាខ្វៃ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'បន្លែ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ប្រហិតបាក់សៀប ជើងទា',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ចាហួយ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'រោងកម្មវិធី',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'កម្រាលព្រំ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ក្ដាពិស',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'អំពូល កង្ហារ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'អំពូល គ្រីសស្ទាល់',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ម៉ាស៊ីនភ្លើង',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ចាប់ក្រណាត់មុខរោង',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សេវាពិធីការ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'នំបុ័ង',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ឆាខ្វៃ សណ្ដែក',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'បង្អែម',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីឆ្អើរ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ពងត្រី',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ទឹកកកអនាម័យ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'អង្ករ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n];\nconst paidBy = [\n  'ACLEDA',\n  'ABA',\n  'WING',\n  'BAKONG',\n  'CANADIA',\n  // 'SATHAPANA',\n  // 'WOORI',\n  'TRUE MONEY',\n  // 'AMK',\n  // 'PRASAC',\n  // 'PHILLIP',\n  // 'PRINCE',\n  // 'HATTHA',\n  // 'CP Bank',\n  // 'VATTANAC',\n  // 'JTRUST ROYAL',\n  // 'FTB Bank',\n  // 'PPC Bank',\n  // 'CHIP MONG Bank',\n  // 'MOHANOKOR',\n  // 'SBI LY HOUR',\n  // 'MAY Bank',\n  // 'eMoney Agent',\n  // 'Pi Pay',\n  'Cash',\n];\n\nconst paidByColor = {\n  ACLEDA: '#143c6d',\n  ABA: '#005b7a',\n  WING: '#a4c535',\n  BAKONG: '#dc222c',\n  CANADIA: '#D61229',\n  'TRUE MONEY': '#f88a30',\n  // 'Pi Pay': '#ed288a',\n  Cash: '#BB9300',\n};\n\nconst foodList = [\n  'មហាសម្បត្តិទាំង៥',\n  'ឆាប៉ាវហុឺ តៅហ៊ូពងមាន់ 10ក្រឡ',\n  'ភ្លាម៉ាញ៉ាណេសាច់គោ ',\n  'បង្គាបំពងខ្ទឹមស',\n  'ត្រីឆ្ពុងចំហុយក្រូចឆ្មា ទឹកដោះគោឆៅ',\n  'ម្ជូរយួនបង្កង',\n  'បាយឆាគ្រាប់ឈូក & បាយស',\n  'បង្អែមសងខ្យា3ស្រទាប់',\n  'ក្ងានខ្វៃទឹកឃ្មុំ ទាខ្វៃប៉េកាំង',\n  'ឆាផ្សិតតុងកូវ បន្លែបញ្ជះពណ៍',\n  'ម្ជូរគ្រឿងពោះគោ',\n  'បាយឆាពងទាប្រៃ & បាយស',\n  'បង្អែមចេកខ្ទិះ ពងមាន់',\n  'ប្រហិតត្រីស្លាត',\n  'គាវបំពង',\n  'ប្រហិតអំពៅ',\n  'ទាផ្លិត ជ្រក់ឆៃថាវ',\n  'មាន់ទឹមចំហុយ',\n  'បង្គារុំស្បៃ',\n  'ត្រីសុងហឺចំហុយក្រូចឆ្មា',\n  'តុងយាំកូនកាត់',\n  'បាយឆាយ៉ាងចូវ បាយស',\n  'បង្អែមគ្រាប់ឈូក',\n  'បង្អែមត្នោត',\n  'ត្រីប្រម៉ាចៀន',\n  'តី្រប្រម៉ា ចំហុយពងទា',\n  'ត្រីបំពងសា្វយ ទឹកត្រីអំពិលទុំ',\n  'ម្ជូយួនគ្រឿងសមុទ្រ',\n  'រោងកម្មវិធីចាប់ក្រណាត់ម៉ូតថ្មី',\n  'អំពូលគ្រីស្តាល់',\n  'កង្ហារត្រជាក់',\n  'ព្រំក្រហមមួយផ្លុវដើរ',\n  'ទឹកកកអនាម័យ',\n  'ក្បាលជ្រូក១ មាន់ស្ងោរ១គូ',\n  'អាហារសែនកុងម៉ា',\n  'សេវាពិធីការ ៧នាក់',\n  'បបរពេលព្រឹក ២ខ្ទះ (លើស 25០$/ខ្ទះ)',\n  'បាយថ្ងៃត្រង់ ១១តុ (លើស 8០$/តុ)',\n  'ក្តាពីស 3$/m2',\n  'បន្ទប់ទឹកចល័ត 100$/pc',\n  'ត្រីប្រម៉ាចំហុយ',\n  'ត្រីបំពងឡប់ឡែ',\n  'ស៊ុបចាប់ឆាយគ្រឿងសមុទ្រ',\n  'ឆាឆ្អឹងជំនីបំពងបន្លែជូរអែម',\n  'តុងយាំគ្រឿងសមុទ្រ',\n  'ត្រីសុងហឺបំពងប្រាំរសជាតិ',\n  'ញាំជើងទាគ្រឿងសមុទ្រ',\n  'ទាខ្វៃប៉េកាំង',\n  'បាយសែនកុងម៉ា 1ថាស',\n  'ឆាបង្គា ខាត់ណាចិន',\n  'ត្រីក្រហមចំហុយមីសួរ',\n  'ស៊ុបក្រពះជ្រូកខ្ចី',\n  'ស៊ុបក្តាមផ្សិតមាស 10ក្រឡ',\n  'ត្រីឆ្ពុងចំហុយទឹកស៊ីអៀវចិន',\n];\nconst unitList = [\n  'តុ',\n  'ចាន',\n  'ខ្ទះ',\n  'នាក់',\n  'ឈុត',\n  'm²',\n  'គ្រឿង',\n  'ប្រឡោះ',\n  // `m${'2'.sup()}`,\n  'pcs',\n];\n\nconst eventList = [\n  'Wedding',\n  'Birthday',\n  'Party',\n  'House Warming',\n  'Engagement',\n];\n\nexport { paidBy, paidByColor, listTitle, foodList, unitList, eventList };\n\nexport interface IUser {\n  id: number;\n  username: string;\n  password: string;\n  role: string;\n  status: number;\n}\nexport const UserData: IUser[] = [\n  {\n    id: 1,\n    username: 'Ma Raibann',\n    password: '1234',\n    role: 'Admin',\n    status: 1,\n  },\n  {\n    id: 2,\n    username: 'មាស សៅមិនា',\n    password: '1234',\n    role: 'Admin',\n    status: 0,\n  },\n  {\n    id: 3,\n    username: 'Rem Brosna',\n    password: '1234',\n    role: 'Admin',\n    status: 0,\n  },\n];\n\nexport const role = ['Admin', 'Manager', 'Staff'];\n\nexport enum MonthRanks {\n  'Jan' = 1,\n  'Feb' = 2,\n  'Mar' = 3,\n  'Apr' = 4,\n  'May' = 5,\n  'Jun' = 6,\n  'Jul' = 7,\n  'Aug' = 8,\n  'Sep' = 9,\n  'Oct' = 10,\n  'Nov' = 11,\n  'Dec' = 12,\n}\nexport const MonthKH: {\n  [key: string]: string;\n} = {\n  January: 'មករា',\n  February: 'កុម្ភៈ',\n  March: 'មិនា',\n  April: 'មេសា',\n  May: 'ឧសភា',\n  June: 'មិថុនា',\n  July: 'កក្កដា',\n  August: 'សីហា',\n  September: 'កញ្ញា',\n  October: 'តុលា',\n  November: 'វិច្ឆិកា',\n  December: 'ធ្នូ',\n};\n\nexport const PercentFilter: { [key: string]: number } = {\n  week: 0,\n  month: 1,\n  year: 2,\n};\n","const THEME_UTIL = {\n  goldGradientMain:\n    'linear-gradient(90deg, #A17B11 0%, #EDC650 38%, #B28E22 100%)',\n  goldGradientLight:\n    'linear-gradient(90deg, #AE8625 0%, #F7EF8A 30%, #D2AC47 73%, #EDC967 100%)',\n};\n\nexport default THEME_UTIL;\n","export const validatePatterns = {\n  phoneNumber: /0[0-9]{8}$|0[0-9]{9}$/,\n  numberOnly: /^-?[0-9]\\d*(\\.\\d+)?$/,\n  positiveNumberOnly: /^(0*[1-9][0-9]*(\\.[0-9]+)?|0+\\.[0-9]*[1-9][0-9]*)$/,\n  positiveNumberOnlyandEmpty: /$^|^[0-9]\\d*(\\.\\d+)?\\.?$/,\n  email: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n  textOnly: /^[a-zA-Z ]*$/,\n};\n\n// format separateComma\nexport const separateComma = (val: number | string) => {\n  // remove sign if negative\n  var sign = 1;\n  if (val < 0) {\n    sign = -1;\n    val = -val;\n  }\n  // trim the number decimal point if it exists\n  let num = val.toString().includes('.')\n    ? val.toString().split('.')[0]\n    : val.toString();\n  let len = num.toString().length;\n  let result = '';\n  let count = 1;\n\n  for (let i = len - 1; i >= 0; i--) {\n    result = num.toString()[i] + result;\n    if (count % 3 === 0 && count !== 0 && i !== 0) {\n      result = ',' + result;\n    }\n    count++;\n  }\n\n  // add number after decimal point\n  if (val.toString().includes('.')) {\n    result = result + '.' + val.toString().split('.')[1];\n  }\n  // return result with - sign if negative\n  return sign < 0 ? '-' + result : result;\n};\n\n// format cash\nexport const formatCash = (n: number) => {\n  if (n < 1e3) return n.toLocaleString(undefined, { minimumFractionDigits: 2 });\n  if (n >= 1e3 && n < 1e6)\n    return n.toLocaleString(undefined, { minimumFractionDigits: 2 });\n  if (n >= 1e6 && n < 1e9) return +(n / 1e6).toFixed(1) + 'M';\n  if (n >= 1e9 && n < 1e12) return +(n / 1e9).toFixed(1) + 'B';\n  if (n >= 1e12) return +(n / 1e12).toFixed(1) + 'T';\n};\n\n// format background color\nexport const changeBackground = (name?: string) => {\n  var hash = 0;\n  let i;\n  if (name) {\n    for (i = 0; i < name.length; i += 1) {\n      hash = name.charCodeAt(i) + ((hash << 5) - hash);\n    }\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  return color;\n};\n// format invoice id\nexport const formatInvoiceId = (value: string) => {\n  const pad = '00000';\n  return pad.substring(0, pad.length - value.length) + value;\n};\n// format data\nexport const DataFormater = (number: number) => {\n  return Intl.NumberFormat('en-US', {\n    notation: 'compact',\n    compactDisplay: 'short',\n  }).format(number);\n};\n\nexport const pageStyle = ` @page {\n  size: A4;\n  margin:2.54cm;\n}\n\n@media all {\n  .pagebreak {\n    display: none;\n  }\n}\n\n@media print {\n  .pagebreak {\n    page-break-before: always;\n  }\n}`;\n"],"names":["CusIconButton","styled","IconButton","theme","borderRadius","spacing","background","palette","common","white","boxShadow","shadows","CusLoading","React","className","TextField","border","divider","ToggleButton","color","primary","main","label","children","width","fontSize","pageTitle","endComponent","isMdDown","useResponsive","openDrawer","setOpenDrawer","useDrawerContext","position","sx","bgcolor","mb","py","px","sm","container","item","xs","md","onClick","height","display","size","variant","fontWeight","justifyContent","useTheme","isSmDown","useMediaQuery","breakpoints","down","isLgDown","getCharts","async","HttpUtil","ROUTE_API","getTotals","startDate","endDate","params","title","icon","value","endTitle","primaryIcon","primaryText","secondaryIcon","secondaryText","primaryReverse","secondaryReverse","primaryTooltip","secondaryTooltip","Paper","elevation","p","Typography","Stack","direction","alignItems","List","disablePadding","dense","Tooltip","placement","ListItem","disableGutters","flexDirection","cursor","ListItemIcon","minWidth","mr","ml","ListItemText","primaryTypographyProps","typography","fontWeightBold","h6","lineHeight","Avatar","alpha","light","isNaN","success","error","startsWith","Intl","NumberFormat","maximumFractionDigits","format","slice","ArrowUp","ArrowDown","text","secondary","daysLeft","name","invoiceId","eventType","ListItemButton","secondaryAction","ListItemAvatar","changeBackground","THEME_UTIL","charAt","User","setDateRange","toggleValue","setToggleValue","anchorElNotification","setAnchorElNotification","anchorElDatePicker","setAnchorElDatePicker","useEffect","monday","moment","weekday","friday","startOf","endOf","handleSubmit","control","useForm","handleClickNoti","event","currentTarget","handleClose","type","reminderList","reminderLoading","useReminderContext","temp","filter","el","diff","date","navigate","useNavigate","PageHeader","Notification","mt","ToggleButtonGroup","exclusive","fullWidth","onChange","CusToggleButton","Calendar2","Badge","badgeContent","length","Menu","MenuListProps","anchorEl","open","Boolean","onClose","pb","ListSubheader","pl","map","data","ROUTE_PATH","id","customer","customer_name","toUpperCase","BoxRemove","Popover","undefined","anchorOrigin","vertical","horizontal","transformOrigin","style","onSubmit","LocalizationProvider","dateAdapter","AdapterDateFns","render","field","LabelTextField","DatePicker","openTo","views","renderInput","CusTextField","Button","COLORS","dashTotal","Wedding","Birthday","Party","Other","ResponsiveContainer","PieChart","margin","bottom","left","right","Legend","Pie","innerRadius","outerRadius","paddingAngle","dataKey","_","index","Cell","fill","currentTime","setCurrentTime","useState","dateRange","loadingDateRange","setLoadingDateRange","run","fetchDashTotal","loading","isDashLoading","useRequest","DASHBOARD_API","manual","onSuccess","chartData","isLoadingChart","interval","setInterval","clearInterval","CHART1_DATA","charts","MonthRanks","month","Events","amount","CHART2_DATA","Sales","profits","Expenses","expenses","getTables","tables","CustomTooltip","active","payload","Box","default","parseInt","Grid","lg","currency","totalProfits","totalExpenses","Percentage","PercentFilter","MoneyRecive","info","DataFormater","MoneySend","totalOrders","totalTables","StatusUp","totalCustomer","Profile2User","pr","BarChart","barSize","layout","CartesianGrid","XAxis","domain","YAxis","content","Bar","orientation","flexGrow","overflow","pt","top","zIndex","reminder","i","getCount","days","formatCash","tickFormatter","Divider","borderBottomWidth","borderColor","listTitle","totalPrice","paidBy","other","paidByColor","ACLEDA","ABA","WING","BAKONG","CANADIA","Cash","foodList","unitList","eventList","MonthKH","January","February","March","April","May","June","July","August","September","October","November","December","week","year","goldGradientMain","goldGradientLight","validatePatterns","phoneNumber","numberOnly","positiveNumberOnly","positiveNumberOnlyandEmpty","email","textOnly","n","toLocaleString","minimumFractionDigits","toFixed","hash","charCodeAt","toString","formatInvoiceId","pad","substring","number","notation","compactDisplay","pageStyle"],"sourceRoot":""}