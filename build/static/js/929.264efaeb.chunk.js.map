{"version":3,"file":"static/js/929.264efaeb.chunk.js","mappings":"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","sources":["components/CusDialog/ErrorDialog.tsx","components/CusTextField/StyledOutlinedTextField.tsx","pages/Login/index.tsx","utils/theme-util.ts"],"sourcesContent":["import {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogProps,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { EmojiSad } from 'iconsax-react';\nimport theme from 'theme/theme';\n\ninterface IErrorDialog extends DialogProps {\n  errorTitle?: string;\n  errorMessage: string;\n  onCloseDialog: () => void;\n}\nconst ErrorDialog = (props: IErrorDialog) => {\n  const { open, ...rest } = props;\n  return (\n    <Dialog open={open} fullWidth maxWidth='xs' {...rest}>\n      <DialogContent>\n        <Stack alignItems={'center'} sx={{ px: 4 }} spacing={2}>\n          <EmojiSad\n            size='80'\n            color={theme.palette.primary.main}\n            variant='Bulk'\n          />\n          <Typography\n            variant='h5'\n            sx={{ fontWeight: (theme) => theme.typography.fontWeightBold }}\n          >\n            {props.errorTitle || 'NOOB!'}\n          </Typography>\n          <Typography\n            sx={{ color: (theme) => theme.palette.error.main }}\n            textAlign='center'\n          >\n            {props.errorMessage}\n          </Typography>\n          <Button\n            onClick={props.onCloseDialog}\n            variant='contained'\n            sx={{ borderRadius: 3, px: 3, boxShadow: 0 }}\n          >\n            <Typography color='white' sx={{ textTransform: 'capitalize' }}>\n              OK, cool\n            </Typography>\n          </Button>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ErrorDialog;\n","import { TextField } from '@mui/material';\nimport { styled } from '@mui/material';\n\nconst StyledOutlinedTextField = styled(TextField)(({ theme }) => ({\n  width: '100%',\n  '& .MuiOutlinedInput-root': {\n    borderRadius: theme.spacing(1),\n    background: theme.palette.common.white,\n    borderColor: theme.palette.primary.main,\n  },\n}));\n\nexport default StyledOutlinedTextField;\n","import { LoadingButton } from '@mui/lab';\nimport {\n  Avatar,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport ErrorDialog from 'components/CusDialog/ErrorDialog';\nimport StyledOutlinedTextField from 'components/CusTextField/StyledOutlinedTextField';\nimport React from 'react';\nimport theme from 'theme/theme';\nimport THEME_UTIL from 'utils/theme-util';\nimport { Box } from '@mui/system';\nimport { useAuthContext } from 'context/AuthContext';\nimport { Eye, EyeSlash } from 'iconsax-react';\nimport { Controller, useForm } from 'react-hook-form';\n\ninterface ILogin {\n  username: string;\n  password: string;\n}\nexport default function Login() {\n  const [values, setValues] = React.useState(false);\n  const [errAlert, setErrAlert] = React.useState(false);\n  const { control, handleSubmit } = useForm<ILogin>();\n  const { login, error, loading, loginDialog, closeDialog } = useAuthContext();\n\n  const handleLogin = (data: ILogin) => {\n    login(data);\n  };\n\n  const showPwd = () => {\n    setValues((prevValue) => !prevValue);\n  };\n  return (\n    <>\n      <ErrorDialog\n        open={loginDialog}\n        onCloseDialog={closeDialog}\n        errorTitle='Failed Authentication'\n        errorMessage={error?.message || 'Encounter a problem signing in'}\n      />\n\n      <Grid container>\n        <Grid\n          item\n          xs={0}\n          md={6}\n          sx={{\n            backgroundImage: `url('/images/login_banner.jpg')`,\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            height: '100vh',\n          }}\n        ></Grid>\n        <Grid item xs={12} md={6} sx={{ height: '100vh' }}>\n          <ErrorDialog\n            open={errAlert}\n            errorMessage={'Incorrect username or password!'}\n            onCloseDialog={() => setErrAlert(false)}\n          />\n          <Stack\n            alignItems={'center'}\n            justifyContent='center'\n            sx={{ height: '100%', px: 4 }}\n          >\n            <Box sx={{ width: ['100%', '60%'] }}>\n              <Stack alignItems={'center'}>\n                <Avatar\n                  variant='square'\n                  src='/images/mongkol_serey_logo_1000.png'\n                  sx={{ width: 300, height: 'auto' }}\n                />\n                <form\n                  onSubmit={handleSubmit(handleLogin)}\n                  style={{ width: '100%' }}\n                >\n                  <Stack sx={{ width: '100%' }} spacing={4}>\n                    <Stack spacing={1}>\n                      <Typography\n                        variant='subtitle1'\n                        sx={{ color: (theme) => theme.palette.text.primary }}\n                      >\n                        Username\n                      </Typography>\n                      <Controller\n                        name='username'\n                        control={control}\n                        defaultValue=''\n                        rules={{\n                          required: {\n                            message: 'Username is required!',\n                            value: true,\n                          },\n                        }}\n                        render={({ field, fieldState: { error } }) => (\n                          <StyledOutlinedTextField\n                            {...field}\n                            error={Boolean(error)}\n                            placeholder='Username'\n                            variant='outlined'\n                            fullWidth\n                            helperText={!error ? '' : error?.message}\n                          />\n                        )}\n                      />\n                    </Stack>\n                    <Stack spacing={1}>\n                      <Typography\n                        variant='subtitle1'\n                        sx={{ color: (theme) => theme.palette.text.primary }}\n                      >\n                        Password\n                      </Typography>\n                      <Controller\n                        name='password'\n                        control={control}\n                        defaultValue=''\n                        rules={{\n                          minLength: 4,\n                          required: {\n                            message: 'Password is required!',\n                            value: true,\n                          },\n                        }}\n                        render={({ field, fieldState: { error } }) => (\n                          <StyledOutlinedTextField\n                            {...field}\n                            error={Boolean(error)}\n                            placeholder='Must be at least 6 characters'\n                            variant='outlined'\n                            fullWidth\n                            helperText={!error ? '' : error?.message}\n                            type={values ? 'text' : 'password'}\n                            InputProps={{\n                              endAdornment: (\n                                <InputAdornment position='end'>\n                                  <IconButton onClick={showPwd}>\n                                    {values ? (\n                                      <EyeSlash\n                                        size='24'\n                                        color={theme.palette.text.primary}\n                                      />\n                                    ) : (\n                                      <Eye\n                                        size='24'\n                                        color={theme.palette.text.primary}\n                                      />\n                                    )}\n                                  </IconButton>\n                                </InputAdornment>\n                              ),\n                            }}\n                          />\n                        )}\n                      />\n                    </Stack>\n                    <LoadingButton\n                      variant='contained'\n                      color='primary'\n                      size='large'\n                      type='submit'\n                      loading={loading}\n                      sx={{\n                        boxShadow: 0,\n                        borderRadius: 3,\n                        height: 56,\n                        background: THEME_UTIL.goldGradientMain,\n                      }}\n                    >\n                      Login\n                    </LoadingButton>\n                    <Typography\n                      variant='caption'\n                      textAlign={'center'}\n                      whiteSpace='pre-line'\n                    >\n                      {`By continuing, you agree to accept our \n                Privacy Policy & Terms of Service.`}\n                    </Typography>\n                  </Stack>\n                </form>\n              </Stack>\n            </Box>\n          </Stack>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","const THEME_UTIL = {\n  goldGradientMain:\n    'linear-gradient(90deg, #A17B11 0%, #EDC650 38%, #B28E22 100%)',\n  goldGradientLight:\n    'linear-gradient(90deg, #AE8625 0%, #F7EF8A 30%, #D2AC47 73%, #EDC967 100%)',\n};\n\nexport default THEME_UTIL;\n"],"names":["props","open","rest","fullWidth","maxWidth","alignItems","sx","px","spacing","size","color","theme","variant","fontWeight","typography","fontWeightBold","errorTitle","palette","error","main","textAlign","errorMessage","onClick","onCloseDialog","borderRadius","boxShadow","textTransform","styled","TextField","width","background","common","white","borderColor","primary","Login","values","setValues","React","errAlert","setErrAlert","control","handleSubmit","useForm","login","loading","loginDialog","closeDialog","useAuthContext","showPwd","prevValue","message","container","item","xs","md","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","height","justifyContent","src","onSubmit","data","style","text","name","defaultValue","rules","required","value","render","field","fieldState","Boolean","placeholder","helperText","minLength","type","InputProps","endAdornment","position","THEME_UTIL","whiteSpace","goldGradientMain","goldGradientLight"],"sourceRoot":""}