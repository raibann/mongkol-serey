{"version":3,"file":"static/js/541.7f695f23.chunk.js","mappings":"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","sources":["hook/useRouter.tsx","utils/navigation-util.tsx","components/Sidebar/DrawerContent.tsx","components/Sidebar/index.tsx","hook/useResponsive.tsx","utils/theme-util.ts"],"sourcesContent":["import {\n  useNavigate,\n  useParams,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport { ROUTE_PATH } from 'utils/route-util';\n\nexport { ROUTE_PATH };\n\nconst useRouter = () => {\n  const navigate = useNavigate();\n  const urlParams = useParams();\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  return {\n    navigate,\n    urlParams,\n    location,\n    searchParams,\n    setSearchParams,\n  };\n};\n\nexport default useRouter;\n","import {\n  Diagram,\n  MenuBoard,\n  Notification,\n  MoneySend,\n  Profile2User,\n  Box,\n  // LogoutCurve,\n  // SecurityUser,\n} from 'iconsax-react';\nimport React from 'react';\nimport { ROUTE_PATH } from './route-util';\n\ntype Navigation = {\n  title: string;\n  toUrl: string;\n  icon: React.ReactNode;\n}[];\n\nconst navigationUtil: Navigation = [\n  {\n    title: 'Dashboard',\n    toUrl: ROUTE_PATH.dashboard,\n    icon: <Diagram size='22' />,\n  },\n  {\n    title: 'Orders',\n    toUrl: ROUTE_PATH.orders,\n    icon: <MenuBoard size='24' />,\n  },\n  {\n    title: 'Customers',\n    toUrl: ROUTE_PATH.customers,\n    icon: <Profile2User size='24' />,\n  },\n  {\n    title: 'Expense',\n    toUrl: ROUTE_PATH.expense,\n    icon: <MoneySend size='24' />,\n  },\n  {\n    title: 'Reminder',\n    toUrl: ROUTE_PATH.reminder,\n    icon: <Notification size='24' />,\n  },\n  {\n    title: 'Stocks',\n    toUrl: ROUTE_PATH.stocks,\n    icon: <Box size='24' />,\n  },\n  // {\n  //   title: 'Manage Users',\n  // toUrl: ROUTE_PATH.manageusers,\n  //   icon: <SecurityUser size='24' />,\n  // },\n];\n\nexport default navigationUtil;\n","import {\n  Avatar,\n  Box,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { LogoutCurve } from 'iconsax-react';\nimport { useDrawerContext } from 'context/DrawerContext';\nimport { useReminderContext } from 'context/ReminderContext';\nimport { motion } from 'framer-motion';\nimport { useAuthContext } from 'context/AuthContext';\nimport theme from 'theme/theme';\nimport useRouter, { ROUTE_PATH } from 'hook/useRouter';\nimport navigationUtil from 'utils/navigation-util';\nimport THEME_UTIL from 'utils/theme-util';\n\nconst DrawerContent = () => {\n  const { location, navigate } = useRouter();\n  const { openDrawer, setOpenDrawer } = useDrawerContext();\n  const { reminderList } = useReminderContext();\n  const { logout } = useAuthContext();\n\n  return (\n    <>\n      <Avatar\n        variant='square'\n        src={'images/mongkol_serey_logo_1000.png'}\n        alt='logo'\n        imgProps={{\n          sx: {\n            objectFit: 'contain',\n          },\n        }}\n        sx={{\n          mx: 'auto',\n          width: 200,\n          height: 200,\n        }}\n      />\n      <List>\n        {navigationUtil.map((nav) => {\n          return (\n            <ListItem key={nav.title} sx={{ py: 0.5 }}>\n              <ListItemButton\n                sx={{\n                  position: 'relative',\n                  borderRadius: 2,\n                }}\n                onClick={() => {\n                  navigate(`/${nav.toUrl}`);\n                  openDrawer && setOpenDrawer(false);\n                }}\n              >\n                {location.pathname === `/${nav.toUrl}` && (\n                  <Box\n                    sx={{\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      bottom: 0,\n                      background: THEME_UTIL.goldGradientMain,\n                      zIndex: 0,\n                      borderRadius: 2,\n                    }}\n                    component={motion.div}\n                    layoutId='selectedNav'\n                  />\n                )}\n                <ListItemIcon\n                  sx={{\n                    zIndex: 2,\n                    color: theme.palette.secondary.main,\n                  }}\n                >\n                  {nav.icon}\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    <Stack direction={'row'} justifyContent='space-between'>\n                      <Typography>{nav.title}</Typography>\n                      {nav.toUrl === ROUTE_PATH.reminder && reminderList && (\n                        <Box\n                          sx={{\n                            bgcolor: theme.palette.error.main,\n                            color: theme.palette.common.white,\n                            px: 1,\n                            borderRadius: 1,\n                          }}\n                        >\n                          {reminderList?.length}\n                        </Box>\n                      )}\n                    </Stack>\n                  }\n                  primaryTypographyProps={{\n                    fontWeight: 500,\n                    color:\n                      location.pathname === `/${nav.toUrl}`\n                        ? 'common.white'\n                        : 'secondary.main',\n                  }}\n                  sx={{\n                    zIndex: 1,\n                  }}\n                />\n              </ListItemButton>\n            </ListItem>\n          );\n        })}\n        <ListItem sx={{ py: 0.5 }}>\n          <ListItemButton\n            sx={{\n              position: 'relative',\n              borderRadius: 2,\n            }}\n            onClick={() => {\n              logout();\n              openDrawer && setOpenDrawer(false);\n            }}\n          >\n            <ListItemIcon\n              sx={{\n                zIndex: 2,\n                color: theme.palette.secondary.main,\n              }}\n            >\n              <LogoutCurve size='24' />\n            </ListItemIcon>\n            <ListItemText\n              primary={<Typography>Exit</Typography>}\n              primaryTypographyProps={{\n                fontWeight: 500,\n                color: 'secondary.main',\n              }}\n              sx={{\n                zIndex: 1,\n              }}\n            />\n          </ListItemButton>\n        </ListItem>\n      </List>\n    </>\n  );\n};\n\nexport default DrawerContent;\n","import { Drawer } from '@mui/material';\nimport { useDrawerContext } from 'context/DrawerContext';\nimport useResponsive from 'hook/useResponsive';\nimport theme from 'theme/theme';\nimport DrawerContent from './DrawerContent';\n\nconst Sidebar = ({ drawerWidth }: { drawerWidth: string }) => {\n  const { isMdDown } = useResponsive();\n  const { openDrawer } = useDrawerContext();\n\n  return (\n    <>\n      <Drawer\n        variant={isMdDown ? 'temporary' : 'permanent'}\n        open={openDrawer}\n        anchor='left'\n        sx={{\n          '& .MuiDrawer-paper': {\n            width: { xs: '100vw', sm: '40vw', md: drawerWidth },\n            border: 'none',\n            background: theme.palette.common.white,\n            borderRadius: 0,\n          },\n        }}\n      >\n        <DrawerContent />\n      </Drawer>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst useResponsive = () => {\n  const theme = useTheme();\n  const isSmDown = useMediaQuery(theme.breakpoints.down('sm'));\n  const isMdDown = useMediaQuery(theme.breakpoints.down('md'));\n  const isLgDown = useMediaQuery(theme.breakpoints.down('lg'));\n\n  return { theme, isSmDown, isLgDown, isMdDown };\n};\n\nexport default useResponsive;\n","const THEME_UTIL = {\n  goldGradientMain:\n    'linear-gradient(90deg, #A17B11 0%, #EDC650 38%, #B28E22 100%)',\n  goldGradientLight:\n    'linear-gradient(90deg, #AE8625 0%, #F7EF8A 30%, #D2AC47 73%, #EDC967 100%)',\n};\n\nexport default THEME_UTIL;\n"],"names":["navigate","useNavigate","urlParams","useParams","location","useLocation","useSearchParams","searchParams","setSearchParams","title","toUrl","ROUTE_PATH","icon","Diagram","size","MenuBoard","Profile2User","MoneySend","Notification","useRouter","useDrawerContext","openDrawer","setOpenDrawer","reminderList","useReminderContext","logout","useAuthContext","Avatar","variant","src","alt","imgProps","sx","objectFit","mx","width","height","List","navigationUtil","nav","ListItem","py","ListItemButton","position","borderRadius","onClick","pathname","Box","top","left","right","bottom","background","THEME_UTIL","zIndex","component","motion","layoutId","ListItemIcon","color","theme","ListItemText","primary","Stack","direction","justifyContent","Typography","bgcolor","px","length","primaryTypographyProps","fontWeight","LogoutCurve","drawerWidth","isMdDown","useResponsive","Drawer","open","anchor","xs","sm","md","border","useTheme","isSmDown","useMediaQuery","breakpoints","down","isLgDown","goldGradientMain","goldGradientLight"],"sourceRoot":""}