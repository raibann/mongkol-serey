{"version":3,"file":"static/js/904.811065ed.chunk.js","mappings":"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","sources":["components/CusIconButton/index.tsx","components/CusTextField/index.tsx","components/CusToggleButton/index.tsx","components/LabelTextField/index.tsx","components/PageHeader/index.tsx","hook/useResponsive.tsx","api/dashboard.ts","components/DashboardCard/index.tsx","pages/Dashboard/AnniversaryItem.tsx","pages/Dashboard/DashboardHeader.tsx","pages/Dashboard/PieChartComp.tsx","pages/Dashboard/index.tsx","utils/theme-util.ts","utils/validate-util.tsx"],"sourcesContent":["import { IconButton } from '@mui/material';\nimport { styled } from '@mui/material';\n\nconst CusIconButton = styled(IconButton)(({ theme }) => ({\n  borderRadius: theme.spacing(1),\n  background: theme.palette.common.white,\n  boxShadow: theme.shadows[1],\n}));\n\nexport { CusIconButton };\n","import { TextField } from '@mui/material';\nimport { styled } from '@mui/material';\n\nconst CusTextField = styled(TextField)(({ theme }) => ({\n  background: theme.palette.common.white,\n  borderRadius: theme.spacing(1),\n  boxShadow: theme.shadows[1],\n  '& fieldset': {\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.spacing(1),\n  },\n}));\n\nexport default CusTextField;\n","import { ToggleButton } from '@mui/material';\nimport { styled } from '@mui/material';\n// import THEME_UTIL from 'utils/theme-util';\n\nconst CusToggleButton = styled(ToggleButton)(({ theme }) => ({\n  border: 'none',\n  background: theme.palette.common.white,\n  color: theme.palette.primary.main,\n  boxShadow: theme.shadows[1],\n  '&.Mui-selected': {\n    // background: THEME_UTIL.goldGradientMain,\n    background: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    '&:hover': {\n      background: theme.palette.primary.main,\n\n      // background: THEME_UTIL.goldGradientLight,\n    },\n  },\n}));\n\nexport default CusToggleButton;\n","import { Stack, Typography } from '@mui/material';\nimport React from 'react';\n\nconst LabelTextField = ({\n  label,\n  children,\n}: {\n  label: string;\n  children: React.ReactNode;\n}) => {\n  return (\n    <Stack spacing={1} width='100%'>\n      <Typography fontSize={14}>{label}</Typography>\n      {children}\n    </Stack>\n  );\n};\n\nexport default LabelTextField;\n","import { AppBar, Toolbar, Grid, Typography } from '@mui/material';\nimport { CusIconButton } from 'components/CusIconButton';\nimport React from 'react';\nimport { HambergerMenu } from 'iconsax-react';\nimport useResponsive from 'hook/useResponsive';\nimport { useDrawerContext } from 'context/DrawerContext';\n\nconst PageHeader = ({\n  children,\n  pageTitle,\n  endComponent,\n}: {\n  children?: React.ReactNode;\n  endComponent?: React.ReactNode;\n  pageTitle: string;\n}) => {\n  const { isMdDown } = useResponsive();\n  const { openDrawer, setOpenDrawer } = useDrawerContext();\n\n  return (\n    <AppBar\n      position='sticky'\n      sx={{\n        bgcolor: isMdDown\n          ? (theme) => theme.palette.common.white\n          : 'background.paper',\n        boxShadow: 'none',\n        borderRadius: 0,\n        mb: 1,\n      }}\n    >\n      <Toolbar sx={{ py: 2, px: { sm: 0 } }}>\n        <Grid container px={2}>\n          <Grid item xs={12} md='auto'>\n            <Grid container>\n              <Grid item xs>\n                <CusIconButton\n                  onClick={() => setOpenDrawer(!openDrawer)}\n                  color='primary'\n                  sx={{\n                    height: 40,\n                    display: {\n                      xs: 'block',\n                      md: 'none',\n                    },\n                  }}\n                >\n                  <HambergerMenu size='24' variant='Outline' />\n                </CusIconButton>\n              </Grid>\n              <Grid item xs>\n                <Typography variant='h4' fontWeight='bolder'>\n                  {pageTitle}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                xs\n                sx={{ display: 'flex', justifyContent: 'flex-end' }}\n              >\n                {isMdDown && endComponent}\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} md>\n            {children}\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default PageHeader;\n","import { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst useResponsive = () => {\n  const theme = useTheme();\n  const isSmDown = useMediaQuery(theme.breakpoints.down('sm'));\n  const isMdDown = useMediaQuery(theme.breakpoints.down('md'));\n  const isLgDown = useMediaQuery(theme.breakpoints.down('lg'));\n\n  return { theme, isSmDown, isLgDown, isMdDown };\n};\n\nexport default useResponsive;\n","import HttpUtil from 'utils/http-util';\nimport { ROUTE_API } from 'utils/route-util';\n\nconst DASHBOARD_API = {\n  getCharts: async () => {\n    const res: IDashboard.IChart = await HttpUtil.get(ROUTE_API.charts);\n    return res;\n  },\n  getTotals: async ({\n    startDate,\n    endDate,\n  }: {\n    startDate: string;\n    endDate: string;\n  }) => {\n    const res: IDashboard.IDashboardData = await HttpUtil.get(\n      ROUTE_API.totals,\n      {\n        params: {\n          startDate: startDate,\n          endDate: endDate,\n        },\n      }\n    );\n    return res;\n  },\n};\n\nexport default DASHBOARD_API;\n","import { Paper, Stack, Typography, alpha } from '@mui/material';\nimport theme from 'theme/theme';\n\nconst DashboardCard = ({\n  title,\n  value,\n  icon,\n  endType,\n  startType,\n}: {\n  title: string;\n  value: string;\n  icon: React.ReactNode;\n  startType?: string;\n  endType?: string;\n}) => {\n  return (\n    <Paper\n      elevation={1}\n      sx={{\n        p: 2,\n        width: '100%',\n        height: 130,\n        borderRadius: 2,\n        background: theme.palette.common.white,\n      }}\n    >\n      <Stack direction={'column'}>\n        <Typography color='text.secondary'>{title}</Typography>\n        <Stack\n          direction={'row'}\n          alignItems='center'\n          justifyContent={'space-between'}\n        >\n          <Stack direction={'row'} alignItems={'baseline'} spacing={0.5}>\n            <Typography\n              fontSize={28}\n              sx={{ color: (theme) => theme.palette.info.main }}\n            >\n              {startType}\n            </Typography>\n            <Typography\n              fontSize={28}\n              sx={{\n                fontWeight: (theme) => theme.typography.fontWeightMedium,\n              }}\n            >\n              {value}\n            </Typography>\n            <Typography\n              fontSize={16}\n              sx={{ color: (theme) => theme.palette.info.main }}\n            >\n              {endType}\n            </Typography>\n          </Stack>\n          <Stack\n            sx={{\n              background: alpha(theme.palette.primary.light, 0.3),\n              border: `dashed 1px ${theme.palette.primary.main}`,\n              p: 2.5,\n              borderRadius: '50vh',\n              heght: 'auto',\n              color: theme.palette.primary.main,\n            }}\n          >\n            {icon}\n          </Stack>\n        </Stack>\n      </Stack>\n    </Paper>\n  );\n};\n\nexport default DashboardCard;\n","import {\n  ListItem,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n} from '@mui/material';\nimport { User } from 'iconsax-react';\nimport theme from 'theme/theme';\nimport THEME_UTIL from 'utils/theme-util';\nimport { changeBackground } from 'utils/validate-util';\n\nconst AnniversaryItem = ({\n  daysLeft,\n  name,\n  invoiceId,\n  eventType,\n}: {\n  name: string;\n  daysLeft: number;\n  invoiceId: number;\n  eventType?: string;\n}) => {\n  return (\n    <>\n      <ListItem\n        sx={{\n          px: 0,\n          pt: 0,\n        }}\n        secondaryAction={\n          daysLeft === 0 ? (\n            <Typography\n              fontSize={14}\n              color={theme.palette.success.main}\n              fontWeight='bold'\n            >\n              Today\n            </Typography>\n          ) : (\n            <Typography fontSize={14} color='error.main' fontWeight='bold'>\n              {daysLeft}Days\n            </Typography>\n          )\n        }\n      >\n        <ListItemAvatar>\n          <Avatar\n            sx={{\n              background: !!name\n                ? changeBackground(name)\n                : THEME_UTIL.goldGradientMain,\n              fontWeight: 'bold',\n            }}\n          >\n            {!!name ? (\n              name.charAt(0)\n            ) : (\n              <User color={theme.palette.common.white} variant='Bold' />\n            )}\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={`Order ID: ${invoiceId} ~ ${eventType}`}\n          secondary={name}\n        />\n      </ListItem>\n    </>\n  );\n};\n\nexport default AnniversaryItem;\n","import {\n  Avatar,\n  Badge,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListSubheader,\n  Menu,\n  Popover,\n  Stack,\n  ToggleButtonGroup,\n  Typography,\n} from '@mui/material';\nimport { useEffect } from 'react';\nimport { CusIconButton } from 'components/CusIconButton';\nimport { BoxRemove, Calendar2, User } from 'iconsax-react';\nimport { Notification } from 'iconsax-react';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useReminderContext } from 'context/ReminderContext';\nimport { CusLoading } from 'components/CusLoading';\nimport theme from 'theme/theme';\nimport React from 'react';\nimport CusToggleButton from 'components/CusToggleButton';\nimport PageHeader from 'components/PageHeader';\nimport moment from 'moment';\nimport CusTextField from 'components/CusTextField';\nimport LabelTextField from 'components/LabelTextField';\nimport useResponsive from 'hook/useResponsive';\nimport THEME_UTIL from 'utils/theme-util';\n\ninterface IDateRange {\n  startDate: string;\n  endDate: string;\n}\n\nconst DashboardHeader = ({\n  setDateRange,\n  toggleValue,\n  setToggleValue,\n}: {\n  toggleValue: string | null;\n  setToggleValue: React.Dispatch<React.SetStateAction<string | null>>;\n  setDateRange: React.Dispatch<\n    React.SetStateAction<{\n      startDate: string;\n      endDate: string;\n    }>\n  >;\n}) => {\n  // ancher notification\n  const [anchorElNotification, setAnchorElNotification] =\n    React.useState<null | HTMLElement>(null);\n  // anchor datepicker\n  const [anchorElDatePicker, setAnchorElDatePicker] =\n    React.useState<null | HTMLElement>(null);\n\n  useEffect(() => {\n    let monday = moment().weekday(0);\n    let friday = moment().weekday(6);\n    switch (toggleValue) {\n      case 'month':\n        return setDateRange({\n          startDate: moment().startOf('month').format('YYYY-MM-DD'),\n          endDate: moment().endOf('month').format('YYYY-MM-DD'),\n        });\n      case 'year':\n        return setDateRange({\n          startDate: moment().startOf('year').format('YYYY-MM-DD'),\n          endDate: moment().endOf('year').format('YYYY-MM-DD'),\n        });\n      case 'week':\n        return setDateRange({\n          startDate: moment(monday).format('YYYY-MM-DD'),\n          endDate: moment(friday).format('YYYY-MM-DD'),\n        });\n      default:\n        return;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggleValue]);\n\n  // Validate date range\n  const { handleSubmit, control } = useForm<IDateRange>();\n  const handleSubmitDate = (data: IDateRange) => {\n    setDateRange({\n      startDate: moment(data.startDate).format('YYYY-MM-DD'),\n      endDate: moment(data.endDate).format('YYYY-MM-DD'),\n    });\n    setToggleValue(null);\n  };\n  // notification\n  const handleClickNoti = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorElNotification(event.currentTarget);\n  };\n  // datepicker\n  const handleClickDatepicker = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setAnchorElDatePicker(event.currentTarget);\n  };\n  // handle close\n  const handleClose = (type: string) => {\n    if (type === 'notification') {\n      setAnchorElNotification(null);\n    } else if (type === 'datepicker') {\n      setAnchorElDatePicker(null);\n    }\n  };\n  // fetch notifications\n  const { reminderList, reminderLoading } = useReminderContext();\n\n  const temp = reminderList?.filter(\n    (el) => moment().diff(el.date, 'years') === 1\n  );\n\n  const { isSmDown } = useResponsive();\n\n  return (\n    <>\n      <PageHeader\n        pageTitle='Dashboard'\n        endComponent={\n          <>\n            <CusIconButton\n              color='primary'\n              onClick={handleClickNoti}\n              sx={{ height: 40 }}\n            >\n              <Notification size='24' variant='Bold' />\n            </CusIconButton>\n          </>\n        }\n      >\n        <Stack\n          direction={'row'}\n          justifyContent='flex-end'\n          sx={{ width: '100%', mt: { xs: 2, md: 0 } }}\n          alignItems='center'\n        >\n          <ToggleButtonGroup\n            value={toggleValue}\n            exclusive\n            fullWidth\n            size='small'\n            onChange={(\n              event: React.MouseEvent<HTMLElement, MouseEvent>,\n              value: any\n            ) => {\n              if (value !== null) {\n                setToggleValue(value);\n              }\n            }}\n            sx={{\n              width: { xs: '100%', md: '30%' },\n              height: 40,\n              mr: 2,\n            }}\n          >\n            <CusToggleButton value='week'>Week</CusToggleButton>\n            <CusToggleButton value='month'>Month</CusToggleButton>\n            <CusToggleButton value='year'>Year</CusToggleButton>\n          </ToggleButtonGroup>\n          <CusIconButton\n            color='primary'\n            onClick={handleClickDatepicker}\n            sx={{\n              mr: { xs: 0, md: 2 },\n            }}\n          >\n            <Calendar2 size='24' variant='Outline' />\n          </CusIconButton>\n          <Badge color='error' badgeContent={temp?.length}>\n            <CusIconButton\n              color='primary'\n              onClick={handleClickNoti}\n              sx={{\n                display: {\n                  xs: 'none',\n                  md: 'block',\n                },\n                height: 40,\n              }}\n            >\n              <Notification size='24' variant='Bold' />\n            </CusIconButton>\n          </Badge>\n        </Stack>\n      </PageHeader>\n      <Menu\n        MenuListProps={{ sx: { p: 0 } }}\n        sx={{\n          mt: 1,\n          height: 350,\n        }}\n        anchorEl={anchorElNotification}\n        open={Boolean(anchorElNotification)}\n        onClose={() => handleClose('notification')}\n      >\n        <List\n          disablePadding\n          sx={{\n            width: 350,\n            px: 2,\n            pb: 2,\n          }}\n        >\n          <ListSubheader\n            sx={{\n              p: 2,\n              pl: 0,\n              background: (theme) => theme.palette.common.white,\n            }}\n          >\n            <Typography\n              variant='subtitle1'\n              fontWeight={theme.typography.fontWeightBold}\n            >\n              Anniverysary\n            </Typography>\n          </ListSubheader>\n          {reminderLoading ? (\n            <Stack\n              alignItems={'center'}\n              justifyContent='center'\n              height={'100%'}\n            >\n              <CusLoading />\n            </Stack>\n          ) : temp && temp.length > 0 ? (\n            reminderList?.map(\n              (data) =>\n                moment().diff(data.date, 'years') === 1 && (\n                  <ListItem\n                    key={data.id}\n                    sx={{\n                      px: 0,\n                      pt: 0,\n                    }}\n                    secondaryAction={\n                      <Typography\n                        fontSize={14}\n                        color={theme.palette.success.main}\n                        fontWeight='bold'\n                      >\n                        Today\n                      </Typography>\n                    }\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          background: THEME_UTIL.goldGradientMain,\n                          fontWeight: 'bold',\n                        }}\n                      >\n                        {data.customer !== null ? (\n                          data.customer.customer_name.charAt(0).toUpperCase()\n                        ) : (\n                          <User\n                            color={theme.palette.common.white}\n                            variant='Bold'\n                          />\n                        )}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={`Order ID: ${data.id} ~ ${data.type}`}\n                      secondary={\n                        data.customer === null\n                          ? 'No Customer'\n                          : data.customer.customer_name\n                      }\n                    />\n                  </ListItem>\n                )\n            )\n          ) : (\n            <Stack\n              alignItems={'center'}\n              justifyContent='center'\n              height={'100%'}\n            >\n              <BoxRemove size='48' color={theme.palette.error.main} />\n              <Typography variant='h6' color='error'>\n                No notification\n              </Typography>\n            </Stack>\n          )}\n        </List>\n      </Menu>\n      {/* pop over */}\n      <Popover\n        id={Boolean(anchorElDatePicker) ? 'simple-popover' : undefined}\n        open={Boolean(anchorElDatePicker)}\n        anchorEl={anchorElDatePicker}\n        onClose={() => handleClose('datepicker')}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        sx={{ mt: 1 }}\n      >\n        <form\n          style={{ height: '100%' }}\n          onSubmit={handleSubmit(handleSubmitDate)}\n        >\n          <Stack sx={{ p: 2, height: '100%' }} spacing={2}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Stack direction={isSmDown ? 'column' : 'row'} spacing={2}>\n                <Controller\n                  control={control}\n                  name='startDate'\n                  render={({ field }) => (\n                    <LabelTextField label='Start date'>\n                      <DatePicker\n                        openTo='day'\n                        views={['year', 'month', 'day']}\n                        value={field.value}\n                        onChange={(date) => {\n                          field.onChange(date);\n                        }}\n                        renderInput={(params) => <CusTextField {...params} />}\n                      />\n                    </LabelTextField>\n                  )}\n                />\n                <Controller\n                  control={control}\n                  name='endDate'\n                  render={({ field }) => (\n                    <LabelTextField label='End date'>\n                      <DatePicker\n                        openTo='day'\n                        views={['year', 'month', 'day']}\n                        value={field.value}\n                        onChange={(date) => {\n                          field.onChange(date);\n                        }}\n                        renderInput={(params) => <CusTextField {...params} />}\n                      />\n                    </LabelTextField>\n                  )}\n                />\n              </Stack>\n            </LocalizationProvider>\n            <Button\n              variant='contained'\n              type='submit'\n              onClick={() => handleClose('datepicker')}\n              sx={{\n                width: '100%',\n                color: (theme) => theme.palette.common.white,\n                borderRadius: 2,\n                boxShadow: 0,\n              }}\n            >\n              Confirm\n            </Button>\n          </Stack>\n        </form>\n      </Popover>\n    </>\n  );\n};\n\nexport default DashboardHeader;\n","import React from 'react';\nimport {\n  Pie,\n  Cell,\n  PieChart,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport theme from 'theme/theme';\n\nconst COLORS = [\n  theme.palette.primary.main,\n  theme.palette.success.main,\n  theme.palette.warning.main,\n  theme.palette.error.main,\n];\n\nconst PieChartComp = ({\n  dashTotal,\n}: {\n  dashTotal: IDashboard.IDashboardData | undefined;\n}) => {\n  const data = [\n    { name: 'Wedding', value: dashTotal?.eventType.Wedding },\n    { name: 'Birthday', value: dashTotal?.eventType.Birthday },\n    { name: 'Party', value: dashTotal?.eventType.Party },\n    { name: 'Other', value: dashTotal?.eventType.Other },\n  ];\n\n  return (\n    <ResponsiveContainer width='100%' height='65%'>\n      <PieChart margin={{ bottom: 24, left: 56, right: 56 }}>\n        <Legend />\n        <Tooltip />\n        <Pie\n          data={data}\n          innerRadius={60}\n          outerRadius={80}\n          paddingAngle={5}\n          dataKey='value'\n        >\n          {data.map((_, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default PieChartComp;\n","import useRequest from '@ahooksjs/use-request';\nimport {\n  Box,\n  Divider,\n  Grid,\n  List,\n  Paper,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport DASHBOARD_API from 'api/dashboard';\nimport { CusLoading } from 'components/CusLoading';\nimport DashboardCard from 'components/DashboardCard';\nimport useResponsive from 'hook/useResponsive';\nimport {\n  BoxRemove,\n  MoneyRecive,\n  MoneySend,\n  Profile2User,\n  WalletAdd,\n} from 'iconsax-react';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport theme from 'theme/theme';\nimport { formatCash } from 'utils/validate-util';\nimport AnniversaryItem from './AnniversaryItem';\nimport DashboardHeader from './DashboardHeader';\nimport PieChartComp from './PieChartComp';\n\nconst Dashboard = () => {\n  // use moment\n  let monday = moment().weekday(0);\n  let friday = moment().weekday(6);\n  const [toggleValue, setToggleValue] = useState<string | null>('week');\n  const [dateRange, setDateRange] = useState({\n    startDate: moment(monday).format('YYYY-MM-DD'),\n    endDate: moment(friday).format('YYYY-MM-DD'),\n  });\n  const [loadingDateRange, setLoadingDateRange] = useState(false);\n  const { isMdDown } = useResponsive();\n  // fetch total\n  const {\n    data: dashTotal,\n    run: fetchDashTotal,\n    loading: isDashLoading,\n  } = useRequest(DASHBOARD_API.getTotals, {\n    manual: true,\n    onSuccess: () => setLoadingDateRange(false),\n  });\n  // fetch chart\n  const { data: chartData, loading: isLoadingChart } = useRequest(\n    DASHBOARD_API.getCharts,\n    { manual: false }\n  );\n  // useEffect total\n  useEffect(() => {\n    fetchDashTotal({\n      startDate: dateRange.startDate,\n      endDate: dateRange.endDate,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dateRange]);\n\n  useEffect(() => {\n    setLoadingDateRange(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggleValue]);\n\n  // function generate month\n  const monthGenerate = (value: number) => {\n    switch (value) {\n      case 1:\n        return 'Jan';\n      case 2:\n        return 'Feb';\n      case 3:\n        return 'Mar';\n      case 4:\n        return 'Apr';\n      case 5:\n        return 'May';\n      case 6:\n        return 'Jun';\n      case 7:\n        return 'Jul';\n      case 8:\n        return 'Aug';\n      case 9:\n        return 'Sep';\n      case 10:\n        return 'Oct';\n      case 11:\n        return 'Nov';\n      case 12:\n        return 'Dec';\n      default:\n        return;\n    }\n  };\n\n  const CHART1_DATA = chartData?.charts.map((data) => {\n    return {\n      name: monthGenerate(data.month),\n      Events: data.amount,\n    };\n  });\n  const CHART2_DATA = chartData?.charts.map((data) => {\n    return {\n      name: monthGenerate(data.month),\n      Sales: data.profits,\n      Expenses: data.expenses,\n    };\n  });\n\n  return (\n    <>\n      <DashboardHeader\n        {...{ setDateRange, fetchDashTotal, setToggleValue, toggleValue }}\n      />\n      {isDashLoading && isLoadingChart ? (\n        <Stack\n          sx={{ height: 'calc( 100vh - 74px )' }}\n          justifyContent='center'\n          alignItems={'center'}\n        >\n          <CusLoading />\n        </Stack>\n      ) : (\n        <>\n          <Stack direction={'row'}>\n            <Grid container spacing={2} px={2}>\n              {isDashLoading ? (\n                <Grid\n                  item\n                  xs={12}\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '146px',\n                  }}\n                >\n                  <CusLoading />\n                </Grid>\n              ) : (\n                <>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Profits'\n                      value={`${formatCash(\n                        dashTotal?.totalProfits\n                          ? dashTotal?.totalProfits - dashTotal?.totalExpenses\n                          : 0\n                      )} `}\n                      icon={<MoneyRecive />}\n                      startType={'$'}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Expenses'\n                      value={`${formatCash(dashTotal?.totalExpenses || 0)}`}\n                      startType={'$'}\n                      icon={<MoneySend />}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Orders'\n                      value={`${dashTotal?.totalOrders || 0}`}\n                      icon={<WalletAdd />}\n                      endType={'Events'}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Customers'\n                      value={`${dashTotal?.totalCustomer || 0}`}\n                      // percentage='2.3%'\n                      // isHigher\n                      icon={<Profile2User />}\n                      endType={'Customers'}\n                    />\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </Stack>\n          <Stack\n            mt={2}\n            px={2}\n            direction={{ xs: 'column-reverse', md: 'row' }}\n            spacing={2}\n            height={{ xs: 1020, md: 400 }}\n          >\n            <Paper\n              elevation={1}\n              sx={{\n                width: { xs: '100%', md: '60%' },\n                py: 3,\n                pr: 5,\n              }}\n            >\n              <Typography fontWeight={500} variant='h5' ml={5} mb={3}>\n                Events\n              </Typography>\n\n              <ResponsiveContainer width='100%' height='90%'>\n                <BarChart\n                  data={CHART1_DATA}\n                  barSize={25}\n                  layout={isMdDown ? 'vertical' : 'horizontal'}\n                >\n                  <CartesianGrid vertical={false} />\n\n                  {isMdDown ? (\n                    <>\n                      <XAxis type='number' domain={[0, 25]} />\n                      <YAxis dataKey='name' type='category' />\n                    </>\n                  ) : (\n                    <>\n                      <XAxis dataKey='name' />\n                      <YAxis domain={[0, 25]} />\n                    </>\n                  )}\n\n                  <Tooltip />\n                  <Bar\n                    dataKey='Events'\n                    fill={theme.palette.primary.main}\n                    orientation='top'\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n\n            <Paper\n              sx={{\n                px: 3,\n                flexGrow: 1,\n                height: '100%',\n                overflow: 'auto',\n              }}\n            >\n              <Typography\n                fontWeight={600}\n                fontSize={18}\n                pt={3}\n                pb={2}\n                position='sticky'\n                top={0}\n                zIndex={theme.zIndex.appBar - 1}\n                bgcolor='common.white'\n              >\n                Upcoming Event\n              </Typography>\n              {chartData && chartData?.reminder.length > 0 ? (\n                <List\n                  sx={{\n                    bgcolor: 'common.white',\n                    p: 0,\n                  }}\n                >\n                  {chartData?.reminder.map((data, i) => {\n                    return (\n                      <AnniversaryItem\n                        key={i}\n                        daysLeft={1 - moment().diff(data.date, 'days')}\n                        name={\n                          data.customer !== null\n                            ? data.customer.customer_name\n                            : 'No Customer'\n                        }\n                        invoiceId={data.id}\n                        eventType={data.type}\n                      />\n                    );\n                  })}\n                </List>\n              ) : (\n                <Stack\n                  direction={'column'}\n                  alignItems={'center'}\n                  justifyContent='center'\n                  spacing={1}\n                  sx={{ height: 'calc(100% - 100px)' }}\n                >\n                  <BoxRemove size='64' color={theme.palette.error.main} />\n                  <Typography variant='body1' color='error'>\n                    No upcoming event...\n                  </Typography>\n                </Stack>\n              )}\n            </Paper>\n          </Stack>\n          <Stack\n            mt={2}\n            px={2}\n            direction={{ xs: 'column', md: 'row' }}\n            spacing={2}\n            height={{ xs: 1300, md: 400 }}\n            mb={4}\n          >\n            <Paper\n              elevation={1}\n              sx={{\n                width: { xs: '100%', md: '60%' },\n                height: { xs: 800, md: 'auto' },\n                py: 3,\n                pr: 5,\n              }}\n            >\n              <Stack direction={'row'} justifyContent='space-between'>\n                <Typography fontWeight={500} variant='h5' ml={5} mb={3}>\n                  Sales Report\n                </Typography>\n\n                <Typography fontWeight={500} variant='subtitle1' mb={3}>\n                  {isDashLoading || loadingDateRange\n                    ? 'Calculating Income...'\n                    : `${\n                        'Total Income: $' +\n                        formatCash(\n                          dashTotal?.totalProfits ? dashTotal?.totalProfits : 0\n                        )\n                      }${\n                        toggleValue ? `/this ${toggleValue}` : `/specific date`\n                      }`}\n                </Typography>\n              </Stack>\n              <ResponsiveContainer width='100%' height='90%'>\n                <BarChart\n                  data={CHART2_DATA}\n                  barSize={15}\n                  layout={isMdDown ? 'vertical' : 'horizontal'}\n                >\n                  <CartesianGrid vertical={false} />\n                  {isMdDown ? (\n                    <>\n                      <XAxis type='number' domain={[0, 10000]} />\n                      <YAxis dataKey='name' type='category' />\n                    </>\n                  ) : (\n                    <>\n                      <XAxis dataKey='name' />\n                      <YAxis type='number' domain={[0, 10000]} />\n                    </>\n                  )}\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey='Sales' fill={theme.palette.success.main} />\n                  <Bar dataKey='Expenses' fill={theme.palette.error.main} />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n\n            <Paper\n              sx={{\n                px: 3,\n                flexGrow: 1,\n                overflow: 'auto',\n                height: { xs: 'auto', md: '100%' },\n                position: 'relative',\n              }}\n            >\n              <Typography\n                fontWeight={600}\n                fontSize={18}\n                pt={3}\n                pb={2}\n                position='sticky'\n                top={0}\n                zIndex={theme.zIndex.appBar}\n                bgcolor='common.white'\n              >\n                Type of Event\n              </Typography>\n              <PieChartComp {...{ dashTotal }} />\n              <Box\n                position='absolute'\n                bottom={0}\n                left={0}\n                width={'100%'}\n                px={3}\n              >\n                <Divider\n                  sx={{\n                    borderBottomWidth: 0.1,\n                    borderColor: theme.palette.divider,\n                  }}\n                />\n              </Box>\n            </Paper>\n          </Stack>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n","const THEME_UTIL = {\n  goldGradientMain:\n    'linear-gradient(90deg, #A17B11 0%, #EDC650 38%, #B28E22 100%)',\n  goldGradientLight:\n    'linear-gradient(90deg, #AE8625 0%, #F7EF8A 30%, #D2AC47 73%, #EDC967 100%)',\n};\n\nexport default THEME_UTIL;\n","export const validatePatterns = {\n  phoneNumber: /0[0-9]{8}$|0[0-9]{9}$/,\n  numberOnly: /^-?[0-9]\\d*(\\.\\d+)?$/,\n  positiveNumberOnly: /^(0*[1-9][0-9]*(\\.[0-9]+)?|0+\\.[0-9]*[1-9][0-9]*)$/,\n  positiveNumberOnlyandEmpty: /$^|^[0-9]\\d*(\\.\\d+)?\\.?$/,\n  email: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n};\n\n// format separateComma\nexport const separateComma = (val: number | string) => {\n  // remove sign if negative\n  var sign = 1;\n  if (val < 0) {\n    sign = -1;\n    val = -val;\n  }\n  // trim the number decimal point if it exists\n  let num = val.toString().includes('.')\n    ? val.toString().split('.')[0]\n    : val.toString();\n  let len = num.toString().length;\n  let result = '';\n  let count = 1;\n\n  for (let i = len - 1; i >= 0; i--) {\n    result = num.toString()[i] + result;\n    if (count % 3 === 0 && count !== 0 && i !== 0) {\n      result = ',' + result;\n    }\n    count++;\n  }\n\n  // add number after decimal point\n  if (val.toString().includes('.')) {\n    result = result + '.' + val.toString().split('.')[1];\n  }\n  // return result with - sign if negative\n  return sign < 0 ? '-' + result : result;\n};\n\n// format cash\nexport const formatCash = (n: number) => {\n  if (n < 1e3) return n.toLocaleString(undefined, { minimumFractionDigits: 2 });\n  if (n >= 1e3 && n < 1e6)\n    return n.toLocaleString(undefined, { minimumFractionDigits: 2 });\n  if (n >= 1e6 && n < 1e9) return +(n / 1e6).toFixed(1) + 'M';\n  if (n >= 1e9 && n < 1e12) return +(n / 1e9).toFixed(1) + 'B';\n  if (n >= 1e12) return +(n / 1e12).toFixed(1) + 'T';\n};\n\n// format background color\nexport const changeBackground = (name?: string) => {\n  var hash = 0;\n  let i;\n  if (name) {\n    for (i = 0; i < name.length; i += 1) {\n      hash = name.charCodeAt(i) + ((hash << 5) - hash);\n    }\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  return color;\n};\n// format invoice id\nexport const formatInvoiceId = (value: string) => {\n  const pad = '00000';\n  return pad.substring(0, pad.length - value.length) + value;\n};\n"],"names":["CusIconButton","styled","IconButton","theme","borderRadius","spacing","background","palette","common","white","boxShadow","shadows","CusTextField","TextField","border","divider","CusToggleButton","ToggleButton","color","primary","main","label","children","width","fontSize","pageTitle","endComponent","isMdDown","useResponsive","useDrawerContext","openDrawer","setOpenDrawer","position","sx","bgcolor","mb","py","px","sm","container","item","xs","md","onClick","height","display","size","variant","fontWeight","justifyContent","useTheme","isSmDown","useMediaQuery","breakpoints","down","isLgDown","DASHBOARD_API","getCharts","HttpUtil","ROUTE_API","res","getTotals","startDate","endDate","params","title","value","icon","endType","startType","Paper","elevation","p","Stack","direction","Typography","alignItems","info","typography","fontWeightMedium","alpha","heght","daysLeft","name","invoiceId","eventType","ListItem","pt","secondaryAction","ListItemAvatar","Avatar","changeBackground","THEME_UTIL","charAt","User","ListItemText","secondary","setDateRange","toggleValue","setToggleValue","React","anchorElNotification","setAnchorElNotification","anchorElDatePicker","setAnchorElDatePicker","useEffect","monday","moment","weekday","friday","startOf","format","endOf","useForm","handleSubmit","control","handleClickNoti","event","currentTarget","handleClose","type","useReminderContext","reminderList","reminderLoading","temp","filter","el","diff","date","PageHeader","Notification","mt","ToggleButtonGroup","exclusive","fullWidth","onChange","mr","Calendar2","Badge","badgeContent","length","Menu","MenuListProps","anchorEl","open","Boolean","onClose","List","disablePadding","pb","ListSubheader","pl","CusLoading","map","data","customer","customer_name","toUpperCase","id","BoxRemove","Popover","undefined","anchorOrigin","vertical","horizontal","transformOrigin","style","onSubmit","LocalizationProvider","dateAdapter","AdapterDateFns","render","field","LabelTextField","DatePicker","openTo","views","renderInput","Button","COLORS","dashTotal","Wedding","Birthday","Party","Other","ResponsiveContainer","PieChart","margin","bottom","left","right","Legend","Tooltip","Pie","innerRadius","outerRadius","paddingAngle","dataKey","_","index","Cell","fill","useState","dateRange","loadingDateRange","setLoadingDateRange","useRequest","manual","onSuccess","fetchDashTotal","run","isDashLoading","loading","chartData","isLoadingChart","monthGenerate","CHART1_DATA","charts","month","Events","amount","CHART2_DATA","Sales","profits","Expenses","expenses","Grid","lg","formatCash","totalProfits","totalExpenses","MoneyRecive","MoneySend","totalOrders","WalletAdd","totalCustomer","Profile2User","pr","ml","BarChart","barSize","layout","CartesianGrid","XAxis","domain","YAxis","Bar","orientation","flexGrow","overflow","top","zIndex","reminder","i","Box","Divider","borderBottomWidth","borderColor","goldGradientMain","goldGradientLight","validatePatterns","phoneNumber","numberOnly","positiveNumberOnly","positiveNumberOnlyandEmpty","email","separateComma","val","sign","num","toString","includes","split","result","count","n","toLocaleString","minimumFractionDigits","toFixed","hash","charCodeAt","slice","formatInvoiceId","pad","substring"],"sourceRoot":""}