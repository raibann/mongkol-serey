{"version":3,"file":"static/js/4746.710ad705.chunk.js","mappings":"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","sources":["components/Dialog/index.tsx","pages/Orders/pages/OrderForm/components/InvoiceInfo.tsx","pages/Orders/pages/OrderForm/components/PackageItem.tsx","pages/Orders/pages/OrderForm/components/InvoicePackage.tsx","pages/Orders/pages/OrderForm/components/SelectCustomer.tsx","pages/Orders/pages/OrderForm/index.tsx"],"sourcesContent":["import React, {\n  useState,\n  useImperativeHandle,\n  forwardRef,\n  ForwardedRef,\n} from 'react';\nimport MuiDialog from '@mui/material/Dialog';\nimport DialogTitle, { DialogTitleProps } from '@mui/material/DialogTitle';\nimport DialogContent, { DialogContentProps } from '@mui/material/DialogContent';\nimport DialogActions, { DialogActionsProps } from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport Slide from '@mui/material/Slide';\nimport { TransitionProps } from '@mui/material/transitions';\nimport { MdOutlineClose } from 'react-icons/md';\nimport { PaperProps } from '@mui/material';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nexport interface IDialogRef {\n  open: (params?: any) => void;\n  close: () => void;\n}\n\ninterface IDialogProps {\n  cusTitle?: string;\n  alternateTitle?: string;\n  children?: React.ReactNode;\n  fullScreen?: boolean;\n  cusWidth?: number | string;\n  cusHeight?: number | string;\n  action?: React.ReactNode;\n  disableCloseButton?: boolean;\n  content?: (params: any) => React.ReactNode;\n  disablePadding?: boolean;\n  paperProps?: PaperProps;\n  dialogTitleProps?: DialogTitleProps;\n  dialogContentProps?: DialogContentProps;\n  dialogActionProps?: DialogActionsProps;\n}\n\nconst Dialog = (\n  {\n    cusTitle = '',\n    alternateTitle = '',\n    cusHeight = 'auto',\n    cusWidth = 'auto',\n    children = null,\n    content = () => null,\n    fullScreen = false,\n    action = null,\n    disableCloseButton = false,\n    disablePadding = false,\n    dialogActionProps,\n    dialogContentProps,\n    paperProps,\n    dialogTitleProps,\n  }: IDialogProps,\n  ref: ForwardedRef<IDialogRef | undefined>\n) => {\n  const [open, setOpen] = useState(false);\n  const [params, setParams] = useState<any>();\n\n  useImperativeHandle(ref, () => ({\n    open: (params) => {\n      setOpen(true);\n      setParams(params);\n    },\n\n    close: onCloseDialog,\n  }));\n\n  const onCloseDialog = () => {\n    setParams(undefined);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <MuiDialog\n        open={open}\n        TransitionComponent={Transition}\n        fullScreen={fullScreen}\n        onClose={onCloseDialog}\n        PaperProps={{\n          sx: {\n            p: disablePadding ? 0 : undefined,\n            maxWidth: '100vw',\n            maxHeight: '100vh',\n            width: fullScreen ? undefined : cusWidth,\n            height: fullScreen ? undefined : cusHeight,\n            ...paperProps?.sx,\n          },\n          ...paperProps,\n        }}\n      >\n        {(cusTitle || alternateTitle) && (\n          <DialogTitle\n            component='div'\n            display='flex'\n            justifyContent='space-between'\n            alignItems='center'\n            p={disablePadding ? 0 : undefined}\n            {...dialogTitleProps}\n          >\n            {params === undefined || alternateTitle === ''\n              ? cusTitle\n              : alternateTitle}\n            {!disableCloseButton && (\n              <IconButton onClick={onCloseDialog}>\n                <MdOutlineClose />\n              </IconButton>\n            )}\n          </DialogTitle>\n        )}\n        <DialogContent\n          sx={{ p: disablePadding ? 0 : undefined, ...dialogContentProps?.sx }}\n          {...dialogContentProps}\n        >\n          {content(params) || children}\n        </DialogContent>\n        {action !== null && (\n          <DialogActions {...dialogActionProps}>{action}</DialogActions>\n        )}\n      </MuiDialog>\n    </>\n  );\n};\n\nexport default forwardRef(Dialog);\n","import { Button, Grid, Stack, TextFieldProps, Typography } from '@mui/material';\nimport LabelTextField from 'components/LabelTextField';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { IOrderForm } from '..';\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\nimport { eventList } from 'utils/data-util';\n\nconst InvoiceInfo = () => {\n  const { control, setValue } = useFormContext<IOrderForm>();\n\n  return (\n    <Grid container maxWidth='sm' width='100%' spacing={2} alignSelf='center'>\n      <Grid item xs={9}>\n        <Stack spacing={1}>\n          <Controller\n            control={control}\n            name='eventType'\n            render={({ field, fieldState }) => (\n              <LabelTextField\n                size='small'\n                label='Event type'\n                fieldState={fieldState}\n                {...field}\n              />\n            )}\n          />\n          <Stack direction='row' spacing={1}>\n            {eventList.map((e) => (\n              <Button\n                key={e}\n                size='small'\n                sx={{ height: 20, minWidth: 0, p: 0.5 }}\n                onClick={() => setValue('eventType', e)}\n              >\n                <Typography\n                  variant='caption'\n                  textTransform='none'\n                  whiteSpace='nowrap'\n                  color='primary.dark'\n                >\n                  {e}\n                </Typography>\n              </Button>\n            ))}\n          </Stack>\n        </Stack>\n      </Grid>\n      <Grid item xs={3}>\n        <Controller\n          control={control}\n          name='quantity'\n          render={({ field, fieldState }) => (\n            <LabelTextField\n              size='small'\n              type='number'\n              label='Quantity'\n              fieldState={fieldState}\n              {...field}\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Controller\n          control={control}\n          name='bookingDate'\n          render={({ field, fieldState }) => (\n            <LocalizationProvider dateAdapter={AdapterMoment}>\n              <DatePicker\n                renderInput={(props: TextFieldProps) => (\n                  <LabelTextField\n                    {...props}\n                    fieldState={fieldState}\n                    size='small'\n                    label='Booking date'\n                  />\n                )}\n                {...field}\n              />\n            </LocalizationProvider>\n          )}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Controller\n          control={control}\n          name='eventDate'\n          render={({ field, fieldState }) => (\n            <LocalizationProvider dateAdapter={AdapterMoment}>\n              <DatePicker\n                renderInput={(props: TextFieldProps) => (\n                  <LabelTextField\n                    {...props}\n                    fieldState={fieldState}\n                    size='small'\n                    label='Event date'\n                  />\n                )}\n                {...field}\n              />\n            </LocalizationProvider>\n          )}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Controller\n          control={control}\n          name='eventLocation'\n          render={({ field, fieldState }) => (\n            <LabelTextField\n              size='small'\n              label='Event location'\n              fieldState={fieldState}\n              {...field}\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Controller\n          control={control}\n          name='deposit'\n          render={({ field, fieldState }) => (\n            <LabelTextField\n              size='small'\n              type='number'\n              label='Deposit amount'\n              fieldState={fieldState}\n              {...field}\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Controller\n          control={control}\n          name='depositText'\n          render={({ field, fieldState }) => (\n            <LabelTextField\n              size='small'\n              label='Amount in Khmer'\n              fieldState={fieldState}\n              {...field}\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Controller\n          control={control}\n          name='paidBy'\n          render={({ field, fieldState }) => (\n            <LabelTextField\n              size='small'\n              label='Payment method'\n              fieldState={fieldState}\n              {...field}\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Controller\n          control={control}\n          name='discount'\n          render={({ field, fieldState }) => (\n            <LabelTextField\n              size='small'\n              label='Discount'\n              type='number'\n              fieldState={fieldState}\n              {...field}\n            />\n          )}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default InvoiceInfo;\n","import {\n  Avatar,\n  Button,\n  Grid,\n  Portal,\n  Typography,\n  alpha,\n  useTheme,\n} from '@mui/material';\nimport { CusIconButton } from 'components/CusIconButton';\nimport CusTextField from 'components/CusTextField';\nimport { Trash } from 'iconsax-react';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport { IOrderForm } from '..';\n\ntype PackageItemProps = {\n  index: number;\n};\n\nconst PackageItem = ({ index }: PackageItemProps) => {\n  const theme = useTheme();\n\n  const { control } = useFormContext<IOrderForm>();\n  const menuItemFields = useFieldArray({\n    control,\n    name: `listMenu.${index}.menuItem`,\n  });\n\n  return (\n    <>\n      <Portal\n        container={() => document.getElementById(`append-item-button-${index}`)}\n      >\n        <Button\n          variant='text'\n          size='small'\n          sx={{ textTransform: 'none' }}\n          onClick={() => menuItemFields.append({ title: '' })}\n        >\n          Add\n        </Button>\n      </Portal>\n\n      {menuItemFields.fields.map((e, i) => (\n        <Grid container alignItems='flex-end' columnGap={2} mb={2}>\n          <Grid item xs='auto'>\n            <Typography variant='body2'>{i + 1}.</Typography>\n          </Grid>\n          <Grid item xs='auto'>\n            <Avatar variant='rounded' sx={{ width: 40, height: 40 }}>\n              M\n            </Avatar>\n          </Grid>\n          <Grid item xs>\n            <CusTextField\n              variant='standard'\n              size='small'\n              placeholder='Item title'\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs='auto'>\n            <CusIconButton\n              onClick={() => menuItemFields.remove(i)}\n              sx={{\n                width: 40,\n                height: 40,\n                boxShadow: 0,\n                background: alpha(theme.palette.error.main, 0.1),\n              }}\n            >\n              <Trash\n                size='20'\n                color={theme.palette.error.main}\n                variant='Bold'\n              />\n            </CusIconButton>\n          </Grid>\n        </Grid>\n      ))}\n    </>\n  );\n};\n\nexport default PackageItem;\n","import {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Portal,\n  Stack,\n  Typography,\n  alpha,\n  useTheme,\n} from '@mui/material';\nimport { CusIconButton } from 'components/CusIconButton';\nimport LabelTextField from 'components/LabelTextField';\nimport { Add, Trash } from 'iconsax-react';\nimport React from 'react';\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\nimport theme from 'theme/theme';\nimport { IOrderForm } from '..';\nimport PackageItem from './PackageItem';\n\nconst PACKAGE_ITEM_GRID = 12 / 5;\n\nconst InvoicePackage = () => {\n  const theme = useTheme();\n\n  const { control } = useFormContext<IOrderForm>();\n  const listMenuFields = useFieldArray({\n    control,\n    name: 'listMenu',\n  });\n\n  return (\n    <>\n      <Portal\n        container={() => document.getElementById('order-form-endcomponent')}\n      >\n        <Button\n          startIcon={<Add />}\n          onClick={() =>\n            listMenuFields.append({\n              id: undefined,\n              title: '',\n              unit: '',\n              price: 0,\n              quantity: 0,\n              unitPrice: 0,\n              menuItem: [{ title: '' }],\n            })\n          }\n          variant='contained'\n          size='small'\n          sx={{ color: 'common.white' }}\n        >\n          Add package\n        </Button>\n      </Portal>\n\n      {listMenuFields.fields.map((e, i) => (\n        <Paper key={e.id} sx={{ p: 2, mb: 2 }}>\n          <Grid container rowSpacing={2} columnSpacing={1}>\n            <Grid item xs={12} display='flex' alignItems='center'>\n              <Typography variant='subtitle1' fontWeight='bold'>\n                ឈុតទី {i + 1}\n              </Typography>\n              <Box flexGrow={1} />\n              <Box id={`append-item-button-${i}`} />\n              <Button\n                variant='text'\n                size='small'\n                color='error'\n                sx={{ textTransform: 'none' }}\n                onClick={() => listMenuFields.remove(i)}\n              >\n                Remove\n              </Button>\n            </Grid>\n            <Grid item xs={PACKAGE_ITEM_GRID}>\n              <Controller\n                control={control}\n                name={`listMenu.${i}.title`}\n                render={({ field, fieldState }) => (\n                  <LabelTextField\n                    size='small'\n                    label='Name'\n                    fieldState={fieldState}\n                    {...field}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={PACKAGE_ITEM_GRID}>\n              <Controller\n                control={control}\n                name={`listMenu.${i}.quantity`}\n                render={({ field, fieldState }) => (\n                  <LabelTextField\n                    size='small'\n                    label={'Qty'}\n                    fieldState={fieldState}\n                    {...field}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={PACKAGE_ITEM_GRID}>\n              <Controller\n                control={control}\n                name={`listMenu.${i}.unit`}\n                render={({ field, fieldState }) => (\n                  <LabelTextField\n                    size='small'\n                    label={'Unit'}\n                    fieldState={fieldState}\n                    {...field}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={PACKAGE_ITEM_GRID}>\n              <Controller\n                control={control}\n                name={`listMenu.${i}.unitPrice`}\n                render={({ field, fieldState }) => (\n                  <LabelTextField\n                    size='small'\n                    label={'Price'}\n                    fieldState={fieldState}\n                    {...field}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={PACKAGE_ITEM_GRID}>\n              <Controller\n                control={control}\n                name={`listMenu.${i}.price`}\n                render={({ field, fieldState }) => (\n                  <LabelTextField\n                    size='small'\n                    label={'Total'}\n                    fieldState={fieldState}\n                    {...field}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <PackageItem index={i} />\n            </Grid>\n          </Grid>\n        </Paper>\n      ))}\n    </>\n  );\n};\n\nexport default InvoicePackage;\n","import {\n  Avatar,\n  Box,\n  Button,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Stack,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { useDebounce, useRequest } from 'ahooks';\nimport CUSTOMER_API from 'api/customer';\nimport { CusIconButton } from 'components/CusIconButton';\nimport Dialog, { IDialogRef } from 'components/Dialog';\nimport { ArrowRight2, Trash } from 'iconsax-react';\nimport CustTable from 'pages/Customers/components/CustomerTable';\nimport { useEffect, useRef, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { EnumCustomerType } from 'utils/data-util';\nimport { IOrderForm } from '..';\nimport CusTextField from 'components/CusTextField';\nimport { CusLoading } from 'components/CusLoading';\n\nconst SelectCustomer = () => {\n  const theme = useTheme();\n  const customerListRef = useRef<IDialogRef>();\n\n  // React Hook Form\n  const { setValue, watch } = useFormContext<IOrderForm>();\n  const customer = watch('customer');\n\n  // States\n  const [search, setsearch] = useState('');\n\n  // Requests\n  const debounceSearch = useDebounce(search, { wait: 500 });\n  const { data: dataCustomer, loading: loadingCustomer } = useRequest(\n    () =>\n      CUSTOMER_API.getCustomerList({\n        size: 5,\n        type: EnumCustomerType.CUSTOMER,\n        search: search,\n      }),\n    { refreshDeps: [debounceSearch] }\n  );\n\n  useEffect(() => {\n    setsearch('');\n    if (customer) {\n      customerListRef.current?.close();\n    }\n  }, [customer]);\n\n  return (\n    <>\n      <Dialog\n        ref={customerListRef}\n        cusTitle='Select Customer'\n        cusHeight='80vh'\n        cusWidth={800}\n        content={() => (\n          <Stack spacing={2}>\n            <CusTextField\n              value={search}\n              onChange={(e) => setsearch(e.target.value)}\n              size='small'\n              placeholder='Search customer...'\n            />\n\n            {loadingCustomer ? (\n              <Box display='grid' sx={{ placeItems: 'center' }}>\n                <CusLoading />\n              </Box>\n            ) : (\n              <CustTable\n                data={dataCustomer?.response}\n                disableAction\n                onSelect={(customer) => setValue('customer', customer)}\n              />\n            )}\n          </Stack>\n        )}\n      />\n\n      {customer ? (\n        <ListItem\n          secondaryAction={\n            <ListItemSecondaryAction>\n              <CusIconButton onClick={() => setValue('customer', undefined)}>\n                <Trash variant='Bold' color={theme.palette.error.main} />\n              </CusIconButton>\n            </ListItemSecondaryAction>\n          }\n        >\n          <ListItemAvatar>\n            <Avatar variant='rounded' src={customer.images} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={customer.customer_name}\n            secondary={customer.contact_number}\n          />\n        </ListItem>\n      ) : (\n        <Button\n          disabled={loadingCustomer}\n          onClick={() => customerListRef.current?.open()}\n        >\n          <Stack direction='row' justifyContent='space-between' width='100%'>\n            <Typography>Select Customer</Typography>\n            <ArrowRight2 color={theme.palette.secondary.main} />\n          </Stack>\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default SelectCustomer;\n","import { Box, Grid, Paper, Stack } from '@mui/material';\nimport SecondaryPageHeader from 'components/PageHeader/SecondaryPageHeader';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport InvoiceInfo from './components/InvoiceInfo';\nimport InvoicePackage from './components/InvoicePackage';\nimport SelectCustomer from './components/SelectCustomer';\n\n// const handleStockOut = () => {\n//   let stockOut = 30;\n\n//   const stock = [24, 22];\n\n//   stock.forEach((e) => {\n//     if (e > 0) {\n//       if (e < stockOut) {\n//         e.setQuantity(0);\n//         stockOut = stockOut - e;\n//       } else {\n//         e - stockOut;\n//       }\n//     }\n//   });\n// };\n\nexport interface IOrderForm {\n  id?: number;\n  eventType: string;\n  eventLocation: string;\n  eventDate: string | null;\n  bookingDate: string | null;\n  deposit: number;\n  depositText: string;\n  paidBy: string;\n  quantity: number;\n  discount: number;\n  listMenu: IlistMenu[];\n  customer?: ICustomer.Customer;\n}\n\ninterface IlistMenu {\n  id?: number;\n  title: string;\n  quantity: number;\n  unitPrice: number;\n  unit: string;\n  price: number;\n  menuItem: {\n    id?: number;\n    title: string;\n  }[];\n}\n\nconst OrderForm = () => {\n  // react-hooks-form\n  const methods = useForm<IOrderForm>({\n    defaultValues: {\n      eventDate: null,\n      listMenu: [\n        {\n          title: '',\n          unit: '',\n          price: 0,\n          quantity: 0,\n          unitPrice: 0,\n          menuItem: [{ title: '' }],\n        },\n      ],\n    },\n  });\n\n  return (\n    <>\n      <SecondaryPageHeader\n        title='Create New Order'\n        sticky\n        endComponent={<Box id='order-form-endcomponent' />}\n        appBarSx={{ bgcolor: 'background.paper' }}\n      />\n\n      <form>\n        <FormProvider {...methods}>\n          <Grid container p={3} pt={0} spacing={3}>\n            <Grid item xs={6}>\n              <Stack component={Paper} p={2} mb={2}>\n                <SelectCustomer />\n              </Stack>\n              <Stack component={Paper} p={2}>\n                <InvoiceInfo />\n              </Stack>\n            </Grid>\n            <Grid item xs={6}>\n              <InvoicePackage />\n            </Grid>\n          </Grid>\n        </FormProvider>\n      </form>\n    </>\n  );\n};\n\nexport default OrderForm;\n"],"names":["Transition","React","props","ref","direction","Dialog","cusTitle","alternateTitle","cusHeight","cusWidth","children","content","fullScreen","action","disableCloseButton","disablePadding","dialogActionProps","dialogContentProps","paperProps","dialogTitleProps","useState","open","setOpen","params","setParams","useImperativeHandle","close","onCloseDialog","undefined","TransitionComponent","onClose","PaperProps","sx","p","maxWidth","maxHeight","width","height","component","display","justifyContent","alignItems","onClick","forwardRef","useFormContext","control","setValue","Grid","container","spacing","alignSelf","item","xs","Stack","name","render","field","fieldState","LabelTextField","size","label","eventList","e","Button","minWidth","Typography","variant","textTransform","whiteSpace","color","type","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","renderInput","index","theme","useTheme","menuItemFields","useFieldArray","Portal","document","getElementById","append","title","fields","map","i","columnGap","mb","Avatar","CusTextField","placeholder","fullWidth","CusIconButton","remove","boxShadow","background","alpha","palette","error","main","Trash","PACKAGE_ITEM_GRID","listMenuFields","startIcon","Add","id","unit","price","quantity","unitPrice","menuItem","Paper","rowSpacing","columnSpacing","fontWeight","Box","flexGrow","customerListRef","useRef","customer","watch","search","setsearch","debounceSearch","useDebounce","wait","useRequest","CUSTOMER_API","EnumCustomerType","refreshDeps","dataCustomer","data","loadingCustomer","loading","useEffect","current","value","onChange","target","placeItems","CusLoading","response","disableAction","onSelect","ListItem","secondaryAction","ListItemSecondaryAction","ListItemAvatar","src","images","ListItemText","primary","customer_name","secondary","contact_number","disabled","ArrowRight2","methods","useForm","defaultValues","eventDate","listMenu","SecondaryPageHeader","sticky","endComponent","appBarSx","bgcolor","pt"],"sourceRoot":""}