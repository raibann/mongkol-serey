{"version":3,"file":"static/js/496.fd73e595.chunk.js","mappings":"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","sources":["api/stock.ts","components/CusLoading/index.tsx","components/CusTable/index.tsx","components/Dialog/index.tsx","components/PageHeader/index.tsx","components/ResponseUIs/ConfirmContent.tsx","components/ResponseUIs/EmptyResponse.tsx","components/ResponseUIs/ErrorResponse.tsx"],"sourcesContent":["import { ProductFormInput } from 'pages/Inventories/components/ProductForm';\nimport { InventoryInput } from 'pages/Inventories/pages/InventoryForm';\nimport HttpUtil from 'utils/http-util';\nimport { ROUTE_API } from 'utils/route-util';\n\nexport const STOCK_API = {\n  stockDetail: async ({ id }: { id: string }) => {\n    const res: { data: IStock.Stock } = await HttpUtil.get(\n      ROUTE_API.stockDetail.replace(':id', `${id}`)\n    );\n    return res.data;\n  },\n  stockList: async ({ search }: { search?: string }) => {\n    const res: IStock.IStockResponse = await HttpUtil.get(ROUTE_API.stockList, {\n      params: {\n        search: search,\n      },\n    });\n    return res.response;\n  },\n  stockReportsList: async ({ search }: { search?: string }) => {\n    const res: IStock.IStockReportResponse = await HttpUtil.get(\n      ROUTE_API.stockReportList,\n      {\n        params: {\n          search: search,\n        },\n      }\n    );\n    return res.response;\n  },\n  deleteStock: async (data: { id?: string }) => {\n    const res = await HttpUtil.delete(\n      ROUTE_API.deleteStock.replace(':id', `${data.id}`)\n    );\n    return res;\n  },\n  createStock: async (data: InventoryInput) => {\n    const res = await HttpUtil.post(ROUTE_API.createStock, data);\n    return res;\n  },\n  updateStock: async (data: InventoryInput) => {\n    const res = await HttpUtil.put(\n      ROUTE_API.updateStock.replace(':id', `${data.id}`),\n      data\n    );\n    return res;\n  },\n  stockAction: async (data: InventoryInput) => {\n    if (data.id) {\n      return STOCK_API.updateStock({ id: data.id, ...data });\n    } else {\n      return STOCK_API.createStock(data);\n    }\n  },\n};\n\nexport const STOCK_PRODUCT_API = {\n  productList: async ({ search }: { search?: string }) => {\n    const res: IInventoryProduct.IInventoryProductResponse = await HttpUtil.get(\n      ROUTE_API.productList,\n      {\n        params: {\n          search: search,\n        },\n      }\n    );\n    return res.response;\n  },\n  productDetail: async ({ id }: { id: number }) => {\n    const res: { data: IInventoryProduct.InventoryProduct } =\n      await HttpUtil.get(ROUTE_API.productDetail.replace(':id', `${id}`));\n    return res.data;\n  },\n  deleteProduct: async (data: { id?: number }) => {\n    const res = await HttpUtil.delete(\n      ROUTE_API.deleteProduct.replace(':id', `${data.id}`)\n    );\n    return res;\n  },\n  createProduct: async (data: ProductFormInput) => {\n    const res: IInventoryProduct.InventoryProduct = await HttpUtil.post(\n      ROUTE_API.createProduct,\n      data\n    );\n    return res;\n  },\n  updateProduct: async (data: ProductFormInput) => {\n    const res: IInventoryProduct.InventoryProduct = await HttpUtil.put(\n      ROUTE_API.updateProduct.replace(':id', `${data.id}`),\n      data\n    );\n    return res;\n  },\n  productAction: async (data: ProductFormInput) => {\n    if (data.id) {\n      return STOCK_PRODUCT_API.updateProduct({ id: data.id, ...data });\n    } else {\n      return STOCK_PRODUCT_API.createProduct(data);\n    }\n  },\n};\n\nexport const STOCK_UNIT_API = {\n  unitDetail: async ({ id }: { id: number }) => {\n    const res: { data: IInventoryUnit.InventoryUnit } = await HttpUtil.get(\n      ROUTE_API.unitDetail.replace(':id', `${id}`)\n    );\n    return res.data;\n  },\n  unitList: async ({ search }: { search?: string }) => {\n    const res: IInventoryUnit.IInventoryUnitResponse = await HttpUtil.get(\n      ROUTE_API.unitList,\n      {\n        params: {\n          search: search,\n        },\n      }\n    );\n    return res.response;\n  },\n  deleteUnit: async (data: { id?: number }) => {\n    const res = await HttpUtil.delete(\n      ROUTE_API.deleteUnit.replace(':id', `${data.id}`)\n    );\n    return res;\n  },\n  createUnit: async (data: { name: string; description?: string }) => {\n    const res = await HttpUtil.post(ROUTE_API.createUnit, data);\n    return res;\n  },\n  updateUnit: async (data: {\n    id: number;\n    name: string;\n    description?: string;\n  }) => {\n    const res = await HttpUtil.put(\n      ROUTE_API.updateUnit.replace(':id', `${data.id}`),\n      data\n    );\n    return res;\n  },\n  unitAction: async (data: {\n    id?: number;\n    name: string;\n    description?: string;\n  }) => {\n    if (data.id) {\n      return STOCK_UNIT_API.updateUnit({ id: data.id, ...data });\n    } else {\n      return STOCK_UNIT_API.createUnit(data);\n    }\n  },\n};\n\nexport const STOCK_CATEGORY_API = {\n  categoryDetail: async ({ id }: { id: number }) => {\n    const res: { data: IInventoryCategory.InventoryCategory } =\n      await HttpUtil.get(ROUTE_API.stockCategoryDetail.replace(':id', `${id}`));\n    return res.data;\n  },\n  categoryList: async ({ search }: { search?: string }) => {\n    const res: IInventoryCategory.IInventoryCategoryResponse =\n      await HttpUtil.get(ROUTE_API.stockCategoryList, {\n        params: {\n          search: search,\n        },\n      });\n    return res.response;\n  },\n  createCategory: async (data: { name: string; description?: string }) => {\n    const res = await HttpUtil.post(ROUTE_API.stockCreateCategory, data);\n    return res;\n  },\n  deleteCategory: async (data: { id?: number }) => {\n    const res = await HttpUtil.delete(\n      ROUTE_API.stockDeleteCategory.replace(':id', `${data.id}`)\n    );\n    return res;\n  },\n  updateCategory: async (data: {\n    id: number;\n    name: string;\n    groupType?: string;\n  }) => {\n    const res = await HttpUtil.put(\n      ROUTE_API.stockUpdateCategory.replace(':id', `${data.id}`),\n      data\n    );\n    return res;\n  },\n  categoryAction: async (data: {\n    id?: number;\n    name: string;\n    groupType?: string;\n  }) => {\n    if (data.id) {\n      return STOCK_CATEGORY_API.updateCategory({ id: data.id, ...data });\n    } else {\n      return STOCK_CATEGORY_API.createCategory(data);\n    }\n  },\n};\n","import { Backdrop } from '@mui/material';\nimport React from 'react';\n\ninterface IBackdropLoading {\n  open: boolean;\n}\nconst CusBackDrop = React.memo(({ open = false }: IBackdropLoading) => {\n  return (\n    <Backdrop\n      sx={{\n        zIndex: (theme) => theme.zIndex.drawer + 1,\n      }}\n      open={open}\n    >\n      <div className='lds-facebook'>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </Backdrop>\n  );\n});\n\nconst CusLoading = React.memo(() => {\n  return (\n    <div className='lds-facebook'>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n});\n\nexport { CusBackDrop, CusLoading };\n","import {\n  SxProps,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Theme,\n} from '@mui/material';\nimport { ReactNode } from 'react';\n\nexport interface ICusTable {\n  headers: string[];\n  body: ReactNode;\n  sx?: {\n    container?: SxProps<Theme>;\n    table?: SxProps<Theme>;\n    header?: SxProps<Theme>;\n    body?: SxProps<Theme>;\n  };\n}\nexport interface ICusTableBodyCell {\n  key: string | number;\n  cell: { item: ReactNode | string }[];\n}\n\nexport default function CusTable(props: ICusTable) {\n  return (\n    <>\n      <TableContainer sx={{ ...props.sx?.container }}>\n        <Table\n          sx={{\n            width: '100%',\n            borderCollapse: 'separate',\n            borderSpacing: `0px 12px`,\n            ...props.sx?.table,\n          }}\n        >\n          <TableHead sx={{ ...props.sx?.header }}>\n            <TableRow sx={custStyle.headRow}>\n              {props.headers.map((p, i) => {\n                return (\n                  <TableCell key={i} sx={custStyle.headCell}>\n                    {p}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody sx={{ ...props.sx?.body }}>{props.body}</TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\ninterface ITableStyle {\n  headRow?: SxProps<Theme>;\n  headCell?: SxProps<Theme>;\n  bodyRow?: SxProps<Theme>;\n}\n\nexport const custStyle: ITableStyle = {\n  headRow: {\n    background: 'transparent',\n    '&> th': {\n      pt: 0,\n      borderBottom: 0,\n    },\n  },\n  headCell: {\n    fontWeight: (theme) => theme.typography.fontWeightBold,\n    whiteSpace: 'nowrap',\n  },\n  bodyRow: {\n    background: (theme) => theme.palette.common.white,\n    '&> td:first-of-type': {\n      borderTopLeftRadius: '10px',\n      borderBottomLeftRadius: '10px',\n    },\n    '&> td:last-child': {\n      borderTopRightRadius: '10px',\n      borderBottomRightRadius: '10px',\n    },\n  },\n};\n","import React, {\n  useState,\n  useImperativeHandle,\n  forwardRef,\n  ForwardedRef,\n} from 'react';\nimport MuiDialog from '@mui/material/Dialog';\nimport DialogTitle, { DialogTitleProps } from '@mui/material/DialogTitle';\nimport DialogContent, { DialogContentProps } from '@mui/material/DialogContent';\nimport DialogActions, { DialogActionsProps } from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport Slide from '@mui/material/Slide';\nimport { TransitionProps } from '@mui/material/transitions';\nimport { MdOutlineClose } from 'react-icons/md';\nimport { PaperProps } from '@mui/material';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nexport interface IDialogRef {\n  open: (params?: any) => void;\n  close: () => void;\n}\n\ninterface IDialogProps {\n  cusTitle?: string;\n  alternateTitle?: string;\n  children?: React.ReactNode;\n  fullScreen?: boolean;\n  cusWidth?: number | string;\n  cusHeight?: number | string;\n  action?: React.ReactNode;\n  disableCloseButton?: boolean;\n  content?: (params: any) => React.ReactNode;\n  disablePadding?: boolean;\n  paperProps?: PaperProps;\n  dialogTitleProps?: DialogTitleProps;\n  dialogContentProps?: DialogContentProps;\n  dialogActionProps?: DialogActionsProps;\n}\n\nconst Dialog = (\n  {\n    cusTitle = '',\n    alternateTitle = '',\n    cusHeight = 'auto',\n    cusWidth = 'auto',\n    children = null,\n    content = () => null,\n    fullScreen = false,\n    action = null,\n    disableCloseButton = false,\n    disablePadding = false,\n    dialogActionProps,\n    dialogContentProps,\n    paperProps,\n    dialogTitleProps,\n  }: IDialogProps,\n  ref: ForwardedRef<IDialogRef | undefined>\n) => {\n  const [open, setOpen] = useState(false);\n  const [params, setParams] = useState<any>();\n\n  useImperativeHandle(ref, () => ({\n    open: (params) => {\n      setOpen(true);\n      setParams(params);\n    },\n\n    close: onCloseDialog,\n  }));\n\n  const onCloseDialog = () => {\n    setParams(undefined);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <MuiDialog\n        open={open}\n        TransitionComponent={Transition}\n        fullScreen={fullScreen}\n        onClose={onCloseDialog}\n        PaperProps={{\n          sx: {\n            p: disablePadding ? 0 : undefined,\n            maxWidth: '100vw',\n            maxHeight: '100vh',\n            width: fullScreen ? undefined : cusWidth,\n            height: fullScreen ? undefined : cusHeight,\n            ...paperProps?.sx,\n          },\n          ...paperProps,\n        }}\n      >\n        {(cusTitle || alternateTitle) && (\n          <DialogTitle\n            component='div'\n            display='flex'\n            justifyContent='space-between'\n            alignItems='center'\n            p={disablePadding ? 0 : undefined}\n            {...dialogTitleProps}\n          >\n            {params === undefined || alternateTitle === ''\n              ? cusTitle\n              : alternateTitle}\n            {!disableCloseButton && (\n              <IconButton onClick={onCloseDialog}>\n                <MdOutlineClose />\n              </IconButton>\n            )}\n          </DialogTitle>\n        )}\n        <DialogContent\n          sx={{ p: disablePadding ? 0 : undefined, ...dialogContentProps?.sx }}\n          {...dialogContentProps}\n        >\n          {content(params) || children}\n        </DialogContent>\n        {action !== null && (\n          <DialogActions {...dialogActionProps}>{action}</DialogActions>\n        )}\n      </MuiDialog>\n    </>\n  );\n};\n\nexport default forwardRef(Dialog);\n","import { AppBar, Toolbar, Grid, Typography } from '@mui/material';\nimport React from 'react';\n\nimport useResponsive from 'hook/useResponsive';\n\nconst PageHeader = ({\n  children,\n  pageTitle,\n}: {\n  children?: React.ReactNode;\n  pageTitle: string;\n}) => {\n  const { isSmDown } = useResponsive();\n\n  return (\n    <AppBar\n      position='sticky'\n      sx={{\n        bgcolor: 'background.paper',\n        boxShadow: 'none',\n        borderRadius: 0,\n        mb: 1,\n      }}\n    >\n      <Toolbar sx={{ py: 2, px: { sm: 0 } }}>\n        <Grid container px={isSmDown ? 0 : 3} rowGap={isSmDown ? 2 : 0}>\n          <Grid item xs={6} md='auto'>\n            <Typography variant='h6' fontWeight='600'>\n              {pageTitle}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} md display='flex' justifyContent='flex-end'>\n            {children}\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default PageHeader;\n","import { Box, Typography, useTheme, Button, Stack } from '@mui/material';\nimport { MessageQuestion } from 'iconsax-react';\n\nconst ConfirmContent = ({\n  background = 'transparent',\n  height = 'auto',\n  width = 'auto',\n  boxWidth = 300,\n  title = 'Confirming',\n  message = 'Are you sure?',\n  icon,\n  onConfirm,\n  onClose,\n  loading = false,\n  buttonText = 'Confirm',\n  buttonTextLoading = 'Loading...',\n}: {\n  height?: string | number;\n  width?: string | number;\n  boxWidth?: string | number;\n  message?: string;\n  title?: string;\n  icon?: React.ReactNode;\n  background?: string;\n  onConfirm: () => void;\n  onClose: () => void;\n  buttonText?: string;\n  buttonTextLoading?: string;\n  loading?: boolean;\n}) => {\n  const theme = useTheme();\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        placeItems: 'center',\n        height: height,\n        width: width,\n      }}\n    >\n      <Box\n        sx={{\n          p: 2,\n          background: background || theme.palette.background.paper,\n          borderRadius: 2,\n          width: boxWidth,\n          minHeight: 200,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {icon || (\n          <MessageQuestion\n            variant='Bulk'\n            size={50}\n            color={theme.palette.info.main}\n          />\n        )}\n        <Typography variant='h6' fontWeight='bold' textAlign='center' mt={1}>\n          {title}\n        </Typography>\n        <Typography\n          variant='body2'\n          fontWeight='normal'\n          textAlign='center'\n          mb={2}\n        >\n          {message}\n        </Typography>\n        <Stack direction='row' spacing={2}>\n          {onClose && (\n            <Button size='small' color='inherit' onClick={onClose}>\n              Cancel\n            </Button>\n          )}\n          <Button\n            onClick={onConfirm}\n            color='info'\n            size='small'\n            disabled={loading}\n          >\n            {loading ? buttonTextLoading : buttonText}\n          </Button>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ConfirmContent;\n","import { Box, Typography, alpha, useTheme } from '@mui/material';\nimport { BoxRemove } from 'iconsax-react';\n\nconst EmptyResponse = ({\n  disableBackground = false,\n  height = 'auto',\n  width = 'auto',\n  title = 'No Data',\n  flexGrow = false,\n  icons,\n}: {\n  height?: string | number;\n  width?: string | number;\n  title?: string;\n  icons?: React.ReactNode;\n  disableBackground?: boolean;\n  flexGrow?: boolean;\n}) => {\n  const theme = useTheme();\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        placeItems: 'center',\n        height: height,\n        width: width,\n        flexGrow: flexGrow ? 1 : undefined,\n      }}\n    >\n      <Box\n        sx={{\n          p: disableBackground ? 0 : 2,\n          background: disableBackground ? 'transparent' : alpha(theme.palette.error.light, 0.25),\n          borderRadius: 2,\n          minWidth: disableBackground ? 'auto' : 200,\n          maxWidth: 300,\n          minHeight: disableBackground ? 'auto' : 150,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {icons || <BoxRemove variant='Bulk' size={50} color={theme.palette.error.main} />}\n        <Typography fontWeight='bold' color='error' textAlign='center' mt={1}>\n          {title}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default EmptyResponse;\n","import { Box, Typography, useTheme, Button, Stack } from '@mui/material';\nimport { EmojiSad } from 'iconsax-react';\n\nconst ErrorResponse = ({\n  background,\n  height = 'auto',\n  width = 'auto',\n  boxWidth = 300,\n  errorTitle = 'Fetch Error',\n  errorMessage = 'Something went wrong.',\n  errorIcon,\n  onRetry,\n  onClose,\n  loading = false,\n  buttonText = 'Retry',\n  buttonTextLoading = 'Retrying...',\n  flexGrow = false,\n}: {\n  height?: string | number;\n  width?: string | number;\n  boxWidth?: string | number;\n  errorMessage?: string;\n  errorTitle?: string;\n  errorIcon?: React.ReactNode;\n  background?: string;\n  onRetry?: () => void;\n  onClose?: () => void;\n  buttonText?: string;\n  buttonTextLoading?: string;\n  loading?: boolean;\n  flexGrow?: boolean;\n}) => {\n  const theme = useTheme();\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        placeItems: 'center',\n        height: height,\n        width: width,\n        flexGrow: flexGrow ? 1 : undefined,\n      }}\n    >\n      <Box\n        sx={{\n          p: 2,\n          background: background || theme.palette.background.paper,\n          borderRadius: 2,\n          width: boxWidth,\n          minHeight: 200,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {errorIcon || <EmojiSad variant='Bulk' size={50} color={theme.palette.error.main} />}\n        <Typography variant='h6' fontWeight='bold' color='error' textAlign='center' mt={1}>\n          {errorTitle}\n        </Typography>\n        <Typography variant='body2' fontWeight='normal' color='error' textAlign='center' mb={2}>\n          {errorMessage}\n        </Typography>\n        <Stack direction='row' spacing={2}>\n          {onClose && (\n            <Button size='small' onClick={onClose} autoFocus>\n              OK\n            </Button>\n          )}\n          {onRetry && (\n            <Button onClick={onRetry} size='small' disabled={loading}>\n              {loading ? buttonTextLoading : buttonText}\n            </Button>\n          )}\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ErrorResponse;\n"],"names":["STOCK_API","stockDetail","id","HttpUtil","ROUTE_API","res","data","stockList","search","params","response","stockReportsList","deleteStock","createStock","updateStock","stockAction","STOCK_PRODUCT_API","productList","productDetail","deleteProduct","createProduct","updateProduct","productAction","STOCK_UNIT_API","unitDetail","unitList","deleteUnit","createUnit","updateUnit","unitAction","STOCK_CATEGORY_API","categoryDetail","categoryList","createCategory","deleteCategory","updateCategory","categoryAction","CusLoading","React","className","CusTable","props","sx","container","width","borderCollapse","borderSpacing","table","header","custStyle","headRow","headers","map","p","i","headCell","body","background","pt","borderBottom","fontWeight","theme","typography","fontWeightBold","whiteSpace","bodyRow","palette","common","white","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","Transition","ref","direction","Dialog","cusTitle","alternateTitle","cusHeight","cusWidth","children","content","fullScreen","action","disableCloseButton","disablePadding","dialogActionProps","dialogContentProps","paperProps","dialogTitleProps","useState","open","setOpen","setParams","useImperativeHandle","close","onCloseDialog","undefined","TransitionComponent","onClose","PaperProps","maxWidth","maxHeight","height","component","display","justifyContent","alignItems","onClick","forwardRef","pageTitle","isSmDown","useResponsive","position","bgcolor","boxShadow","borderRadius","mb","py","px","sm","rowGap","item","xs","md","variant","boxWidth","title","message","icon","onConfirm","loading","buttonText","buttonTextLoading","useTheme","placeItems","paper","minHeight","flexDirection","size","color","info","main","textAlign","mt","spacing","disabled","disableBackground","flexGrow","icons","alpha","error","light","minWidth","errorTitle","errorMessage","errorIcon","onRetry","autoFocus"],"sourceRoot":""}