{"version":3,"file":"static/js/6425.e61eea0c.chunk.js","mappings":"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","sources":["pages/Inventories/pages/Units/components/UnitForm.tsx","pages/Inventories/pages/Units/index.tsx","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { Button, Stack } from '@mui/material';\nimport { useRequest } from 'ahooks';\nimport { STOCK_UNIT_API } from 'api/stock';\nimport LabelTextField from 'components/LabelTextField';\nimport { Controller, useForm } from 'react-hook-form';\nimport THEME_UTIL from 'utils/theme-util';\n\ntype UnitFormInput = {\n  id?: number;\n  name: string;\n  description?: string;\n};\n\nconst UnitForm = ({ onClose, id }: { id?: number; onClose: () => void }) => {\n  // React Hook Form\n  const { control, handleSubmit, setValue } = useForm<UnitFormInput>({\n    defaultValues: { description: '', name: '' },\n  });\n\n  const onSubmit = (data: UnitFormInput) => {\n    run(data);\n  };\n\n  // Requests\n  const { run, loading } = useRequest(STOCK_UNIT_API.unitAction, {\n    manual: true,\n    onError: () => console.log('error'),\n    onSuccess: onClose,\n  });\n  const { loading: loadingUnitDetail } = useRequest(\n    () => STOCK_UNIT_API.unitDetail({ id: id! }),\n    {\n      onSuccess: (res) => {\n        setValue('id', res.id);\n        setValue('name', res.name);\n        setValue('description', res.description);\n      },\n      ready: !!id,\n    }\n  );\n\n  return (\n    <Stack spacing={2} component='form' onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        control={control}\n        name='name'\n        render={({ field, fieldState }) => (\n          <LabelTextField\n            size='small'\n            label='Unit name'\n            fieldState={fieldState}\n            {...field}\n          />\n        )}\n      />\n\n      <Controller\n        control={control}\n        name='description'\n        render={({ field, fieldState }) => (\n          <LabelTextField\n            size='small'\n            label='Description'\n            fieldState={fieldState}\n            {...field}\n          />\n        )}\n      />\n\n      <Stack direction='row' spacing={2} pt={2}>\n        <Button\n          onClick={onClose}\n          size='large'\n          variant='outlined'\n          sx={{ flex: 1 }}\n        >\n          Cancel\n        </Button>\n        <LoadingButton\n          loading={loadingUnitDetail || loading}\n          type='submit'\n          size='large'\n          variant='contained'\n          sx={{ flex: 1, background: THEME_UTIL.goldGradientMain }}\n        >\n          Save\n        </LoadingButton>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default UnitForm;\n","import {\n  InputAdornment,\n  Button,\n  Stack,\n  TableRow,\n  TableCell,\n  alpha,\n  useTheme,\n  Container,\n} from '@mui/material';\nimport { CusIconButton } from 'components/CusIconButton';\nimport CusTextField from 'components/CusTextField';\nimport Dialog, { IDialogRef } from 'components/Dialog';\nimport PageHeader from 'components/PageHeader';\nimport { SearchNormal1, Add, Edit2, Trash } from 'iconsax-react';\nimport { useRef, useState } from 'react';\nimport UnitForm from './components/UnitForm';\nimport CusTable from 'components/CusTable';\nimport { useDebounce, useRequest } from 'ahooks';\nimport { STOCK_UNIT_API } from 'api/stock';\nimport { CusLoading } from 'components/CusLoading';\nimport ConfirmContent from 'components/ResponseUIs/ConfirmContent';\nimport ErrorResponse from 'components/ResponseUIs/ErrorResponse';\nimport EmptyResponse from 'components/ResponseUIs/EmptyResponse';\n\nexport default function InventoryUnit() {\n  // Hooks\n  const theme = useTheme();\n  const unitFormRef = useRef<IDialogRef>();\n  const confirmRef = useRef<IDialogRef>();\n\n  // States\n  const [search, setSearch] = useState('');\n\n  // Requests\n  const searchDebounce = useDebounce(search, { wait: 500 });\n  const { data, loading, error, refresh } = useRequest(\n    () => STOCK_UNIT_API.unitList({ search: searchDebounce }),\n    { refreshDeps: [searchDebounce] }\n  );\n  const { run: runDelete } = useRequest(STOCK_UNIT_API.deleteUnit, {\n    manual: true,\n    onSuccess: refresh,\n  });\n\n  return (\n    <>\n      <Dialog\n        ref={unitFormRef}\n        cusWidth={400}\n        cusTitle='Add New Unit'\n        alternateTitle='Update Unit'\n        content={(id?: number) => (\n          <UnitForm\n            id={id}\n            onClose={() => {\n              refresh();\n              unitFormRef.current?.close();\n            }}\n          />\n        )}\n      />\n      <Dialog\n        ref={confirmRef}\n        content={(id?: number) => (\n          <ConfirmContent\n            title='Delete Unit'\n            onConfirm={() => {\n              runDelete({ id });\n              confirmRef.current?.close();\n            }}\n            onClose={() => confirmRef.current?.close()}\n          />\n        )}\n      />\n\n      <PageHeader pageTitle='Inventory Unit'>\n        <CusTextField\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          placeholder='Search...'\n          size='small'\n          sx={{ bgcolor: 'common.white', mr: 2 }}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='end'>\n                <SearchNormal1 size={18} />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button\n          onClick={() => unitFormRef.current?.open()}\n          variant='contained'\n          size='small'\n          disableElevation\n          sx={{\n            color: 'common.white',\n            minWidth: 0,\n          }}\n        >\n          <Add />\n        </Button>\n      </PageHeader>\n\n      <Container maxWidth='xl'>\n        {loading ? (\n          <Stack height='80vh' alignItems='center' justifyContent='center'>\n            <CusLoading />\n          </Stack>\n        ) : error ? (\n          <ErrorResponse height='80vh' errorMessage={error?.message} />\n        ) : data && data.length > 0 ? (\n          <CusTable\n            headers={['No.', 'Name', 'Description', '']}\n            body={data.map((e) => (\n              <TableRow\n                key={e.id}\n                sx={{\n                  background: (theme) => theme.palette.common.white,\n                  '&> td:first-of-type': {\n                    borderTopLeftRadius: '10px',\n                    borderBottomLeftRadius: '10px',\n                  },\n                  '&> td:last-child': {\n                    borderTopRightRadius: '10px',\n                    borderBottomRightRadius: '10px',\n                  },\n                }}\n              >\n                <TableCell>{e.id}</TableCell>\n                <TableCell>{e.name}</TableCell>\n                <TableCell>{e.description}</TableCell>\n                <TableCell align='right'>\n                  <Stack\n                    spacing={2}\n                    direction='row'\n                    alignItems='center'\n                    justifyContent='end'\n                  >\n                    <CusIconButton\n                      onClick={() => unitFormRef.current?.open(e.id)}\n                      sx={{\n                        boxShadow: 0,\n                        background: (theme) =>\n                          alpha(theme.palette.info.main, 0.1),\n                      }}\n                    >\n                      <Edit2\n                        size='20'\n                        color={theme.palette.info.main}\n                        variant='Bold'\n                      />\n                    </CusIconButton>\n                    <CusIconButton\n                      onClick={() => confirmRef.current?.open(e.id)}\n                      sx={{\n                        boxShadow: 0,\n                        background: (theme) =>\n                          alpha(theme.palette.error.main, 0.1),\n                      }}\n                    >\n                      <Trash\n                        size='20'\n                        color={theme.palette.error.main}\n                        variant='Bold'\n                      />\n                    </CusIconButton>\n                  </Stack>\n                </TableCell>\n              </TableRow>\n            ))}\n          />\n        ) : (\n          <EmptyResponse height='80vh' />\n        )}\n      </Container>\n    </>\n  );\n}\n","/* eslint-disable material-ui/mui-name-matches-component-name */\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["onClose","id","useForm","defaultValues","description","name","control","handleSubmit","setValue","useRequest","STOCK_UNIT_API","manual","onError","console","log","onSuccess","run","loading","loadingUnitDetail","res","ready","Stack","spacing","component","onSubmit","data","render","field","fieldState","LabelTextField","size","label","direction","pt","Button","onClick","variant","sx","flex","LoadingButton","type","background","THEME_UTIL","InventoryUnit","theme","useTheme","unitFormRef","useRef","confirmRef","useState","search","setSearch","searchDebounce","useDebounce","wait","refreshDeps","error","refresh","runDelete","Dialog","ref","cusWidth","cusTitle","alternateTitle","content","current","close","ConfirmContent","title","onConfirm","PageHeader","pageTitle","CusTextField","value","onChange","e","target","placeholder","bgcolor","mr","InputProps","endAdornment","InputAdornment","position","SearchNormal1","open","disableElevation","color","minWidth","Add","Container","maxWidth","height","alignItems","justifyContent","CusLoading","ErrorResponse","errorMessage","message","length","CusTable","headers","body","map","TableRow","palette","common","white","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","TableCell","align","CusIconButton","boxShadow","alpha","info","main","Edit2","Trash","EmptyResponse","createContainer","createStyledComponent","styled","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemeProps","inProps"],"sourceRoot":""}