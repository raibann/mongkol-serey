{"version":3,"file":"static/js/6642.30f1d28d.chunk.js","mappings":"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","sources":["components/CusLoading/index.tsx","components/PageHeader/index.tsx","api/dashboard.ts","components/DashboardCard/index.tsx","pages/Dashboard/AnniversaryItem.tsx","components/CusToggleButton/index.tsx","components/ComToPrint/ExportReport.tsx","pages/Dashboard/DashboardHeader.tsx","pages/Dashboard/PieChartComp.tsx","pages/Dashboard/index.tsx","utils/data-util.tsx","utils/validate-util.tsx"],"sourcesContent":["import { Backdrop } from '@mui/material';\nimport React from 'react';\n\ninterface IBackdropLoading {\n  open: boolean;\n}\nconst CusBackDrop = React.memo(({ open = false }: IBackdropLoading) => {\n  return (\n    <Backdrop\n      sx={{\n        zIndex: (theme) => theme.zIndex.drawer + 1,\n      }}\n      open={open}\n    >\n      <div className='lds-facebook'>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </Backdrop>\n  );\n});\n\nconst CusLoading = React.memo(() => {\n  return (\n    <div className='lds-facebook'>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n});\n\nexport { CusBackDrop, CusLoading };\n","import { AppBar, Toolbar, Grid, Typography } from '@mui/material';\nimport React from 'react';\n\nimport useResponsive from 'hook/useResponsive';\n\nconst PageHeader = ({\n  children,\n  pageTitle,\n}: {\n  children?: React.ReactNode;\n  pageTitle: string;\n}) => {\n  const { isSmDown } = useResponsive();\n\n  return (\n    <AppBar\n      position='sticky'\n      sx={{\n        bgcolor: 'background.paper',\n        boxShadow: 'none',\n        borderRadius: 0,\n        mb: 1,\n      }}\n    >\n      <Toolbar sx={{ py: 2, px: { sm: 0 } }}>\n        <Grid container px={isSmDown ? 0 : 3} rowGap={isSmDown ? 2 : 0}>\n          <Grid item xs={6} md='auto'>\n            <Typography variant='h6' fontWeight='600'>\n              {pageTitle}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} md display='flex' justifyContent='flex-end'>\n            {children}\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default PageHeader;\n","import HttpUtil from 'utils/http-util';\nimport { ROUTE_API } from 'utils/route-util';\n\nconst DASHBOARD_API = {\n  getCharts: async () => {\n    const res: IDashboard.IChart = await HttpUtil.get(ROUTE_API.charts);\n    return res;\n  },\n  getTotals: async ({\n    startDate,\n    endDate,\n  }: {\n    startDate: string;\n    endDate: string;\n  }) => {\n    const res: IDashboard.IDashboardData = await HttpUtil.get(\n      ROUTE_API.totals,\n      {\n        params: {\n          startDate: startDate,\n          endDate: endDate,\n        },\n      }\n    );\n    return res;\n  },\n};\n\nexport default DASHBOARD_API;\n","import {\n  Avatar,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Paper,\n  Stack,\n  Tooltip,\n  Typography,\n  alpha,\n  useTheme,\n} from '@mui/material';\nimport { ArrowDown, ArrowUp } from 'iconsax-react';\n\nconst DashboardCard = ({\n  title,\n  icon,\n  value,\n  endTitle,\n  primaryIcon,\n  primaryText,\n  secondaryIcon,\n  secondaryText,\n  primaryReverse,\n  secondaryReverse,\n  primaryTooltip = '',\n  secondaryTooltip = '',\n}: {\n  title: string;\n  icon: React.ReactNode;\n  value: string;\n  primaryReverse?: boolean;\n  secondaryReverse?: boolean;\n  primaryText?: string;\n  primaryIcon?: React.ReactNode;\n  secondaryText?: string;\n  secondaryIcon?: React.ReactNode;\n  endTitle?: string;\n  primaryTooltip?: string;\n  secondaryTooltip?: string;\n}) => {\n  const theme = useTheme();\n  return (\n    <Paper\n      elevation={1}\n      sx={{\n        p: 2,\n        width: '100%',\n        height: '100%',\n        borderRadius: 3,\n        background: theme.palette.common.white,\n      }}\n    >\n      <Typography color='text.secondary'>{title}</Typography>\n      <Stack\n        direction={'row'}\n        alignItems='center'\n        justifyContent={'space-between'}\n      >\n        <List disablePadding dense>\n          <Tooltip title={primaryTooltip} placement='top'>\n            <ListItem\n              disableGutters\n              disablePadding\n              sx={{\n                flexDirection: primaryReverse ? 'row-reverse' : 'row',\n                cursor: 'pointer',\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  minWidth: 0,\n                  mr: 1,\n                  ml: primaryReverse ? 1 : 0,\n                }}\n              >\n                <div>{primaryIcon}</div>\n              </ListItemIcon>\n              <ListItemText\n                primary={primaryText}\n                primaryTypographyProps={{\n                  sx: {\n                    fontWeight: theme.typography.fontWeightBold,\n                    fontSize: theme.typography.h6,\n                  },\n                }}\n              />\n            </ListItem>\n          </Tooltip>\n          {secondaryText && (\n            <Tooltip title={secondaryTooltip} placement='top'>\n              <ListItem\n                disableGutters\n                disablePadding\n                sx={{\n                  flexDirection: secondaryReverse ? 'row-reverse' : 'row',\n                  cursor: 'pointer',\n                }}\n              >\n                <ListItemIcon\n                  sx={{ minWidth: 0, mr: 1, ml: secondaryReverse ? 1 : 0 }}\n                >\n                  <div>{secondaryIcon}</div>\n                </ListItemIcon>\n                <ListItemText\n                  primary={secondaryText}\n                  primaryTypographyProps={{\n                    sx: {\n                      fontWeight: theme.typography.fontWeightBold,\n                      fontSize: theme.typography.h6,\n                      lineHeight: 0.5,\n                    },\n                  }}\n                />\n              </ListItem>\n            </Tooltip>\n          )}\n        </List>\n        <Avatar\n          sx={{\n            background: alpha(theme.palette.primary.light, 0.3),\n            border: `dashed 1px ${theme.palette.primary.main}`,\n            height: 64,\n            width: 64,\n            color: theme.palette.primary.main,\n          }}\n        >\n          {icon}\n        </Avatar>\n      </Stack>\n      {!isNaN(+value) && (\n        <Stack\n          direction={'row'}\n          spacing={0.5}\n          alignItems='center'\n          justifyContent={'flex-end'}\n        >\n          <Typography\n            variant='caption'\n            fontWeight={'bold'}\n            sx={{\n              color:\n                +value > 0\n                  ? theme.palette.success.main\n                  : theme.palette.error.main,\n            }}\n          >\n            {value.startsWith('-')\n              ? Intl.NumberFormat('en', {\n                  maximumFractionDigits: 2,\n                }).format(+value.slice(1))\n              : Intl.NumberFormat('en', {\n                  maximumFractionDigits: 2,\n                }).format(+value)}\n            %\n          </Typography>\n          <div>\n            {+value > 0 ? (\n              <ArrowUp size='12' color={theme.palette.success.main} />\n            ) : (\n              <ArrowDown size='12' color={theme.palette.error.main} />\n            )}\n          </div>\n          <Typography\n            variant='caption'\n            sx={{ color: theme.palette.text.secondary }}\n          >\n            than last {endTitle}\n          </Typography>\n        </Stack>\n      )}\n    </Paper>\n  );\n};\n\nexport default DashboardCard;\n","import {\n  ListItem,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  Box,\n} from '@mui/material';\nimport { User } from 'iconsax-react';\nimport theme from 'theme/theme';\nimport THEME_UTIL from 'utils/theme-util';\nimport { changeBackground } from 'utils/validate-util';\n\nconst AnniversaryItem = ({\n  daysLeft,\n  name,\n  invoiceId,\n  eventType,\n  onClick,\n}: {\n  name: string;\n  daysLeft: number;\n  invoiceId: number;\n  eventType?: string;\n  onClick?: () => void;\n}) => {\n  return (\n    <>\n      <ListItemButton onClick={onClick}>\n        <ListItem\n          sx={{\n            px: 1,\n            py: 0,\n          }}\n          secondaryAction={\n            daysLeft === 0 ? (\n              <Typography\n                fontSize={14}\n                color={theme.palette.success.main}\n                fontWeight='bold'\n              >\n                Today\n              </Typography>\n            ) : (\n              <Typography fontSize={14} color='error.main' fontWeight='bold'>\n                {daysLeft}Days\n              </Typography>\n            )\n          }\n        >\n          <ListItemAvatar>\n            <Avatar\n              sx={{\n                background: !!name\n                  ? changeBackground(name)\n                  : THEME_UTIL.goldGradientMain,\n                fontWeight: 'bold',\n              }}\n            >\n              {!!name ? (\n                name.charAt(0)\n              ) : (\n                <User color={theme.palette.common.white} variant='Bold' />\n              )}\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <Box sx={{ display: 'flex', flexDirection: ['column', 'row'] }}>\n                <Typography>Order ID: {invoiceId}</Typography>\n                <Typography>~ {eventType}</Typography>\n              </Box>\n            }\n            secondary={name}\n          />\n        </ListItem>\n      </ListItemButton>\n    </>\n  );\n};\n\nexport default AnniversaryItem;\n","import { ToggleButton } from '@mui/material';\nimport { styled } from '@mui/material';\n// import THEME_UTIL from 'utils/theme-util';\n\nconst CusToggleButton = styled(ToggleButton)(({ theme }) => ({\n  border: 'none',\n  borderRadius: 8,\n  background: theme.palette.common.white,\n  color: theme.palette.primary.main,\n  boxShadow: theme.shadows[1],\n  '&.Mui-selected': {\n    // background: THEME_UTIL.goldGradientMain,\n    background: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    '&:hover': {\n      background: theme.palette.primary.main,\n\n      // background: THEME_UTIL.goldGradientLight,\n    },\n  },\n}));\n\nexport default CusToggleButton;\n","import {\n  Avatar,\n  Box,\n  Grid,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n} from '@mui/material';\nimport { forwardRef } from 'react';\ninterface IExportReport {\n  dateRange: {\n    startDate: string;\n    endDate: string;\n  };\n  dashTotal?: IDashboard.IDashboardData;\n}\n\nconst ExportReport = forwardRef<HTMLInputElement, IExportReport>(\n  ({ dateRange, dashTotal }, ref) => {\n    const totalIncomes =\n      dashTotal?.totalProfits && dashTotal?.totalExpenses\n        ? dashTotal?.totalProfits - dashTotal?.totalExpenses\n        : 0;\n    return (\n      <Box ref={ref}>\n        <Grid container sx={{ mb: 4 }}>\n          <Grid item xs={7}>\n            <Stack\n              sx={{ height: '100%' }}\n              alignItems='flex-start'\n              justifyContent='center'\n              spacing={0.5}\n            >\n              <Typography\n                fontWeight={'bold'}\n                fontFamily='Khmer Busra high'\n                fontSize={16}\n              >\n                មង្គលសិរីម្ហូប&តុរោងការ\n              </Typography>\n              <Stack direction={'row'} spacing={1.5}>\n                <Typography\n                  fontWeight={'bold'}\n                  fontFamily='Khmer Busra high'\n                  fontSize={16}\n                >\n                  អាស័យដ្ឋាន​៖\n                </Typography>\n                <Typography\n                  fontWeight={'bold'}\n                  fontFamily='Khmer Busra high'\n                  fontSize={16}\n                >\n                  បុរីឈូកវា០៣ ផ្លូវលេខ០៣ ផ្ទះលេខ៨២\n                </Typography>\n              </Stack>\n              <Stack direction={'row'} spacing={1.5}>\n                <Typography\n                  fontWeight={'bold'}\n                  fontFamily='Khmer Busra high'\n                  fontSize={16}\n                >\n                  ទូរស័ព្ទលេខ​៖\n                </Typography>\n                <Typography\n                  fontWeight={'bold'}\n                  fontFamily='Khmer Busra high'\n                  fontSize={16}\n                >\n                  +85581951133 | 011951133\n                </Typography>\n              </Stack>\n            </Stack>\n          </Grid>\n          <Grid item xs={5}>\n            <Avatar\n              variant='square'\n              src={'/images/mongkol_serey_logo_1000.png'}\n              alt='logo'\n              imgProps={{\n                sx: {\n                  objectFit: 'contain',\n                },\n              }}\n              sx={{\n                mx: 'auto',\n                width: 167,\n                height: 'auto',\n                my: 2,\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Typography textAlign={'center'} fontFamily='Moul' variant='h5'>\n          របាយការណ៍\n        </Typography>\n        <br />\n        <Typography\n          textAlign={'center'}\n          fontFamily='Khmer Busra high'\n          variant='subtitle2'\n          gutterBottom\n        >\n          ចាប់ពី ៖ {dateRange.startDate}\n        </Typography>\n        <Typography\n          variant='subtitle2'\n          fontFamily='Khmer Busra high'\n          textAlign={'center'}\n          gutterBottom\n        >\n          ដល់ទី ៖ {dateRange.endDate}\n        </Typography>\n\n        <Table\n          sx={{\n            '& thead  th, tbody  td': {\n              border: '1px solid black',\n              borderCollapse: 'collapse',\n              fontFamily: 'Khmer Busra high',\n              // fontWeight: theme.typography.fontWeightBold,\n              py: 1,\n              color: 'black',\n              fontSize: 16,\n            },\n            '& thead th': {\n              textAlign: 'center',\n            },\n            '& .css-1b87so5-MuiTableCell-root': {\n              color: 'black',\n            },\n          }}\n        >\n          <TableBody>\n            <TableRow>\n              <TableCell width={'50%'}>ចំនួនកម្មវិធីសរុប</TableCell>\n              <TableCell width={'50%'}>\n                {dashTotal?.totalOrders} កម្មវិធី​\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell width={'50%'}>ចំនួនអតិថិជនសរុប</TableCell>\n              <TableCell width={'50%'}>\n                {dashTotal?.totalCustomer} អតិថិជន\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell width={'50%'}>ចំនួនតុសរុប</TableCell>\n              <TableCell width={'50%'}>{dashTotal?.totalTables} តុ</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell width={'50%'}>ចំណូល</TableCell>\n              <TableCell width={'50%'}>\n                {Intl.NumberFormat('en', {\n                  maximumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(dashTotal?.totalProfits || 0)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell width={'50%'}>ចំណាយ</TableCell>\n              <TableCell width={'50%'}>\n                {Intl.NumberFormat('en', {\n                  maximumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(dashTotal?.totalExpenses || 0)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell width={'50%'}>ចំណេញ</TableCell>\n              <TableCell width={'50%'}>\n                {Intl.NumberFormat('en', {\n                  maximumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(totalIncomes)}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Box>\n    );\n  }\n);\n\nexport default ExportReport;\n","import {\n  Avatar,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  ListSubheader,\n  Menu,\n  Popover,\n  Stack,\n  ToggleButtonGroup,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { useEffect, useRef } from 'react';\nimport { CusIconButton } from 'components/CusIconButton';\nimport { BoxRemove, Calendar2, Printer, User } from 'iconsax-react';\n// import { Notification } from 'iconsax-react';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useReminderContext } from 'context/ReminderContext';\nimport { CusLoading } from 'components/CusLoading';\nimport React from 'react';\nimport CusToggleButton from 'components/CusToggleButton';\nimport PageHeader from 'components/PageHeader';\nimport moment from 'moment';\nimport CusTextField from 'components/CusTextField';\nimport LabelTextField from 'components/LabelTextField';\nimport useResponsive from 'hook/useResponsive';\nimport THEME_UTIL from 'utils/theme-util';\nimport { useNavigate } from 'react-router-dom';\nimport { ROUTE_PATH } from 'utils/route-util';\nimport ReactToPrint from 'react-to-print';\nimport { pageStyle } from 'utils/validate-util';\nimport ExportReport from 'components/ComToPrint/ExportReport';\n\ninterface IDateRange {\n  startDate: string;\n  endDate: string;\n}\n\nconst DashboardHeader = ({\n  dateRange,\n  dashTotal,\n  setDateRange,\n  toggleValue,\n  setToggleValue,\n}: {\n  dateRange: {\n    startDate: string;\n    endDate: string;\n  };\n  dashTotal?: IDashboard.IDashboardData;\n  toggleValue: string | null;\n  setToggleValue: React.Dispatch<React.SetStateAction<string | null>>;\n  setDateRange: React.Dispatch<\n    React.SetStateAction<{\n      startDate: string;\n      endDate: string;\n    }>\n  >;\n}) => {\n  // ancher notification\n  const [anchorElNotification, setAnchorElNotification] =\n    React.useState<null | HTMLElement>(null);\n  // anchor datepicker\n  const [anchorElDatePicker, setAnchorElDatePicker] =\n    React.useState<null | HTMLElement>(null);\n\n  useEffect(() => {\n    let monday = moment().weekday(0);\n    let friday = moment().weekday(6);\n    switch (toggleValue) {\n      case 'month':\n        return setDateRange({\n          startDate: moment().startOf('month').format('YYYY-MM-DD'),\n          endDate: moment().endOf('month').format('YYYY-MM-DD'),\n        });\n      case 'year':\n        return setDateRange({\n          startDate: moment().startOf('year').format('YYYY-MM-DD'),\n          endDate: moment().endOf('year').format('YYYY-MM-DD'),\n        });\n      case 'week':\n        return setDateRange({\n          startDate: moment(monday).format('YYYY-MM-DD'),\n          endDate: moment(friday).format('YYYY-MM-DD'),\n        });\n      default:\n        return;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggleValue]);\n\n  // Validate date range\n  const { handleSubmit, control } = useForm<IDateRange>();\n  const handleSubmitDate = (data: IDateRange) => {\n    setDateRange({\n      startDate: moment(data.startDate).format('YYYY-MM-DD'),\n      endDate: moment(data.endDate).format('YYYY-MM-DD'),\n    });\n    setToggleValue(null);\n  };\n  // notification\n  // const handleClickNoti = (event: React.MouseEvent<HTMLButtonElement>) => {\n  //   setAnchorElNotification(event.currentTarget);\n  // };\n  // datepicker\n  const handleClickDatepicker = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setAnchorElDatePicker(event.currentTarget);\n  };\n  // handle close\n  const handleClose = (type: string) => {\n    if (type === 'notification') {\n      setAnchorElNotification(null);\n    } else if (type === 'datepicker') {\n      setAnchorElDatePicker(null);\n    }\n  };\n  // fetch notifications\n  const { reminderList, reminderLoading } = useReminderContext();\n\n  const temp = reminderList?.filter(\n    (el) => moment().diff(el.date, 'years') === 1\n  );\n\n  const { isSmDown, isMdDown } = useResponsive();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const compToPrint = useRef(null);\n\n  return (\n    <>\n      <PageHeader\n        pageTitle='Dashboard'\n        // endComponent={\n        //   <>\n        //     <ReactToPrint\n        //       pageStyle={pageStyle}\n        //       documentTitle={'All Reports'}\n        //       trigger={() => (\n        //         <CusIconButton color='primary' sx={{ height: 40 }}>\n        //           <Printer size='24' variant='Outline' />\n        //         </CusIconButton>\n        //       )}\n        //       content={() => compToPrint.current}\n        //     />\n        //   </>\n        // }\n      >\n        <Stack\n          direction={'row'}\n          justifyContent='flex-end'\n          sx={{ width: '100%', mt: { xs: 2, md: 0 } }}\n          alignItems='center'\n        >\n          <ToggleButtonGroup\n            value={toggleValue}\n            exclusive\n            fullWidth\n            size='small'\n            onChange={(\n              event: React.MouseEvent<HTMLElement, MouseEvent>,\n              value: any\n            ) => {\n              if (value !== null) {\n                setToggleValue(value);\n              }\n            }}\n            sx={{\n              width: { xs: '100%', md: '30%' },\n              height: 40,\n              mr: 2,\n            }}\n          >\n            <CusToggleButton value='week'>Week</CusToggleButton>\n            <CusToggleButton value='month'>Month</CusToggleButton>\n            <CusToggleButton value='year'>Year</CusToggleButton>\n          </ToggleButtonGroup>\n          <CusIconButton\n            color='primary'\n            onClick={handleClickDatepicker}\n            sx={{\n              mr: { xs: 0, md: 2 },\n            }}\n          >\n            <Calendar2 size='24' variant='Outline' />\n          </CusIconButton>\n\n          {!isMdDown && (\n            <ReactToPrint\n              pageStyle={pageStyle}\n              documentTitle={'All Reports'}\n              trigger={() => (\n                <CusIconButton color='primary' sx={{ height: 40 }}>\n                  <Printer size='24' variant='Outline' />\n                </CusIconButton>\n              )}\n              content={() => compToPrint.current}\n            />\n          )}\n        </Stack>\n      </PageHeader>\n      <Menu\n        MenuListProps={{ sx: { p: 0 } }}\n        sx={{\n          mt: 1,\n          height: 350,\n        }}\n        anchorEl={anchorElNotification}\n        open={Boolean(anchorElNotification)}\n        onClose={() => handleClose('notification')}\n      >\n        <List\n          disablePadding\n          sx={{\n            width: 400,\n            px: 2,\n            pb: 2,\n          }}\n        >\n          <ListSubheader\n            sx={{\n              p: 2,\n              pl: 0,\n              background: (theme) => theme.palette.common.white,\n            }}\n          >\n            <Typography\n              variant='subtitle1'\n              fontWeight={theme.typography.fontWeightBold}\n            >\n              Anniverysary\n            </Typography>\n          </ListSubheader>\n          {reminderLoading ? (\n            <Stack\n              alignItems={'center'}\n              justifyContent='center'\n              height={'100%'}\n            >\n              <CusLoading />\n            </Stack>\n          ) : temp && temp.length > 0 ? (\n            reminderList?.map(\n              (data) =>\n                moment().diff(data.date, 'years') === 1 && (\n                  <ListItemButton\n                    key={data.id}\n                    onClick={() =>\n                      navigate(`${ROUTE_PATH.orders}?id=${data.id}`)\n                    }\n                  >\n                    <ListItem\n                      sx={{\n                        px: 1,\n                        py: 0,\n                      }}\n                      secondaryAction={\n                        <Typography\n                          fontSize={14}\n                          color={theme.palette.success.main}\n                          fontWeight='bold'\n                        >\n                          Today\n                        </Typography>\n                      }\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            background: THEME_UTIL.goldGradientMain,\n                            fontWeight: 'bold',\n                          }}\n                        >\n                          {data.customer !== null ? (\n                            data.customer.customer_name.charAt(0).toUpperCase()\n                          ) : (\n                            <User\n                              color={theme.palette.common.white}\n                              variant='Bold'\n                            />\n                          )}\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={`Order ID: ${data.id} ~ ${data.type}`}\n                        secondary={\n                          data.customer === null\n                            ? 'No Customer'\n                            : data.customer.customer_name\n                        }\n                      />\n                    </ListItem>\n                  </ListItemButton>\n                )\n            )\n          ) : (\n            <Stack\n              alignItems={'center'}\n              justifyContent='center'\n              height={'100%'}\n              spacing={1}\n            >\n              <BoxRemove size='48' color={theme.palette.error.main} />\n              <Typography variant='h6' color='error'>\n                No Notification\n              </Typography>\n            </Stack>\n          )}\n        </List>\n      </Menu>\n      {/* pop over */}\n      <Popover\n        id={Boolean(anchorElDatePicker) ? 'simple-popover' : undefined}\n        open={Boolean(anchorElDatePicker)}\n        anchorEl={anchorElDatePicker}\n        onClose={() => handleClose('datepicker')}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        sx={{ mt: 1 }}\n      >\n        <form\n          style={{ height: '100%' }}\n          onSubmit={handleSubmit(handleSubmitDate)}\n        >\n          <Stack sx={{ p: 2, height: '100%' }} spacing={2}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Stack direction={isSmDown ? 'column' : 'row'} spacing={2}>\n                <Controller\n                  control={control}\n                  name='startDate'\n                  render={({ field }) => (\n                    <LabelTextField label='Start date'>\n                      <DatePicker\n                        openTo='day'\n                        views={['year', 'month', 'day']}\n                        value={field.value}\n                        onChange={(date) => {\n                          field.onChange(date);\n                        }}\n                        renderInput={(params) => <CusTextField {...params} />}\n                      />\n                    </LabelTextField>\n                  )}\n                />\n                <Controller\n                  control={control}\n                  name='endDate'\n                  render={({ field }) => (\n                    <LabelTextField label='End date'>\n                      <DatePicker\n                        openTo='day'\n                        views={['year', 'month', 'day']}\n                        value={field.value}\n                        onChange={(date) => {\n                          field.onChange(date);\n                        }}\n                        renderInput={(params) => <CusTextField {...params} />}\n                      />\n                    </LabelTextField>\n                  )}\n                />\n              </Stack>\n            </LocalizationProvider>\n            <Button\n              variant='contained'\n              type='submit'\n              onClick={() => handleClose('datepicker')}\n              sx={{\n                width: '100%',\n                color: (theme) => theme.palette.common.white,\n                borderRadius: 2,\n                boxShadow: 0,\n                py: 1,\n              }}\n            >\n              Confirm\n            </Button>\n          </Stack>\n        </form>\n      </Popover>\n      <div style={{ display: 'none' }}>\n        <ExportReport\n          ref={compToPrint}\n          dateRange={dateRange}\n          dashTotal={dashTotal}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default DashboardHeader;\n","import React from 'react';\nimport {\n  Pie,\n  Cell,\n  PieChart,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport theme from 'theme/theme';\n\nconst COLORS = [\n  theme.palette.primary.main,\n  theme.palette.success.main,\n  theme.palette.warning.main,\n  theme.palette.error.main,\n];\n\nconst PieChartComp = ({\n  dashTotal,\n}: {\n  dashTotal: IDashboard.IDashboardData | undefined;\n}) => {\n  const data = [\n    { name: 'Wedding', value: dashTotal?.eventType.Wedding },\n    { name: 'Birthday', value: dashTotal?.eventType.Birthday },\n    { name: 'Party', value: dashTotal?.eventType.Party },\n    { name: 'Other', value: dashTotal?.eventType.Other },\n  ];\n\n  return (\n    <ResponsiveContainer width='100%' height='65%'>\n      <PieChart margin={{ bottom: 24, left: 56, right: 56 }}>\n        <Legend />\n        <Tooltip />\n        <Pie\n          data={data}\n          innerRadius={60}\n          outerRadius={80}\n          paddingAngle={5}\n          dataKey='value'\n        >\n          {data.map((_, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default PieChartComp;\n","import {\n  Box,\n  Divider,\n  Grid,\n  List,\n  Paper,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport DASHBOARD_API from 'api/dashboard';\nimport { CusLoading } from 'components/CusLoading';\nimport DashboardCard from 'components/DashboardCard';\nimport useResponsive from 'hook/useResponsive';\nimport {\n  BoxRemove,\n  MoneyRecive,\n  MoneySend,\n  Profile2User,\n  StatusUp,\n} from 'iconsax-react';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport theme from 'theme/theme';\nimport { MonthRanks, PercentFilter } from 'utils/data-util';\nimport { DataFormater, formatCash } from 'utils/validate-util';\nimport AnniversaryItem from './AnniversaryItem';\nimport DashboardHeader from './DashboardHeader';\nimport PieChartComp from './PieChartComp';\nimport { useRequest } from 'ahooks';\nimport { useNavigate } from 'react-router-dom';\nimport { ROUTE_PATH } from 'utils/route-util';\n\nconst Dashboard = () => {\n  // use moment\n  let monday = moment().weekday(0);\n  let friday = moment().weekday(6);\n  const [currentTime, setCurrentTime] = useState(moment());\n  const [toggleValue, setToggleValue] = useState<string | null>('week');\n  const [dateRange, setDateRange] = useState({\n    startDate: moment(monday).format('YYYY-MM-DD'),\n    endDate: moment(friday).format('YYYY-MM-DD'),\n  });\n  const [loadingDateRange, setLoadingDateRange] = useState(false);\n  const { isMdDown } = useResponsive();\n  const navigate = useNavigate();\n\n  // fetch total\n  const {\n    data: dashTotal,\n    run: fetchDashTotal,\n    loading: isDashLoading,\n  } = useRequest(DASHBOARD_API.getTotals, {\n    manual: true,\n    onSuccess: () => setLoadingDateRange(false),\n  });\n  // fetch chart\n  const { data: chartData, loading: isLoadingChart } = useRequest(\n    DASHBOARD_API.getCharts,\n    { manual: false }\n  );\n  // useEffect total\n  useEffect(() => {\n    fetchDashTotal({\n      startDate: dateRange.startDate,\n      endDate: dateRange.endDate,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dateRange]);\n\n  useEffect(() => {\n    setLoadingDateRange(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggleValue]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(moment());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n  const CHART1_DATA = chartData?.charts.map((data) => {\n    return {\n      name: MonthRanks[data.month],\n      Events: data.amount,\n    };\n  });\n\n  const CHART2_DATA = chartData?.charts.map((data) => {\n    return {\n      name: MonthRanks[data.month],\n      Sales: data.profits,\n      Expenses: data.expenses,\n    };\n  });\n  // get table by events\n\n  const getTables = (value: number) => {\n    if (chartData?.charts) {\n      let temp = [...chartData.charts];\n      temp = temp?.filter((data) => data.amount === value);\n      return temp[0].tables;\n    }\n  };\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <Box\n          sx={{\n            background: (theme) => theme.palette.background.default,\n            p: 1,\n            boxShadow: (theme) => theme.shadows[1],\n          }}\n        >\n          <Typography>{label}</Typography>\n          <Typography color={'primary.main'}>\n            Events: {payload[0].value}\n          </Typography>\n          <Typography color='info.main'>\n            Tables: {getTables(parseInt(payload[0].value))}\n          </Typography>\n        </Box>\n      );\n    }\n\n    return null;\n  };\n\n  // console.log('dateRange', dateRange);\n\n  return (\n    <>\n      <DashboardHeader\n        {...{\n          setDateRange,\n          fetchDashTotal,\n          setToggleValue,\n          toggleValue,\n          dashTotal,\n          dateRange,\n        }}\n      />\n      {isDashLoading && isLoadingChart ? (\n        <Stack\n          sx={{ height: 'calc( 100vh - 74px )' }}\n          justifyContent='center'\n          alignItems={'center'}\n        >\n          <CusLoading />\n        </Stack>\n      ) : (\n        <>\n          <Stack direction={'row'}>\n            <Grid container spacing={2} px={2}>\n              {isDashLoading ? (\n                <Grid\n                  item\n                  xs={12}\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '146px',\n                  }}\n                >\n                  <CusLoading />\n                </Grid>\n              ) : (\n                <>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Profits'\n                      primaryTooltip={`${Intl.NumberFormat('en', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(\n                        dashTotal?.totalProfits\n                          ? dashTotal?.totalProfits - dashTotal?.totalExpenses\n                          : 0\n                      )}`}\n                      value={`${\n                        chartData?.Percentage.totalProfits[\n                          +PercentFilter[`${toggleValue}`]\n                        ]\n                      }`}\n                      icon={<MoneyRecive />}\n                      endTitle={`${toggleValue}`}\n                      primaryIcon={\n                        <Typography\n                          variant='h6'\n                          sx={{\n                            color: (theme) => theme.palette.info.main,\n                          }}\n                        >\n                          $\n                        </Typography>\n                      }\n                      primaryText={DataFormater(\n                        dashTotal?.totalProfits\n                          ? dashTotal?.totalProfits - dashTotal?.totalExpenses\n                          : 0\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Expenses'\n                      icon={<MoneySend />}\n                      endTitle={`${toggleValue}`}\n                      primaryTooltip={`${Intl.NumberFormat('en', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(dashTotal?.totalExpenses || 0)}`}\n                      value={`${\n                        chartData?.Percentage.totalExpenses[\n                          +PercentFilter[`${toggleValue}`]\n                        ]\n                      }`}\n                      primaryIcon={\n                        <Typography\n                          variant='h6'\n                          sx={{ color: (theme) => theme.palette.info.main }}\n                        >\n                          $\n                        </Typography>\n                      }\n                      primaryText={DataFormater(dashTotal?.totalExpenses || 0)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Orders'\n                      endTitle={`${toggleValue}`}\n                      primaryTooltip={`${Intl.NumberFormat().format(\n                        dashTotal?.totalOrders || 0\n                      )}`}\n                      secondaryTooltip={`${dashTotal?.totalTables || 0}`}\n                      icon={<StatusUp />}\n                      primaryReverse={true}\n                      secondaryReverse={true}\n                      primaryIcon={\n                        <Typography\n                          variant='caption'\n                          sx={{ color: (theme) => theme.palette.info.main }}\n                        >\n                          Events\n                        </Typography>\n                      }\n                      secondaryIcon={\n                        <Typography\n                          variant='caption'\n                          sx={{ color: (theme) => theme.palette.info.main }}\n                        >\n                          Tables\n                        </Typography>\n                      }\n                      value={`${\n                        chartData?.Percentage.totalOrders[\n                          +PercentFilter[`${toggleValue}`]\n                        ]\n                      }`}\n                      primaryText={`${DataFormater(\n                        dashTotal?.totalOrders || 0\n                      )}`}\n                      secondaryText={`${DataFormater(\n                        dashTotal?.totalTables || 0\n                      )}`}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg>\n                    <DashboardCard\n                      title='Total Customers'\n                      endTitle={`${toggleValue}`}\n                      primaryReverse={true}\n                      primaryTooltip={`${Intl.NumberFormat().format(\n                        dashTotal?.totalCustomer || 0\n                      )}`}\n                      primaryIcon={\n                        <Typography\n                          variant='caption'\n                          sx={{ color: (theme) => theme.palette.info.main }}\n                        >\n                          Customers\n                        </Typography>\n                      }\n                      icon={<Profile2User />}\n                      value={`${\n                        chartData?.Percentage.totalCustomer[\n                          +PercentFilter[`${toggleValue}`]\n                        ]\n                      }`}\n                      primaryText={`${dashTotal?.totalCustomer || 0}`}\n                    />\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </Stack>\n          <Stack\n            mt={2}\n            px={2}\n            direction={{ xs: 'column-reverse', md: 'row' }}\n            spacing={2}\n            height={{ xs: 1020, md: 400 }}\n          >\n            <Paper\n              elevation={1}\n              sx={{\n                width: { xs: '100%', md: '60%' },\n                py: 3,\n                pr: 5,\n              }}\n            >\n              <Typography fontWeight={500} variant='h5' ml={5} mb={3}>\n                Events\n              </Typography>\n\n              <ResponsiveContainer width='100%' height='90%'>\n                <BarChart\n                  data={CHART1_DATA}\n                  barSize={25}\n                  layout={isMdDown ? 'vertical' : 'horizontal'}\n                >\n                  <CartesianGrid vertical={false} />\n\n                  {isMdDown ? (\n                    <>\n                      <XAxis type='number' domain={[0, 20]} />\n                      <YAxis dataKey='name' type='category' />\n                    </>\n                  ) : (\n                    <>\n                      <XAxis dataKey='name' />\n                      <YAxis domain={[0, 20]} />\n                    </>\n                  )}\n                  <Tooltip content={<CustomTooltip />} />\n                  <Bar\n                    dataKey='Events'\n                    fill={theme.palette.primary.main}\n                    orientation='top'\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n\n            <Paper\n              sx={{\n                flexGrow: 1,\n                height: '100%',\n                overflow: 'auto',\n              }}\n            >\n              <Typography\n                fontWeight={600}\n                fontSize={18}\n                px={3}\n                pt={3}\n                pb={2}\n                position='sticky'\n                top={0}\n                zIndex={theme.zIndex.appBar - 1}\n                bgcolor='common.white'\n              >\n                Upcoming Event\n              </Typography>\n              {chartData && chartData?.reminder.length > 0 ? (\n                <List\n                  sx={{\n                    bgcolor: 'common.white',\n                    p: 0,\n                  }}\n                >\n                  {chartData?.reminder.map((data, i) => {\n                    const getCount = moment.duration(\n                      moment(data.date).diff(currentTime)\n                    );\n                    return (\n                      <AnniversaryItem\n                        key={data.id}\n                        onClick={() =>\n                          navigate(`${ROUTE_PATH.orders}?id=${data.id}`)\n                        }\n                        daysLeft={getCount.days()}\n                        name={\n                          data.customer !== null\n                            ? data.customer.customer_name\n                            : 'No Customer'\n                        }\n                        invoiceId={data.id}\n                        eventType={data.type}\n                      />\n                    );\n                  })}\n                </List>\n              ) : (\n                <Stack\n                  direction={'column'}\n                  alignItems={'center'}\n                  justifyContent='center'\n                  spacing={1}\n                  sx={{ height: 'calc(100% - 100px)' }}\n                >\n                  <BoxRemove size='64' color={theme.palette.error.main} />\n                  <Typography variant='body1' color='error'>\n                    No upcoming event\n                  </Typography>\n                </Stack>\n              )}\n            </Paper>\n          </Stack>\n          <Stack\n            mt={2}\n            px={2}\n            direction={{ xs: 'column', md: 'row' }}\n            spacing={2}\n            height={{ xs: 1300, md: 400 }}\n            mb={4}\n          >\n            <Paper\n              elevation={1}\n              sx={{\n                width: { xs: '100%', md: '60%' },\n                height: { xs: 'auto', md: 'auto' },\n                py: 3,\n                pr: 5,\n              }}\n            >\n              <Stack direction={'row'} justifyContent='space-between'>\n                <Typography fontWeight={500} variant='h5' ml={5} mb={3}>\n                  Sales Report\n                </Typography>\n\n                <Typography fontWeight={500} variant='subtitle1' mb={3}>\n                  {isDashLoading || loadingDateRange\n                    ? 'Calculating Income...'\n                    : `${\n                        'Total Income: $' +\n                        formatCash(\n                          dashTotal?.totalProfits ? dashTotal?.totalProfits : 0\n                        )\n                      }${\n                        toggleValue ? `/this ${toggleValue}` : `/specific date`\n                      }`}\n                </Typography>\n              </Stack>\n              <ResponsiveContainer width='100%' height={isMdDown ? 400 : '85%'}>\n                <BarChart data={CHART2_DATA} barSize={15} layout='horizontal'>\n                  <CartesianGrid vertical={false} />\n                  <XAxis dataKey='name' />\n                  <YAxis\n                    type='number'\n                    domain={[0, 100000]}\n                    tickFormatter={DataFormater}\n                  />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey='Sales' fill={theme.palette.success.main} />\n                  <Bar dataKey='Expenses' fill={theme.palette.error.main} />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n\n            <Paper\n              className='hide-scrollbar'\n              sx={{\n                px: 3,\n                flexGrow: 1,\n                overflow: 'auto',\n                height: { xs: 'auto', md: '100%' },\n                position: 'relative',\n              }}\n            >\n              <Typography\n                fontWeight={600}\n                fontSize={18}\n                pt={3}\n                pb={2}\n                position='sticky'\n                top={0}\n                zIndex={theme.zIndex.appBar}\n                bgcolor='common.white'\n              >\n                Type of Event\n              </Typography>\n              <PieChartComp {...{ dashTotal }} />\n              <Box\n                position='absolute'\n                bottom={0}\n                left={0}\n                width={'100%'}\n                px={3}\n              >\n                <Divider\n                  sx={{\n                    borderBottomWidth: 0.1,\n                    borderColor: theme.palette.divider,\n                  }}\n                />\n              </Box>\n            </Paper>\n          </Stack>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n","import { GrUserAdmin } from 'react-icons/gr';\nimport { MdOutlineAdminPanelSettings } from 'react-icons/md';\nimport theme from 'theme/theme';\n\nconst listTitle = [\n  {\n    id: undefined,\n    title: 'កម្លាំងចុងភៅ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ថ្លៃជួលសម្ភារៈ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ឡានដឹក',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ហ្គាស',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់ជ្រូក',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់ទា',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់គោ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់មាន់',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'គ្រឿងសមុទ្រ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សាច់ពពែ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីឆ្ដោរ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីឆ្ដុង',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីតុកែ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីសុងហឺ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ជ្រូកខ្វៃ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ទាខ្វៃ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'បន្លែ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ប្រហិតបាក់សៀប ជើងទា',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ចាហួយ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'រោងកម្មវិធី',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'កម្រាលព្រំ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ក្ដាពិស',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'អំពូល កង្ហារ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'អំពូល គ្រីសស្ទាល់',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ម៉ាស៊ីនភ្លើង',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ចាប់ក្រណាត់មុខរោង',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'សេវាពិធីការ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'នំបុ័ង',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ឆាខ្វៃ សណ្ដែក',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'បង្អែម',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ត្រីឆ្អើរ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ពងត្រី',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'ទឹកកកអនាម័យ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n  {\n    id: undefined,\n    title: 'អង្ករ',\n    totalPrice: 0,\n    paidBy: '',\n    other: '',\n  },\n];\n\nconst paidBy = [\n  'Cash',\n  'ABA',\n  'ACLEDA',\n  'WING',\n  'BAKONG',\n  'CANADIA',\n  'TRUE MONEY',\n  // 'SATHAPANA',\n  // 'WOORI',\n  // 'AMK',\n  // 'PRASAC',\n  // 'PHILLIP',\n  // 'PRINCE',\n  // 'HATTHA',\n  // 'CP Bank',\n  // 'VATTANAC',\n  // 'JTRUST ROYAL',\n  // 'FTB Bank',\n  // 'PPC Bank',\n  // 'CHIP MONG Bank',\n  // 'MOHANOKOR',\n  // 'SBI LY HOUR',\n  // 'MAY Bank',\n  // 'eMoney Agent',\n  // 'Pi Pay',\n];\n\nconst paidByColor: { [key: string]: string } = {\n  ACLEDA: '#143c6d',\n  ABA: '#005b7a',\n  WING: '#a4c535',\n  BAKONG: '#dc222c',\n  CANADIA: '#D61229',\n  Cash: '#BB9300',\n  'TRUE MONEY': '#f88a30',\n  // 'Pi Pay': '#ed288a',\n};\n\nconst foodList = [\n  'មហាសម្បត្តិទាំង៥',\n  'ឆាប៉ាវហុឺ តៅហ៊ូពងមាន់ 10ក្រឡ',\n  'ភ្លាម៉ាញ៉ាណេសាច់គោ ',\n  'បង្គាបំពងខ្ទឹមស',\n  'ត្រីឆ្ពុងចំហុយក្រូចឆ្មា ទឹកដោះគោឆៅ',\n  'ម្ជូរយួនបង្កង',\n  'បាយឆាគ្រាប់ឈូក & បាយស',\n  'បង្អែមសងខ្យា3ស្រទាប់',\n  'ក្ងានខ្វៃទឹកឃ្មុំ ទាខ្វៃប៉េកាំង',\n  'ឆាផ្សិតតុងកូវ បន្លែបញ្ជះពណ៍',\n  'ម្ជូរគ្រឿងពោះគោ',\n  'បាយឆាពងទាប្រៃ & បាយស',\n  'បង្អែមចេកខ្ទិះ ពងមាន់',\n  'ប្រហិតត្រីស្លាត',\n  'គាវបំពង',\n  'ប្រហិតអំពៅ',\n  'ទាផ្លិត ជ្រក់ឆៃថាវ',\n  'មាន់ទឹមចំហុយ',\n  'បង្គារុំស្បៃ',\n  'ត្រីសុងហឺចំហុយក្រូចឆ្មា',\n  'តុងយាំកូនកាត់',\n  'បាយឆាយ៉ាងចូវ បាយស',\n  'បង្អែមគ្រាប់ឈូក',\n  'បង្អែមត្នោត',\n  'ត្រីប្រម៉ាចៀន',\n  'តី្រប្រម៉ា ចំហុយពងទា',\n  'ត្រីបំពងសា្វយ ទឹកត្រីអំពិលទុំ',\n  'ម្ជូយួនគ្រឿងសមុទ្រ',\n  'រោងកម្មវិធីចាប់ក្រណាត់ម៉ូតថ្មី',\n  'អំពូលគ្រីស្តាល់',\n  'កង្ហារត្រជាក់',\n  'ព្រំក្រហមមួយផ្លុវដើរ',\n  'ទឹកកកអនាម័យ',\n  'ក្បាលជ្រូក១ មាន់ស្ងោរ១គូ',\n  'អាហារសែនកុងម៉ា',\n  'សេវាពិធីការ ៧នាក់',\n  'បបរពេលព្រឹក ២ខ្ទះ (លើស 25០$/ខ្ទះ)',\n  'បាយថ្ងៃត្រង់ ១១តុ (លើស 8០$/តុ)',\n  'ក្តាពីស 3$/m2',\n  'បន្ទប់ទឹកចល័ត 100$/pc',\n  'ត្រីប្រម៉ាចំហុយ',\n  'ត្រីបំពងឡប់ឡែ',\n  'ស៊ុបចាប់ឆាយគ្រឿងសមុទ្រ',\n  'ឆាឆ្អឹងជំនីបំពងបន្លែជូរអែម',\n  'តុងយាំគ្រឿងសមុទ្រ',\n  'ត្រីសុងហឺបំពងប្រាំរសជាតិ',\n  'ញាំជើងទាគ្រឿងសមុទ្រ',\n  'ទាខ្វៃប៉េកាំង',\n  'បាយសែនកុងម៉ា 1ថាស',\n  'ឆាបង្គា ខាត់ណាចិន',\n  'ត្រីក្រហមចំហុយមីសួរ',\n  'ស៊ុបក្រពះជ្រូកខ្ចី',\n  'ស៊ុបក្តាមផ្សិតមាស 10ក្រឡ',\n  'ត្រីឆ្ពុងចំហុយទឹកស៊ីអៀវចិន',\n];\nconst unitList = [\n  'តុ',\n  'ចាន',\n  'ខ្ទះ',\n  'នាក់',\n  'ឈុត',\n  'm²',\n  'គ្រឿង',\n  'ប្រឡោះ',\n  // `m${'2'.sup()}`,\n  'pcs',\n];\n\nconst eventList = [\n  'Wedding',\n  'Birthday',\n  'Party',\n  'House Warming',\n  'Engagement',\n];\n\nexport { paidBy, paidByColor, listTitle, foodList, unitList, eventList };\n\nexport const role = [\n  {\n    id: 1,\n    name: 'ROLE_SUPER_ADMIN',\n    description: 'Has access to everything',\n    icon: (\n      <GrUserAdmin\n        size={24}\n        style={{\n          position: 'relative',\n          left: 2,\n        }}\n      />\n    ),\n    disable: true,\n  },\n  {\n    id: 2,\n    name: 'ROLE_ADMIN',\n    description: 'No access to user management',\n    icon: (\n      <MdOutlineAdminPanelSettings\n        size={28}\n        color={theme.palette.common.black}\n      />\n    ),\n    disable: false,\n  },\n];\n\nexport enum MonthRanks {\n  'Jan' = 1,\n  'Feb' = 2,\n  'Mar' = 3,\n  'Apr' = 4,\n  'May' = 5,\n  'Jun' = 6,\n  'Jul' = 7,\n  'Aug' = 8,\n  'Sep' = 9,\n  'Oct' = 10,\n  'Nov' = 11,\n  'Dec' = 12,\n}\nexport const MonthKH: {\n  [key: string]: string;\n} = {\n  January: 'មករា',\n  February: 'កុម្ភៈ',\n  March: 'មិនា',\n  April: 'មេសា',\n  May: 'ឧសភា',\n  June: 'មិថុនា',\n  July: 'កក្កដា',\n  August: 'សីហា',\n  September: 'កញ្ញា',\n  October: 'តុលា',\n  November: 'វិច្ឆិកា',\n  December: 'ធ្នូ',\n};\n\nexport const PercentFilter: { [key: string]: number } = {\n  week: 0,\n  month: 1,\n  year: 2,\n};\n\n// Types\nexport enum EnumCustomerType {\n  POTENTIAL_CUSTOMER = 'POTENTIAL_CUSTOMER',\n  CUSTOMER = 'CUSTOMER',\n}\n\nexport enum EnumGenderType {\n  OTHER = 'OTHER',\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n}\n\nexport enum EnumSocialType {\n  FB = 'FB',\n  TG = 'TG',\n}\n\nexport enum EnumStockType {\n  STOCK = 'STOCK',\n  NON_STOCK = 'NON_STOCK',\n}\n\nexport const StockTypeDescription: { [key: string]: string } = {\n  STOCK: 'មានក្នុងស្តុក',\n  NON_STOCK: 'មិនមានស្តុក',\n};\n\nexport const EXCHANGE_RATE = 4100;\n","export const validatePatterns = {\n  phoneNumber: /0[0-9]{8}$|0[0-9]{9}$/,\n  numberOnly: /^-?[0-9]\\d*(\\.\\d+)?$/,\n  positiveNumberOnly: /^(0*[1-9][0-9]*(\\.[0-9]+)?|0+\\.[0-9]*[1-9][0-9]*)$/,\n  positiveNumberOnlyandEmpty: /$^|^[0-9]\\d*(\\.\\d+)?\\.?$/,\n  email: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n  textOnly: /^[a-zA-Z ]*$/,\n};\n\n// format separateComma\nexport const separateComma = (val: number) => {\n  // remove sign if negative\n  var sign = 1;\n  if (val < 0) {\n    sign = -1;\n    val = -val;\n  }\n  // trim the number decimal point if it exists\n  let num = val.toString().includes('.')\n    ? val.toString().split('.')[0]\n    : val.toString();\n  let len = num.toString().length;\n  let result = '';\n  let count = 1;\n\n  for (let i = len - 1; i >= 0; i--) {\n    result = num.toString()[i] + result;\n    if (count % 3 === 0 && count !== 0 && i !== 0) {\n      result = ',' + result;\n    }\n    count++;\n  }\n\n  // add number after decimal point\n  if (val.toString().includes('.')) {\n    result = result + '.' + val.toString().split('.')[1];\n  }\n  // return result with - sign if negative\n  return sign < 0 ? '-' + result : result;\n};\n\n// format cash\nexport const formatCash = (n: number) => {\n  if (n < 1e3) return n.toLocaleString(undefined, { minimumFractionDigits: 2 });\n  if (n >= 1e3 && n < 1e6)\n    return n.toLocaleString(undefined, { minimumFractionDigits: 2 });\n  if (n >= 1e6 && n < 1e9) return +(n / 1e6).toFixed(1) + 'M';\n  if (n >= 1e9 && n < 1e12) return +(n / 1e9).toFixed(1) + 'B';\n  if (n >= 1e12) return +(n / 1e12).toFixed(1) + 'T';\n};\n\n// format background color\nexport const changeBackground = (name?: string) => {\n  var hash = 0;\n  let i;\n  if (name) {\n    for (i = 0; i < name.length; i += 1) {\n      hash = name.charCodeAt(i) + ((hash << 5) - hash);\n    }\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  return color;\n};\n// format invoice id\nexport const formatInvoiceId = (value: string) => {\n  const pad = '00000';\n  return pad.substring(0, pad.length - value.length) + value;\n};\n// format data\nexport const DataFormater = (number: number) => {\n  return Intl.NumberFormat('en-US', {\n    notation: 'compact',\n    compactDisplay: 'short',\n  }).format(number);\n};\n\nexport const pageStyle = ` @page {\n  size: A4;\n  margin:2.54cm;\n}\n\n@media all {\n  .pagebreak {\n    display: none;\n  }\n}\n\n@media print {\n  .pagebreak {\n    page-break-before: always;\n  }\n}`;\n\nexport const pageStyleGrocery = ` @page {\n  size: A4;\n  margin:1mm;\n}\n\n@media all {\n  .pagebreak {\n    display: none;\n  }\n}\n\n@media print {\n  .pagebreak {\n    page-break-before: always;\n  }\n}`;\n"],"names":["CusLoading","React","className","children","pageTitle","isSmDown","useResponsive","position","sx","bgcolor","boxShadow","borderRadius","mb","py","px","sm","container","rowGap","item","xs","md","variant","fontWeight","display","justifyContent","DASHBOARD_API","getCharts","HttpUtil","ROUTE_API","res","getTotals","startDate","endDate","params","title","icon","value","endTitle","primaryIcon","primaryText","secondaryIcon","secondaryText","primaryReverse","secondaryReverse","primaryTooltip","secondaryTooltip","theme","useTheme","Paper","elevation","p","width","height","background","palette","common","white","Typography","color","Stack","direction","alignItems","List","disablePadding","dense","Tooltip","placement","ListItem","disableGutters","flexDirection","cursor","ListItemIcon","minWidth","mr","ml","ListItemText","primary","primaryTypographyProps","typography","fontWeightBold","fontSize","h6","lineHeight","Avatar","alpha","light","border","main","isNaN","spacing","success","error","startsWith","Intl","NumberFormat","maximumFractionDigits","format","slice","ArrowUp","size","ArrowDown","text","secondary","daysLeft","name","invoiceId","eventType","onClick","ListItemButton","secondaryAction","ListItemAvatar","changeBackground","THEME_UTIL","charAt","User","Box","CusToggleButton","styled","ToggleButton","shadows","forwardRef","ref","dateRange","dashTotal","totalIncomes","totalProfits","totalExpenses","Grid","fontFamily","src","alt","imgProps","objectFit","mx","my","textAlign","gutterBottom","Table","borderCollapse","TableBody","TableRow","TableCell","totalOrders","totalCustomer","totalTables","style","currency","setDateRange","toggleValue","setToggleValue","anchorElNotification","setAnchorElNotification","anchorElDatePicker","setAnchorElDatePicker","useEffect","monday","moment","weekday","friday","startOf","endOf","useForm","handleSubmit","control","handleClose","type","useReminderContext","reminderList","reminderLoading","temp","filter","el","diff","date","isMdDown","navigate","useNavigate","compToPrint","useRef","PageHeader","mt","ToggleButtonGroup","exclusive","fullWidth","onChange","event","CusIconButton","currentTarget","Calendar2","pageStyle","documentTitle","trigger","Printer","content","current","Menu","MenuListProps","anchorEl","open","Boolean","onClose","pb","ListSubheader","pl","length","map","data","ROUTE_PATH","id","customer","customer_name","toUpperCase","BoxRemove","Popover","undefined","anchorOrigin","vertical","horizontal","transformOrigin","onSubmit","LocalizationProvider","dateAdapter","AdapterDateFns","render","field","LabelTextField","label","DatePicker","openTo","views","renderInput","CusTextField","Button","COLORS","Wedding","Birthday","Party","Other","ResponsiveContainer","PieChart","margin","bottom","left","right","Legend","Pie","innerRadius","outerRadius","paddingAngle","dataKey","_","index","Cell","fill","useState","currentTime","setCurrentTime","loadingDateRange","setLoadingDateRange","useRequest","manual","onSuccess","fetchDashTotal","run","isDashLoading","loading","chartData","isLoadingChart","interval","setInterval","clearInterval","CHART1_DATA","charts","MonthRanks","month","Events","amount","CHART2_DATA","Sales","profits","Expenses","expenses","getTables","tables","CustomTooltip","active","payload","default","parseInt","lg","Percentage","PercentFilter","MoneyRecive","info","DataFormater","MoneySend","StatusUp","Profile2User","pr","BarChart","barSize","layout","CartesianGrid","XAxis","domain","YAxis","Bar","orientation","flexGrow","overflow","pt","top","zIndex","reminder","i","getCount","days","formatCash","tickFormatter","Divider","borderBottomWidth","borderColor","paidBy","paidByColor","ACLEDA","ABA","WING","BAKONG","CANADIA","Cash","unitList","eventList","EnumCustomerType","EnumGenderType","EnumSocialType","EnumStockType","MonthKH","January","February","March","April","May","June","July","August","September","October","November","December","week","year","StockTypeDescription","STOCK","NON_STOCK","validatePatterns","phoneNumber","numberOnly","positiveNumberOnly","positiveNumberOnlyandEmpty","email","textOnly","n","toLocaleString","minimumFractionDigits","toFixed","hash","charCodeAt","toString","number","notation","compactDisplay","pageStyleGrocery"],"sourceRoot":""}